{"version":3,"file":"main.45688ec094d2685c7625.js","mappings":"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","sources":["webpack://mk_stream/webpack/runtime/chunk loaded","webpack://mk_stream/webpack/runtime/create fake namespace object","webpack://mk_stream/./src/utils/history.js","webpack://mk_stream/./src/theme/additions/card/card.js","webpack://mk_stream/./src/theme/components/button.js","webpack://mk_stream/./src/theme/components/badge.js","webpack://mk_stream/./src/theme/components/input.js","webpack://mk_stream/./src/theme/components/progress.js","webpack://mk_stream/./src/theme/components/slider.js","webpack://mk_stream/./src/theme/components/textarea.js","webpack://mk_stream/./src/theme/components/switch.js","webpack://mk_stream/./src/theme/foundations/breakpoints.js","webpack://mk_stream/./src/theme/styles.js","webpack://mk_stream/./src/theme/theme.js","webpack://mk_stream/./src/theme/components/link.js","webpack://mk_stream/./src/translation/i18n.js","webpack://mk_stream/./src/contexts/index.js","webpack://mk_stream/./src/components/card/Card.js","webpack://mk_stream/./src/components/card/MiniStatistics.js","webpack://mk_stream/./src/components/icons/IconBox.js","webpack://mk_stream/./src/variables/index.js","webpack://mk_stream/./src/views/admin/list-user-livestream/components/StaticStream.jsx","webpack://mk_stream/./src/api/Stream/endpoints.js","webpack://mk_stream/./src/api/ApiFactory.js","webpack://mk_stream/./src/api/Stream/index.js","webpack://mk_stream/./src/utils/handleValidate.js","webpack://mk_stream/./src/contexts/authenContext.js","webpack://mk_stream/./src/views/admin/profile/components/LeftMenu.jsx","webpack://mk_stream/./src/assets/img/avatars/avatar.png","webpack://mk_stream/./src/assets/img/auth/banner.png","webpack://mk_stream/./src/views/admin/profile/components/TabProfile.jsx","webpack://mk_stream/./src/api/Auth/endpoints.js","webpack://mk_stream/./src/api/Auth/index.js","webpack://mk_stream/./src/views/admin/profile/components/TabPassword.jsx","webpack://mk_stream/./src/assets/img/empty_bg_2.png","webpack://mk_stream/./src/views/admin/profile/components/TablePayment.jsx","webpack://mk_stream/./src/views/admin/profile/components/TabPayment.jsx","webpack://mk_stream/./src/views/admin/profile/components/RightContent.jsx","webpack://mk_stream/./src/api/UserPackage/endpoints.js","webpack://mk_stream/./src/api/UserPackage/index.js","webpack://mk_stream/./src/views/admin/create-livestream/components/VideoCardInfo.jsx","webpack://mk_stream/./src/assets/img/no-video-stream.png","webpack://mk_stream/./src/views/admin/create-livestream/components/InputVideoStep.jsx","webpack://mk_stream/./src/views/admin/create-livestream/components/ConfigureStreamStep.jsx","webpack://mk_stream/./src/views/admin/create-livestream/components/FinalStep.jsx","webpack://mk_stream/./src/views/admin/create-livestream/components/ModalAddUrl.jsx","webpack://mk_stream/./src/contexts/pagination.js","webpack://mk_stream/./src/components/paginationCustom/Pagination.jsx","webpack://mk_stream/./src/views/admin/create-livestream/thread-component/MenuVideo.jsx","webpack://mk_stream/./src/assets/img/video-youtube.png","webpack://mk_stream/./src/views/admin/create-livestream/thread-component/ModalStreamVideo.jsx","webpack://mk_stream/./src/views/admin/create-livestream/thread-component/DetailVideoLivestream.jsx","webpack://mk_stream/./src/views/admin/create-livestream/thread-component/TableSubRow.jsx","webpack://mk_stream/./src/views/admin/create-livestream/display-video-component/FilterHeader.jsx","webpack://mk_stream/./src/views/admin/create-livestream/display-video-component/VideoStreamTable.jsx","webpack://mk_stream/./src/views/admin/create-livestream/thread-component/EditVideoLivestream.jsx","webpack://mk_stream/./src/components/searchBar/SearchBar.jsx","webpack://mk_stream/./src/views/admin/create-livestream/display-video-component/FilterForm.jsx","webpack://mk_stream/./src/views/admin/create-livestream/index.jsx","webpack://mk_stream/./src/views/admin/list-user-livestream/components/TableListLiveStream.jsx","webpack://mk_stream/./src/views/admin/list-user-livestream/components/MenuUserStream.jsx","webpack://mk_stream/./src/views/admin/list-user-livestream/components/ModalCustom.jsx","webpack://mk_stream/./src/views/admin/list-user-livestream/components/EditUserStream.jsx","webpack://mk_stream/./src/views/admin/list-user-livestream/components/TableEmpty.jsx","webpack://mk_stream/./src/views/admin/list-user-livestream/components/FilterHeader.jsx","webpack://mk_stream/./src/views/admin/list-user-livestream/components/FilterForm.jsx","webpack://mk_stream/./src/components/modal/ModalCustomGeneral.jsx","webpack://mk_stream/./src/views/admin/list-user-livestream/index.jsx","webpack://mk_stream/./src/views/admin/manage-admin-livestream/components/MenuAgent.jsx","webpack://mk_stream/./src/views/admin/manage-admin-livestream/components/FilterHeader.jsx","webpack://mk_stream/./src/views/admin/manage-admin-livestream/components/CreateNewPackage.jsx","webpack://mk_stream/./src/views/admin/manage-admin-livestream/components/TableUserManager.jsx","webpack://mk_stream/./src/components/AvatarText.js","webpack://mk_stream/./src/views/admin/list-account-user/components/MenuAgent.jsx","webpack://mk_stream/./src/views/admin/list-account-user/components/FilterHeader.jsx","webpack://mk_stream/./src/views/admin/list-account-user/components/TableUserManager.jsx","webpack://mk_stream/./src/views/admin/list-account-user/components/CreateNewPackage.jsx","webpack://mk_stream/./src/views/admin/package-plan/components/TabPayment.jsx","webpack://mk_stream/./src/views/admin/package-plan/components/ModalStreamVideo.jsx","webpack://mk_stream/./src/views/admin/package-plan/index.jsx","webpack://mk_stream/./src/components/fixedPlugin/FixedPlugin.js","webpack://mk_stream/./src/layouts/auth/Default.js","webpack://mk_stream/./src/assets/img/auth/auth.png","webpack://mk_stream/./src/assets/img/logo.svg","webpack://mk_stream/./src/views/auth/signIn/index.jsx","webpack://mk_stream/./src/views/auth/register/index.jsx","webpack://mk_stream/./src/views/auth/forgotPassword/index.jsx","webpack://mk_stream/./src/assets/img/PaymentQRCode.jpg","webpack://mk_stream/./src/views/admin/package-plan/components/ModalPackageConfirm.jsx","webpack://mk_stream/./src/views/admin/server-livestream/components/TableManageServerLivestream.jsx","webpack://mk_stream/./src/views/admin/server-livestream/components/MenuAgent.jsx","webpack://mk_stream/./src/views/admin/server-livestream/components/EditAgentServer.jsx","webpack://mk_stream/./src/views/admin/server-livestream/components/FilterHeader.jsx","webpack://mk_stream/./src/views/admin/server-livestream/components/CreateAgentServer.jsx","webpack://mk_stream/./src/views/admin/server-livestream/components/DetailAgentServer.jsx","webpack://mk_stream/./src/views/admin/server-livestream/components/AssignAgentFor.jsx","webpack://mk_stream/./src/views/admin/server-livestream/components/FormFilterCustom.jsx","webpack://mk_stream/./src/views/admin/server-livestream/components/AssignResellerFor.jsx","webpack://mk_stream/./src/views/admin/server-livestream/index.jsx","webpack://mk_stream/./src/layouts/blank/Default.js","webpack://mk_stream/./src/views/admin/manage-google-key/components/FilterHeader.jsx","webpack://mk_stream/./src/views/admin/manage-google-key/components/TableUserManager.jsx","webpack://mk_stream/./src/api/GoogleKey/endpoints.js","webpack://mk_stream/./src/api/GoogleKey/index.js","webpack://mk_stream/./src/views/admin/manage-google-key/components/CreateGoogleKey.jsx","webpack://mk_stream/./src/views/admin/manage-google-key/components/MenuAgent.jsx","webpack://mk_stream/./src/views/admin/manage-google-key/components/DetailGoogleKey.jsx","webpack://mk_stream/./src/views/admin/manage-google-key/components/EditGoogleKey.jsx","webpack://mk_stream/./src/routes.js","webpack://mk_stream/./src/views/admin/default/index.jsx","webpack://mk_stream/./src/views/admin/profile/index.jsx","webpack://mk_stream/./src/views/admin/list-account-user/index.jsx","webpack://mk_stream/./src/views/admin/manage-admin-livestream/index.jsx","webpack://mk_stream/./src/views/admin/manage-google-key/index.jsx","webpack://mk_stream/./src/views/blank/policy.jsx","webpack://mk_stream/./src/views/admin/package-plan/PurchasePackage.jsx","webpack://mk_stream/./src/layouts/auth/index.js","webpack://mk_stream/./src/layouts/blank/index.js","webpack://mk_stream/./src/components/navbar/NavbarLinksAdmin.js","webpack://mk_stream/./src/components/navbar/NavbarAdmin.js","webpack://mk_stream/./src/components/separator/Separator.jsx","webpack://mk_stream/./src/components/sidebar/components/Brand.js","webpack://mk_stream/./src/components/sidebar/components/Links.js","webpack://mk_stream/./src/components/sidebar/components/SidebarCard.js","webpack://mk_stream/./src/components/sidebar/components/Content.js","webpack://mk_stream/./src/components/scrollbar/Scrollbar.js","webpack://mk_stream/./src/components/sidebar/Sidebar.js","webpack://mk_stream/./src/layouts/admin/index.js","webpack://mk_stream/./src/layouts/notfound/index.jsx","webpack://mk_stream/./src/hook/protectedRoutes.jsx","webpack://mk_stream/./src/App.js","webpack://mk_stream/./src/assets/css/App.css?5436","webpack://mk_stream/./src/assets/css/Notfound.css?85a9","webpack://mk_stream/./src/assets/css/Spinner.css?a833","webpack://mk_stream/./src/assets/css/Pagination.css?1861","webpack://mk_stream/./src/index.js","webpack://mk_stream/./src/assets/css/App.css","webpack://mk_stream/./src/assets/css/Notfound.css","webpack://mk_stream/./src/assets/css/Pagination.css","webpack://mk_stream/./src/assets/css/Spinner.css","webpack://mk_stream/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://mk_stream/webpack/bootstrap","webpack://mk_stream/webpack/runtime/amd options","webpack://mk_stream/webpack/runtime/compat get default export","webpack://mk_stream/webpack/runtime/define property getters","webpack://mk_stream/webpack/runtime/global","webpack://mk_stream/webpack/runtime/hasOwnProperty shorthand","webpack://mk_stream/webpack/runtime/make namespace object","webpack://mk_stream/webpack/runtime/node module decorator","webpack://mk_stream/webpack/runtime/publicPath","webpack://mk_stream/webpack/runtime/jsonp chunk loading","webpack://mk_stream/webpack/runtime/nonce","webpack://mk_stream/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","/* eslint-disable */\nimport { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({forceRefresh:true});\n","/* eslint-disable */\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nconst Card = {\n  baseStyle: (props) => ({\n    p: \"20px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    position: \"relative\",\n    borderRadius: \"20px\",\n    minWidth: \"0px\",\n    wordWrap: \"break-word\",\n    bg: mode(\"#ffffff\", \"navy.800\")(props),\n    backgroundClip: \"border-box\",\n  }),\n};\n\nconst CardComponent = {\n  components: {\n    Card,\n  },\n};\n\nexport default CardComponent;","/* eslint-disable */\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const buttonStyles = {\n  components: {\n    Button: {\n      baseStyle: {\n        borderRadius: \"16px\",\n        boxShadow: \"45px 76px 113px 7px rgba(112, 144, 176, 0.08)\",\n        transition: \".25s all ease\",\n        boxSizing: \"border-box\",\n        _focus: {\n          boxShadow: \"none\",\n        },\n        _active: {\n          boxShadow: \"none\",\n        },\n      },\n      variants: {\n        outline: () => ({\n          borderRadius: \"16px\",\n        }),\n        brand: (props) => ({\n          bg: mode(\"brand.500\", \"brand.400\")(props),\n          color: \"white\",\n          _focus: {\n            bg: mode(\"brand.500\", \"brand.400\")(props),\n          },\n          _active: {\n            bg: mode(\"brand.500\", \"brand.400\")(props),\n          },\n          _hover: {\n            bg: mode(\"brand.600\", \"brand.400\")(props),\n          },\n        }),\n        darkBrand: (props) => ({\n          bg: mode(\"brand.900\", \"brand.400\")(props),\n          color: \"white\",\n          _focus: {\n            bg: mode(\"brand.900\", \"brand.400\")(props),\n          },\n          _active: {\n            bg: mode(\"brand.900\", \"brand.400\")(props),\n          },\n          _hover: {\n            bg: mode(\"brand.800\", \"brand.400\")(props),\n          },\n        }),\n        lightBrand: (props) => ({\n          bg: mode(\"#F2EFFF\", \"whiteAlpha.100\")(props),\n          color: mode(\"brand.500\", \"white\")(props),\n          _focus: {\n            bg: mode(\"#F2EFFF\", \"whiteAlpha.100\")(props),\n          },\n          _active: {\n            bg: mode(\"secondaryGray.300\", \"whiteAlpha.100\")(props),\n          },\n          _hover: {\n            bg: mode(\"secondaryGray.400\", \"whiteAlpha.200\")(props),\n          },\n        }),\n        light: (props) => ({\n          bg: mode(\"secondaryGray.300\", \"whiteAlpha.100\")(props),\n          color: mode(\"secondaryGray.900\", \"white\")(props),\n          _focus: {\n            bg: mode(\"secondaryGray.300\", \"whiteAlpha.100\")(props),\n          },\n          _active: {\n            bg: mode(\"secondaryGray.300\", \"whiteAlpha.100\")(props),\n          },\n          _hover: {\n            bg: mode(\"secondaryGray.400\", \"whiteAlpha.200\")(props),\n          },\n        }),\n        action: (props) => ({\n          fontWeight: \"500\",\n          borderRadius: \"50px\",\n          bg: mode(\"secondaryGray.300\", \"brand.400\")(props),\n          color: mode(\"brand.500\", \"white\")(props),\n          _focus: {\n            bg: mode(\"secondaryGray.300\", \"brand.400\")(props),\n          },\n          _active: { bg: mode(\"secondaryGray.300\", \"brand.400\")(props) },\n          _hover: {\n            bg: mode(\"secondaryGray.200\", \"brand.400\")(props),\n          },\n        }),\n        setup: (props) => ({\n          fontWeight: \"500\",\n          borderRadius: \"50px\",\n          bg: mode(\"transparent\", \"brand.400\")(props),\n          border: mode(\"1px solid\", \"0px solid\")(props),\n          borderColor: mode(\"secondaryGray.400\", \"transparent\")(props),\n          color: mode(\"secondaryGray.900\", \"white\")(props),\n          _focus: {\n            bg: mode(\"transparent\", \"brand.400\")(props),\n          },\n          _active: { bg: mode(\"transparent\", \"brand.400\")(props) },\n          _hover: {\n            bg: mode(\"secondaryGray.100\", \"brand.400\")(props),\n          },\n        }),\n      },\n    },\n  },\n};\n","/* eslint-disable */\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const badgeStyles = {\n  components: {\n    Badge: {\n      baseStyle: {\n        borderRadius: \"10px\",\n        lineHeight: \"100%\",\n        padding: \"7px\",\n        paddingLeft: \"12px\",\n        paddingRight: \"12px\",\n      },\n      variants: {\n        outline: () => ({\n          borderRadius: \"16px\",\n        }),\n        brand: (props) => ({\n          bg: mode(\"brand.500\", \"brand.400\")(props),\n          color: \"white\",\n          _focus: {\n            bg: mode(\"brand.500\", \"brand.400\")(props),\n          },\n          _active: {\n            bg: mode(\"brand.500\", \"brand.400\")(props),\n          },\n          _hover: {\n            bg: mode(\"brand.600\", \"brand.400\")(props),\n          },\n        }),\n      },\n    },\n  },\n};\n","/* eslint-disable */\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const inputStyles = {\n  components: {\n    Input: {\n      baseStyle: {\n        field: {\n          fontWeight: 400,\n          borderRadius: \"8px\",\n        },\n      },\n\n      variants: {\n        main: (props) => ({\n          field: {\n            bg: mode(\"transparent\", \"navy.800\")(props),\n            border: \"1px solid\",\n            color: mode(\"secondaryGray.900\", \"white\")(props),\n            borderColor: mode(\"secondaryGray.100\", \"whiteAlpha.100\")(props),\n            borderRadius: \"16px\",\n            fontSize: \"sm\",\n            p: \"20px\",\n            _placeholder: { color: \"secondaryGray.400\" },\n          },\n        }),\n        auth: (props) => ({\n          field: {\n            fontWeight: \"500\",\n            color: mode(\"navy.700\", \"white\")(props),\n            bg: mode(\"transparent\", \"transparent\")(props),\n            border: \"1px solid\",\n            borderColor: mode(\n              \"secondaryGray.100\",\n              \"rgba(135, 140, 189, 0.3)\"\n            )(props),\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\", fontWeight: \"400\" },\n          },\n        }),\n        authSecondary: (props) => ({\n          field: {\n            bg: \"transparent\",\n            border: \"1px solid\",\n            borderColor: \"secondaryGray.100\",\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n        search: (props) => ({\n          field: {\n            border: \"none\",\n            py: \"11px\",\n            borderRadius: \"inherit\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n      },\n    },\n    NumberInput: {\n      baseStyle: {\n        field: {\n          fontWeight: 400,\n        },\n      },\n\n      variants: {\n        main: (props) => ({\n          field: {\n            bg: \"transparent\",\n            border: \"1px solid\",\n\n            borderColor: \"secondaryGray.100\",\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n        auth: (props) => ({\n          field: {\n            bg: \"transparent\",\n            border: \"1px solid\",\n\n            borderColor: \"secondaryGray.100\",\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n        authSecondary: (props) => ({\n          field: {\n            bg: \"transparent\",\n            border: \"1px solid\",\n\n            borderColor: \"secondaryGray.100\",\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n        search: (props) => ({\n          field: {\n            border: \"none\",\n            py: \"11px\",\n            borderRadius: \"inherit\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n      },\n    },\n    Select: {\n      baseStyle: {\n        field: {\n          fontWeight: 400,\n        },\n      },\n\n      variants: {\n        main: (props) => ({\n          field: {\n            bg: mode(\"transparent\", \"navy.800\")(props),\n            border: \"1px solid\",\n            color: \"secondaryGray.600\",\n            borderColor: mode(\"secondaryGray.100\", \"whiteAlpha.100\")(props),\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n          icon: {\n            color: \"secondaryGray.600\",\n          },\n        }),\n        mini: (props) => ({\n          field: {\n            bg: mode(\"transparent\", \"navy.800\")(props),\n            border: \"0px solid transparent\",\n            fontSize: \"0px\",\n            p: \"10px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n          icon: {\n            color: \"secondaryGray.600\",\n          },\n        }),\n        subtle: (props) => ({\n          box: {\n            width: \"unset\",\n          },\n          field: {\n            bg: \"transparent\",\n            border: \"0px solid\",\n            color: \"secondaryGray.600\",\n            borderColor: \"transparent\",\n            width: \"max-content\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n          icon: {\n            color: \"secondaryGray.600\",\n          },\n        }),\n        transparent: (props) => ({\n          field: {\n            bg: \"transparent\",\n            border: \"0px solid\",\n            width: \"min-content\",\n            color: mode(\"secondaryGray.600\", \"secondaryGray.600\")(props),\n            borderColor: \"transparent\",\n            padding: \"0px\",\n            paddingLeft: \"8px\",\n            paddingRight: \"20px\",\n            fontWeight: \"700\",\n            fontSize: \"14px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n          icon: {\n            transform: \"none !important\",\n            position: \"unset !important\",\n            width: \"unset\",\n            color: \"secondaryGray.600\",\n            right: \"0px\",\n          },\n        }),\n        auth: (props) => ({\n          field: {\n            bg: \"transparent\",\n            border: \"1px solid\",\n\n            borderColor: \"secondaryGray.100\",\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n        authSecondary: (props) => ({\n          field: {\n            bg: \"transparent\",\n            border: \"1px solid\",\n\n            borderColor: \"secondaryGray.100\",\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n        search: (props) => ({\n          field: {\n            border: \"none\",\n            py: \"11px\",\n            borderRadius: \"inherit\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n      },\n    },\n    // PinInputField: {\n    //   variants: {\n    //     main: (props) => ({\n    //       field: {\n    //         bg: \"red !important\",\n    //         border: \"1px solid\",\n    //         color: mode(\"secondaryGray.900\", \"white\")(props),\n    //         borderColor: mode(\"secondaryGray.100\", \"whiteAlpha.100\")(props),\n    //         borderRadius: \"16px\",\n    //         _placeholder: { color: \"secondaryGray.600\" },\n    //       },\n    //     }),\n    //   },\n    // },\n  },\n};\n","/* eslint-disable */\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const progressStyles = {\n  components: {\n    Progress: {\n      baseStyle: {\n        field: {\n          fontWeight: 400,\n          w: \"16px\",\n          h: \"16px\",\n          borderRadius: \"20px\",\n          _checked: { transform: \"translate(20px, 0px)\" },\n        },\n        track: {\n          w: \"40px\",\n          h: \"20px\",\n          borderRadius: \"20px\",\n          _focus: {\n            boxShadow: \"none\",\n          },\n        },\n      },\n\n      variants: {\n        table: (props) => ({\n          field: {\n            bg: \"brand.500\",\n            borderRadius: \"16px\",\n            fontSize: \"sm\",\n          },\n          track: {\n            borderRadius: \"20px\",\n            bg: mode(\"blue.50\", \"whiteAlpha.50\")(props),\n            h: \"8px\",\n            w: \"54px\",\n          },\n          thumb: {\n            w: \"250px\",\n          },\n        }),\n      },\n    },\n  },\n};\n","/* eslint-disable */\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const sliderStyles = {\n  components: {\n    RangeSlider: {\n      // baseStyle: {\n      //   thumb: {\n      //     fontWeight: 400,\n      //   },\n      //   track: {\n      //     display: \"flex\",\n      //   },\n      // },\n\n      variants: {\n        main: (props) => ({\n          thumb: {\n            bg: mode(\"brand.500\", \"brand.400\")(props),\n          },\n        }),\n      },\n    },\n  },\n};\n","/* eslint-disable */\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const textareaStyles = {\n  components: {\n    Textarea: {\n      baseStyle: {\n        field: {\n          fontWeight: 400,\n          borderRadius: \"8px\",\n        },\n      },\n\n      variants: {\n        main: (props) => ({\n          field: {\n            bg: mode(\"transparent\", \"navy.800\")(props),\n            border: \"1px solid !important\",\n            color: mode(\"secondaryGray.900\", \"white\")(props),\n            borderColor: mode(\"secondaryGray.100\", \"whiteAlpha.100\")(props),\n            borderRadius: \"16px\",\n            fontSize: \"sm\",\n            p: \"20px\",\n            _placeholder: { color: \"secondaryGray.400\" },\n          },\n        }),\n        auth: (props) => ({\n          field: {\n            bg: \"white\",\n            border: \"1px solid\",\n            borderColor: \"secondaryGray.100\",\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n        authSecondary: (props) => ({\n          field: {\n            bg: \"white\",\n            border: \"1px solid\",\n\n            borderColor: \"secondaryGray.100\",\n            borderRadius: \"16px\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n        search: (props) => ({\n          field: {\n            border: \"none\",\n            py: \"11px\",\n            borderRadius: \"inherit\",\n            _placeholder: { color: \"secondaryGray.600\" },\n          },\n        }),\n      },\n    },\n  },\n};\n","/* eslint-disable */\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const switchStyles = {\n  components: {\n    Switch: {\n      baseStyle: {\n        thumb: {\n          fontWeight: 400,\n          borderRadius: \"50%\",\n          w: \"16px\",\n          h: \"16px\",\n          _checked: { transform: \"translate(20px, 0px)\" },\n        },\n        track: {\n          display: \"flex\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          w: \"40px\",\n          h: \"20px\",\n          p: \"2px\",\n          ps: \"2px\",\n          _focus: {\n            boxShadow: \"none\",\n          },\n        },\n      },\n\n      variants: {\n        main: (props) => ({\n          track: {\n            bg: mode(\"gray.300\", \"navy.700\")(props),\n          },\n        }),\n      },\n    },\n  },\n};\n","/* eslint-disable */\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\";\n\nexport const breakpoints = createBreakpoints({\n  sm: \"320px\",\n  \"2sm\": \"380px\",\n  md: \"768px\",\n  lg: \"960px\",\n  xl: \"1200px\",\n  \"2xl\": \"1600px\",\n  \"3xl\": \"1920px\",\n});\n","/* eslint-disable */\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const globalStyles = {\n  colors: {\n    brand: {\n      100: \"#E9E3FF\",\n      200: \"#422AFB\",\n      300: \"#422AFB\",\n      400: \"#7551FF\",\n      500: \"#422AFB\",\n      600: \"#3311DB\",\n      700: \"#02044A\",\n      800: \"#190793\",\n      900: \"#11047A\",\n    },\n    brandScheme: {\n      100: \"#E9E3FF\",\n      200: \"#7551FF\",\n      300: \"#7551FF\",\n      400: \"#7551FF\",\n      500: \"#422AFB\",\n      600: \"#3311DB\",\n      700: \"#02044A\",\n      800: \"#190793\",\n      900: \"#02044A\",\n    },\n    brandTabs: {\n      100: \"#E9E3FF\",\n      200: \"#422AFB\",\n      300: \"#422AFB\",\n      400: \"#422AFB\",\n      500: \"#422AFB\",\n      600: \"#3311DB\",\n      700: \"#02044A\",\n      800: \"#190793\",\n      900: \"#02044A\",\n    },\n    secondaryGray: {\n      100: \"#E0E5F2\",\n      200: \"#E1E9F8\",\n      300: \"#F4F7FE\",\n      400: \"#E9EDF7\",\n      500: \"#8F9BBA\",\n      600: \"#A3AED0\",\n      700: \"#707EAE\",\n      800: \"#707EAE\",\n      900: \"#1B2559\",\n    },\n    red: {\n      100: \"#FEEFEE\",\n      500: \"#EE5D50\",\n      600: \"#E31A1A\",\n    },\n    blue: {\n      50: \"#EFF4FB\",\n      500: \"#3965FF\",\n    },\n    orange: {\n      100: \"#FFF6DA\",\n      500: \"#FFB547\",\n    },\n    green: {\n      100: \"#E6FAF5\",\n      500: \"#01B574\",\n    },\n    navy: {\n      50: \"#d0dcfb\",\n      100: \"#aac0fe\",\n      200: \"#a3b9f8\",\n      300: \"#728fea\",\n      400: \"#3652ba\",\n      500: \"#1b3bbb\",\n      600: \"#24388a\",\n      700: \"#1B254B\",\n      800: \"#111c44\",\n      900: \"#0b1437\",\n    },\n    gray: {\n      100: \"#FAFCFE\",\n    },\n  },\n  fonts: {\n    heading: `'Inter', sans-serif`, // Apply 'Inter' for headings\n    body: `'Inter', sans-serif`,    // Apply 'Inter' for body text\n    mono: `'Inter', sans-serif`,    // Apply 'Inter' for monospace/other\n  },\n  styles: {\n    global: (props) => ({\n      body: {\n        overflowX: \"hidden\",\n        bg: mode(\"secondaryGray.300\", \"navy.900\")(props),\n        letterSpacing: \"-0.5px\",\n        fontFamily: `'Inter', sans-serif`, // Apply globally for body\n      },\n      input: {\n        color: \"gray.700\",\n        fontFamily: `'Inter', sans-serif`, // Apply to input fields\n      },\n      html: {\n        fontFamily: `'Inter', sans-serif`, // Apply to the entire html document\n      },\n      h1: {\n        fontFamily: `'Inter', sans-serif`, // Ensure headings use the font\n      },\n      h2: {\n        fontFamily: `'Inter', sans-serif`,\n      },\n      h3: {\n        fontFamily: `'Inter', sans-serif`,\n      },\n    }),\n  },\n};\n","import { extendTheme } from \"@chakra-ui/react\";\nimport CardComponent from \"./additions/card/card\";\nimport { buttonStyles } from \"./components/button\";\nimport { badgeStyles } from \"./components/badge\";\nimport { inputStyles } from \"./components/input\";\nimport { progressStyles } from \"./components/progress\";\nimport { sliderStyles } from \"./components/slider\";\nimport { textareaStyles } from \"./components/textarea\";\nimport { switchStyles } from \"./components/switch\";\nimport { linkStyles } from \"./components/link\";\nimport { breakpoints } from \"./foundations/breakpoints\";\nimport { globalStyles } from \"./styles\";\n\nexport default extendTheme(\n  { breakpoints }, // Breakpoints\n  globalStyles,\n  badgeStyles, // badge styles\n  buttonStyles, // button styles\n  linkStyles, // link styles\n  progressStyles, // progress styles\n  sliderStyles, // slider styles\n  inputStyles, // input styles\n  textareaStyles, // textarea styles\n  switchStyles, // switch styles\n  CardComponent // card component,\n);\n","/* eslint-disable */\nexport const linkStyles = {\n    components: {\n      \n      Link: {\n          baseStyle: {\n            textDecoration: \"none\",\n              boxShadow: \"none\",\n            _focus: {\n                boxShadow: \"none\"\n            },\n            _active: {\n                boxShadow: \"none\"\n            },\n            _hover: {\n              textDecoration: \"none\",\n              border: \"none\"\n            }\n\n          },\n          _hover: {\n            textDecoration: \"none\",\n            border: \"none\"\n          }\n      },\n    },\n  };","import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\n\nimport translationEN from '../locales/en/translation.json';\nimport translationVI from '../locales/vi/translation.json';\n\n// the translations\nconst resources = {\n    en: {\n        translation: translationEN\n    },\n    vi: {\n        translation: translationVI\n    }\n};\n\ni18n\n    .use(Backend)\n    .use(initReactI18next)\n    .init({\n        resources,\n        fallbackLng: process.env.LANGUAGE_DEFAULT,\n        debug: false,\n        interpolation: {\n            escapeValue: false // not needed for react as it escapes by default\n        }\n    });\n\nexport default i18n;\n\n","/* eslint-disable */\nimport { createContext } from \"react\";\n\nconst SidebarContext = createContext();\nexport default SidebarContext;\n","/* eslint-disable */\nimport React from 'react';\nimport { Box, useStyleConfig } from \"@chakra-ui/react\";\n\nfunction Card(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"Card\", { variant });\n\n  return (\n    <Box __css={styles} {...rest} borderRadius={7}>\n      {children}\n    </Box>\n  );\n}\n\nexport default Card;\n","/* eslint-disable */\n\nimport React from \"react\";\nimport {\n  Flex,\n  Stat,\n  StatLabel,\n  StatNumber,\n  useColorModeValue\n} from \"@chakra-ui/react\";\nimport Card from \"./Card\";\n\nexport default function MiniStatistics(props) {\n  const { startContent, endContent, name, value, bgColor } = props;\n  const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\n  const textColorSecondary = \"gray\";\n\n  return (\n    <Card p='16px' bgColor={bgColor || 'white'}>\n      <Flex\n        my='auto'\n        h='100%'\n        align={{ base: \"center\", xl: \"start\" }}\n        justify={{ base: \"center\", xl: \"center\" }}>\n        {startContent}\n\n        <Stat my='auto' ms={startContent ? \"18px\" : \"0px\"}>\n          <StatLabel\n            lineHeight='100%'\n            color={textColorSecondary}\n            fontSize={{\n              base: \"sm\",\n            }}>\n            {name}\n          </StatLabel>\n          <StatNumber\n            color={textColor}\n            fontSize={{\n              base: \"xl\",\n            }}>\n            {value} video\n          </StatNumber>\n        </Stat>\n        <Flex ms='auto' w='max-content'>\n          {endContent}\n        </Flex>\n      </Flex>\n    </Card>\n  );\n}\n","/* eslint-disable */\nimport React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nexport default function IconBox(props) {\n  const { icon, ...rest } = props;\n\n  return (\n    <Flex\n      alignItems={\"center\"}\n      justifyContent={\"center\"}\n      borderRadius={\"50%\"}\n      {...rest}>\n      {icon}\n    </Flex>\n  );\n}\n","import { MdCloudDownload, MdOutlineClose, MdOutlineDone, MdOutlineError, MdPause, MdPlayArrow, MdWatchLater } from \"react-icons/md\";\n\n/* eslint-disable */\nconst config = {\n    develop: {\n        API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT || 'http://localhost:17100'\n    },\n    production: {\n        API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT || 'http://localhost:17100'\n    }\n};\n\nexport const MK_AGENCY_PROVIDER = \"stream.api-mht.com\";\n\nexport const regexYoutubeLink = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n\nexport const regexProtocol = /^(http(s)?:\\/\\/)[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\n\nexport const BASE_URL=process.env.REACT_APP_API_URL;\n\nexport const PACKAGE_ITEM_COLOR = [\n  {\n    packageColor: \"orange\",\n    textColor: \"black\",\n  },\n  {\n    packageColor: \"green\",\n    textColor: \"white\",\n  },\n  {\n    packageColor: \"blue\",\n    textColor: \"white\",\n  },\n  {\n    packageColor: \"purple\",\n    textColor: \"white\",\n  },\n  {\n    packageColor: \"teal\",\n    textColor: \"black\",\n  },\n];\n\n// 7 seconds timeout request\nexport const TIMEOUT_REQUEST_API = 70000;\n\nexport const MESSSAGE_STATUS_CODE = {\n    SUCCESS: {\n        code: 200,\n        message: 'Success'\n    },\n    INTERNAL_NETWORK_ERROR: {\n        code: 500,\n        message: 'Internal network error'\n    },\n    NO_CONTENT: {\n        code: 204,\n        message: 'No content'\n    },\n    NOT_FOUND: {\n        code: 404,\n        message: 'Not found'\n    },\n    BAD_REQUEST: {\n        code: 400,\n        message: 'Bad request'\n    },\n    UNAUTHORISED: {\n        code: 401,\n        message: 'Unauthorized'\n    },\n    INVALID_BODY: {\n        code: 403,\n        message: 'Invalid body'\n    },\n    UNDER_CONSTRUCTION: {\n        code: 593,\n        message: 'System is currently undergoing maintenance. Please try again later.'\n    },\n    PERMISSION_DENIED: {\n        code: 406,\n        message: 'Permission Denied'\n    },\n    WRONG_PAGINATION: {\n        code: 407,\n        message: 'Wrong pagination query'\n    },\n    INVALID_PASSWORD: {\n        code: 4000,\n        message: 'Invalid password'\n    },\n    INVALID_BODY: {\n        code: 4001,\n        message: 'Invalid body'\n    },\n    INVALID_EMAIL: {\n        code: 4002,\n        message: 'Invalid email'\n    },\n    USER_REGISTERED: {\n        code: 4003,\n        message: 'User already registered'\n    },\n    USER_NOT_FOUND: {\n        code: 4004,\n        message: 'User not found'\n    },\n    EMAIL_PASSWORD_INVALID: {\n        code: 4005,\n        message: 'Email or password invalid'\n    },\n    WRONG_PAGINATION_QUERY: {\n        code: 4006,\n        message: 'Wrong pagination query'\n    },\n    WRONG_BODY: {\n        code: 5002,\n        message: 'Wrong body'\n    },\n    PACKAGE_CONFIRMED: {\n        code: 5003,\n        message: 'Package already confirmed'\n    },\n    INVALID_PACKAGE_DAYS: {\n        code: 5004,\n        message: 'Invalid package days. Must be multiple of 30'\n    },\n    TRAIL_PACKAGE_CREATED: {\n        code: 5005,\n        message: 'Trial package already created'\n    },\n    INVALID_PACKAGE_NAME: {\n        code: 5006,\n        message: 'Invalid package name'\n    },\n    CONFLICT_TIME_STREAM: {\n        code: 3001,\n        message: 'Conflict time stream'\n    },\n    INVALID_RESOLUTION: {\n        code: 3002,\n        message: 'Invalid resolution'\n    },\n    AGENT_EXISTS: {\n        code: 3503,\n        message: 'Agent exists'\n    },\n    INVALID_URL: {\n      code: 3003,\n      message: 'Invalid url'\n    },\n    INVAID_START_END_TIME: {\n      code: 3004,\n      message: 'Invalid start end time, ended time must be after started time, and ended time must be after now'\n    },\n    INVALID_YOUTUBE_STREAM_KEY: {\n      code: 3005,\n      message: 'Invalid youtube live stream key'\n    },\n    USER_STREAM_NOT_FOUND: {\n      code: 3006,\n      message: 'User stream not found'\n    },\n    STREAMING_NOT_FOUND: {\n      code: 3007,\n      message: 'Streaming not found'\n    },\n    STREAMING_NOT_RUNNING: {\n      code: 3008,\n      message: 'Streaming not running'\n    },\n    STREAMING_RUNNING: {\n      code: 3011,\n      message: 'Streaming is streaming'\n    },\n    STREAM_EXPIRED: {\n      code: 3010,\n      message: 'Stream expired'\n    },\n    STREAMING_AGENT_NOT_RUNNING: {\n      code: 3009,\n      message: 'Stream from agent not running'\n    },\n    NOT_FOUND_AGENT: {\n      code: 3504,\n      message: 'Not found agent'\n    },\n    AGENT_ASSIGNED: {\n      code: 3505,\n      message: 'Agent assigned'\n    },\n    AGENT_NOT_RUNNING: {\n      code: 3506,\n      message: 'Agent not running'\n    },\n    OUT_OF_MAX_STREAM: {\n      code: 3509,\n      message: 'Out of max stream'\n    },\n    ONLY_UPDATE_PENDING_STREAM: {\n      code: 3012,\n      message: 'Only update pending streaming'\n    },\n    ONLY_PLAY_PENDING_STREAM: {\n      code: 3013,\n      message: 'Only play pending streaming'\n    },\n    INVALID_ORDER_BY: {\n      code: 3014,\n      message: 'Invalid order by'\n    },\n    KEY_STREAM_EXIST_IN_OTHER: {\n      code: 3601,\n      message: 'Key of stream exists at other stream'\n    },\n    REFUSED_UPDATE_WHEN_STREAMING: {\n      code: 3602,\n      messsage: 'Can not update stream when it is livestreaming'\n    },\n    STREAMING_STATUS_DOWNLOADING: {\n      code: 6,\n      message: 'Video is dowloading'\n    }\n}\n\nexport const listOptionFieldVideo = [\n  {\n    label: 'Ngày bắt đầu, tăng dần',\n    value: 'started_at desc'\n  },\n  {\n      label: 'Ngày bắt đầu, giảm dần',\n      value: 'started_at asc'\n  },\n  {\n    label: 'Ngày kết thúc, tăng dần',\n    value: 'ended_at desc'\n  },\n  {\n      label: 'Ngày kết thúc, giảm dần',\n      value: 'ended_at asc'\n  },\n  {\n    label: 'Ngày tạo, tăng dần',\n    value: 'created_at desc'\n  },\n  {\n      label: 'Ngày tạo, giảm dần',\n      value: 'created_at asc'\n  }\n];\n\nexport const listOptionServerAgent = [\n  {\n    label: 'Ngày hết hạn, tăng dần',\n    value: 'expired_at desc'\n  },\n  {\n      label: 'Ngày hết hạn, giảm dần',\n      value: 'expired_at asc'\n  },\n]\n\nexport const statusFieldVideo = [\n  {\n      label: 'Đang chờ',\n      value: 0\n  },\n  {\n      label: 'Đang phát',\n      value: 1\n  },\n  {\n      label: 'Hoàn thành',\n      value: 2\n  },\n  {\n      label: 'Đã hủy',\n      value: 3\n  },\n  {\n      label: 'Video lỗi',\n      value: 4\n  },\n  {\n      label: 'Hết hạn',\n      value: 5\n  },\n]\n\nexport default config[process.env.NODE_ENV || 'develop'];\n\nexport const VIDEO_RESOLUTION_DEFAULT = {\n    '2160p' : {\n        resolution: '3840x2610',\n        name: '2160p',\n        quantity: '4K',\n        color: \"red\"\n    },\n    '1440p' : {\n        resolution: '2560x1440',\n        name: '1440p',\n        quantity: '2K',\n        color: \"red\"\n    },\n    '1080p' : {\n        resolution: '1920x1080',\n        name: '1080p',\n        quantity: 'Full HD',\n        color: \"red\"\n    },\n    '720p' : {\n        resolution: '1280x720',\n        name: '720p',\n        quantity: 'HD',\n        color: \"orange\"\n    },\n    '480p' : {\n        resolution: '854x480',\n        name: '480p',\n        quantity: 'Standard',\n        color: \"yellow\"\n    },\n    '360p' : {\n        resolution: '640x360',\n        name: '360p',\n        quantity: 'Normal',\n        color: \"yellow\"\n    },\n    '240p' : {\n        resolution: '426x240',\n        name: '240p',\n        quantity: 'Youtube mininum',\n        color: \"yellow\"\n    },\n  };\n \nexport const columnsInsertVideoStream = [\n  {\n    Header: \"#\",\n    accessor: \"order\",\n    maxWidth: 100,\n    minWidth: 70,\n    width: 70,\n  },\n  {\n    Header: \"VIDEO\",\n    accessor: \"video\",\n  },\n  {\n    Header: \"ACTION\",\n    accessor: \"action\",\n    maxWidth: 100,\n    minWidth: 50,\n    width: 70,\n  }\n];\n\nexport const MULTI_STEP_FORM_CREATE_STREAM = [\n  { title: 'Chọn video', description: \"\" },\n  { title: 'Cấu hình', description: \"\" },\n  { title: 'Thời gian', description: \"\" }\n];\n\nexport const columnsPaymentHistory = [\n  {\n    Header: \"TÊN GÓI\",\n    accessor: \"package_name\",\n  },\n  {\n    Header: \"THỜI HẠN\",\n    accessor: \"package_days\",\n  },\n  {\n    Header: \"SỐ LUỒNG\",\n    accessor: \"stream_number\"\n  },\n  {\n    Header: \"TỪ NGÀY\",\n    accessor: \"started_at\",\n  },\n  {\n    Header: \"ĐẾN NGÀY\",\n    accessor: \"expired_at\",\n  },\n  {\n    Header: \"GIÁ BAN ĐẦU\",\n    accessor: \"price\"\n  },\n  {\n    Header: \"KHUYẾN MÃI\",\n    accessor: \"discount\"\n  },\n  {\n    Header: \"TỔNG CỘNG\",\n    accessor: \"final_price\"\n  },\n  {\n    Header: \"HIỆU LỰC\",\n    accessor: \"confirmed\"\n  },\n];\n\nexport const listPricingMonthly = [\n  {\n      label: '1 Tháng',\n      value: 1\n  },\n  {\n      label: '2 Tháng',\n      value: 2\n  },\n  {\n      label: '3 Tháng',\n      value: 3\n  },\n  {\n      label: '4 Tháng',\n      value: 4\n  },\n  {\n      label: '5 Tháng',\n      value: 5\n  },\n  {\n      label: '6 Tháng',\n      value: 6\n  },\n  {\n      label: '9 Tháng',\n      value: 9\n  },\n  {\n      label: '12 Tháng',\n      value: 12\n  },\n]\n\n\nexport const listStreamThread = [\n  {\n      label: '100 luồng',\n      value: 100\n  },\n  {\n    label: '90 luồng',\n    value: 90\n  },\n  {\n    label: '60 luồng',\n    value: 60\n  },\n  {\n    label: '50 luồng',\n    value: 50\n  },\n  {\n    label: '40 luồng',\n    value: 40\n  },\n  {\n    label: '30 luồng',\n    value: 30\n  },\n  {\n    label: '20 luồng',\n    value: 20\n  },\n  {\n    label: '10 luồng',\n    value: 10\n  }\n]\n\n\nexport const ROLE_USER = {\n    USER_DEFAULT: 'user',\n    ADMIN: 'admin',\n    SUPER_ADMIN: 'superadmin',\n    RESELLER: 'reseller'\n}\n\nexport const resumeData = [\n  {\n    menu: \"Tài khoản\"\n  },\n  {\n    menu: \"Mật khẩu\"\n  }\n];\n\nexport const VIDEO_STATUS_GENERAL = {\n  PENDING: 0,\n  STREAMING: 1,\n  FINISHED: 2,\n  CANCELED: 3,\n  ERROR: 4,\n  EXPIRED_STREAM: 5,\n  DOWNLOADING: 6\n}\n\nexport const VIDEO_STREAMING_STATUS = {\n  0: {\n    id: 0,\n    message: 'Đang chờ',\n    // message: 'Pending',\n    color: 'gray.200',\n    textColor: 'black',\n    icon: MdPlayArrow\n  },\n  6: {\n    id: 6,\n    message: 'Đang tải',\n    // message: 'Streaming',\n    color: 'green.100',\n    textColor: 'green',\n    icon: MdCloudDownload\n  },\n  1: {\n    id: 1,\n    message: 'Đang phát',\n    // message: 'Streaming',\n    color: 'green',\n    textColor: 'white',\n    icon: MdPause\n  },\n  2: {\n    id: 2,\n    message: 'Hoàn thành',\n    // message: 'Finished',\n    color: 'blue.500',\n    textColor: 'white',\n    icon: MdOutlineDone\n  },\n  3: {\n    id: 3,\n    message: 'Đã hủy',\n    // message: 'Canceled',\n    color: 'orange',\n    textColor: 'black',\n    icon: MdOutlineClose\n  },\n  4: {\n    id: 4,\n    message: 'Có lỗi',\n    // message: 'Error',\n    color: 'red',\n    textColor: 'white',\n    icon: MdOutlineError\n  },\n  5: {\n    id: 5,\n    message: 'Hết hạn',\n    // message: 'Expired Stream',\n    color: 'teal.600',\n    textColor: 'white',\n    icon: MdWatchLater\n  }\n}\n\nexport const VIDEO_STREAMING_STATUS_STATISTIC = {\n  // 0: {\n  //   id: 0,\n  //   message: 'Đang chờ',\n  //   // message: 'Pending',\n  //   color: 'gray.200',\n  //   textColor: 'black',\n  //   icon: MdPlayArrow\n  // },\n  6: {\n    id: 6,\n    message: 'Đang tải',\n    // message: 'Streaming',\n    color: 'green.100',\n    textColor: 'green',\n    icon: MdCloudDownload\n  },\n  1: {\n    id: 1,\n    message: 'Đang phát',\n    // message: 'Streaming',\n    color: 'green',\n    textColor: 'white',\n    icon: MdPause\n  },\n  // 2: {\n  //   id: 2,\n  //   message: 'Hoàn thành',\n  //   // message: 'Finished',\n  //   color: 'blue.500',\n  //   textColor: 'white',\n  //   icon: MdOutlineDone\n  // },\n  3: {\n    id: 3,\n    message: 'Đã hủy',\n    // message: 'Canceled',\n    color: 'orange',\n    textColor: 'black',\n    icon: MdOutlineClose\n  },\n  4: {\n    id: 4,\n    message: 'Có lỗi',\n    // message: 'Error',\n    color: 'red',\n    textColor: 'white',\n    icon: MdOutlineError\n  },\n  5: {\n    id: 5,\n    message: 'Hết hạn',\n    // message: 'Expired Stream',\n    color: 'teal.600',\n    textColor: 'white',\n    icon: MdWatchLater\n  }\n}\n\nexport const USER_PACKAGE_STATUS = {\n  1: {\n    message: 'Còn hạn',\n    // message: 'Enabled',\n    color: 'green'\n  },\n  2: {\n    message: 'Hết hạn',\n    // message: 'Expired',\n    color: 'gray'\n  },\n}\n\nexport const USER_PACKAGE_USED = {\n  1: {\n    message: 'Đang phát',\n    // message: 'Enabled',\n    color: 'green'\n  },\n  0: {\n    message: 'Đang chờ',\n    // message: 'Expired',\n    color: 'gray'\n  },\n}\n\nexport const DEFAULT_PERPAGE = 15;","/* eslint-disable */\n// Chakra imports\nimport React from \"react\";\nimport {\n  Icon,\n  SimpleGrid,\n  useColorModeValue\n} from \"@chakra-ui/react\";\n// Custom components\nimport MiniStatistics from \"../../../../components/card/MiniStatistics\";\nimport IconBox from \"../../../../components/icons/IconBox\";\nimport { VIDEO_STREAMING_STATUS_STATISTIC } from \"../../../../variables\";\n\nexport default function StaticStream(props) {\n  const { listStatistics } = props;\n  // Chakra Color Mode\n  const boxBg = useColorModeValue(\"white\", \"whiteAlpha.100\");\n\n  return (\n    <SimpleGrid\n      columns={{ base: 1, md: 2, lg: 4, \"xl\": 4, \"2xl\": 6 }}\n      gap='10px'\n      mb='10px'>\n      {\n        Object.entries(VIDEO_STREAMING_STATUS_STATISTIC).map((item, index) => {\n          if (VIDEO_STREAMING_STATUS_STATISTIC[index]) {\n            return (\n              <MiniStatistics\n                key={index}\n                bgColor=\"white\"\n                startContent={\n                  <IconBox\n                    w='30px'\n                    h='30px'\n                    bg={boxBg}\n                    icon={\n                      <Icon w='28px' h='28px' as={VIDEO_STREAMING_STATUS_STATISTIC[index]?.icon} color={'#49aeff'} />\n                    }\n                  />\n                }\n                name={VIDEO_STREAMING_STATUS_STATISTIC[index]?.message}\n                value={listStatistics.find(item => item?.status === index)?.total || 0}\n              />\n            )\n          }\n          return;\n        })\n      }\n  \n    </SimpleGrid>\n  );\n}","/* eslint-disable */\nexport const USER_STREAM_ENDPOINT = 'api/v1/stream/user-streams';\n\nexport const ADMIN_AGENT_SERVER__ENDPOINT = 'api/v1/admin/agents';\nexport const RESET_ADMIN_AGENT_SERVER_ENDPOINT = 'api/v1/admin/agents/id/reset';\n\n\n\nexport const ASSIGN_AGENT_SERVER_FOR_ENDPOINT = 'api/v1/admin/agents/id/assign';\nexport const UNASSIGN_AGENT_SERVER_FOR_ENDPOINT = 'api/v1/admin/agents/id/unassign';\n\nexport const ASSIGN_AGENT_SERVER_FOR_RESELLER = 'api/v1/admin/agents/id/assign-reseller';\nexport const UNASSIGN_AGENT_SERVER_FOR_RESELLER = 'api/v1/admin/agents/id/unassign-reseller';\n\nexport const AGENT_SERVER_ENDPOINT='api/v1/agents';\n\nexport const RESET_AGENT_SERVER_ENDPOINT = 'api/v1/agents/id/reset';\nexport const STREAMING_ENDPOINT = 'api/v1/streamings';\nexport const RESOLUTION_STREAMING_ENDPOINT = 'api/v1/streamings/resolution';\nexport const VIDEO_META_INFO_ENDPOINT = 'api/v1/streamings/video-info';\nexport const CANCEL_STREAMING_ENDPOINT = 'api/v1/streamings/id/cancel';\nexport const DELETE_STREAMING_ENDPOINT = 'api/v1/streamings/id/delete';\nexport const PLAY_STREAMING_ENDPOINT = 'api/v1/streamings/id/play';\nexport const DASHBOARD_STATISTIC_ENDPOINT = 'api/v1/streamings/dashboard-statistics';\nexport const DASHBOARD_ADMIN_STATISTIC_ENDPOINT = 'api/v1/admin/streamings/dashboard-statistics';\n","/* eslint-disable */\nimport axios from 'axios';\nimport { BASE_URL, TIMEOUT_REQUEST_API } from '../variables/index';\n\nlet token = localStorage.getItem('persist:auth');\naxios.defaults.timeout = TIMEOUT_REQUEST_API;\n\nconst logout = () => {\n  localStorage.removeItem('persist:auth');\n  window.location.href = '/#/auth/sign-in';\n}\n\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      logout();\n    }\n    if (error.response && error.response.status === 500) {\n      window.location.href = '/#/auth/sign-in';\n    }\n    return Promise.reject(error);\n  }\n);\n\n\nclass ApiFactory {\n\n  constructor({ url }) {\n    this.url = url || BASE_URL;\n    this.endpoints = {};\n  }\n\n  /**\n   * Create and store a single entity's endpoints\n   * @param {A entity Object} entity\n   */\n  createEntity(entity) {\n    this.endpoints[entity.name] = this.createBasicCRUDEndpoints(entity);\n  }\n\n  /**\n   * Create and store multiple entity's endpoints\n   * @param {A entity Array} arrayOfEntity\n   */\n  createEntities(arrayOfEntity) {\n    arrayOfEntity.forEach(this.createEntity.bind(this));\n  }\n\n  /**\n   * Create the basic endpoints handlers for CRUD operations\n   * @param {A entity Object} entity\n   */\n  createBasicCRUDEndpoints({ name }) {\n    var endpoints = {}\n\n    const resourceURL = `${this.url}/${name}`\n\n    /**\n     * GET WITH NO TOKEN\n     */\n    endpoints.getWithNoToken = (query, config = { headers: {} }) =>\n      axios.get(resourceURL, { params: { ...query }, ...config });\n\n    /**\n     * GET\n     */\n    endpoints.get = (query, config = { headers: { authorization: token ? `Bearer ${token}` : null } }) => \n      axios.get(resourceURL, { params: { ...query }, ...config });\n\n    /**\n     * GET WITH HEADER\n     */\n    endpoints.getWithHeader = (query, config) =>  {\n      const customHeaders = {};\n      // config && config.headers && { ...config.headers };\n\n      return axios.get(resourceURL, {\n        params: { ...query },\n        headers: {\n          ...customHeaders,\n          authorization: token ? `Bearer ${token}` : null\n        }\n      });\n    }\n\n    /**\n     * GET/{:ID}\n     */\n    endpoints.getOne = (id, config = { headers: { authorization: token ? `Bearer ${token}` : null } }) =>\n      axios.get(`${resourceURL}/${id}`, { ...config });\n\n    /**\n     * GET WITH LINK\n     */\n    endpoints.getByLink = ({ link }, config = { headers: { authorization: token ? `Bearer ${token}` : null } }) =>\n      axios.get(`${resourceURL}/${link}`, { ...config });\n\n    /**\n     * POST WITH NO TOKEN\n     */\n    endpoints.postWithNoToken = (data, config) => {\n      const customHeaders = config && config.headers && { ...config.headers };\n      return axios.post(resourceURL, data, {\n        ...config,\n        headers: {\n          ...customHeaders\n        }\n      });\n    }\n\n    /**\n     * SUBMIT POST\n     */\n    endpoints.submitPost = (toSubmit, config) => {\n      const customHeaders = config && config.headers && { ...config.headers };\n      return axios.post(resourceURL.replace(\"id\", toSubmit), toSubmit, {\n        ...config,\n        headers: {\n          authorization: token ? `Bearer ${token}` : null,\n          ...customHeaders\n        }\n      });\n    }\n\n    /**\n     * POST\n     */\n    endpoints.post = (data, config) => {\n      const customHeaders = config && config.headers && { ...config.headers };\n      return axios.post(resourceURL, data, {\n        ...config,\n        headers: {\n          authorization: token ? `Bearer ${token}` : null,\n          ...customHeaders\n        }\n      });\n    }\n\n    /**\n     * PUT\n     */\n    endpoints.put = (data, config) => {\n      const customHeaders = config && config.headers && { ...config.headers };\n      return axios.put(resourceURL, data, {\n        ...config,\n        headers: {\n          authorization: token ? `Bearer ${token}` : null,\n          ...customHeaders\n        }\n      });\n    }\n\n    /**\n     * SUBMIT PUT\n     */\n    endpoints.submitPut = (toSubmit, config) => {\n      const customHeaders = config && config.headers && { ...config.headers };\n      return axios.put(resourceURL.replace(\"id\", toSubmit.id), toSubmit, {\n        ...config,\n        headers: {\n          authorization: token ? `Bearer ${token}` : null,\n          ...customHeaders\n        }\n      });\n    }\n\n    /**\n     * SUBMIT DELETE\n     */\n    endpoints.submitDelete = (toSubmit, config) => {\n      const customHeaders = config && config.headers && { ...config.headers };\n      // console.log('---- resource url -----', resourceURL.replace(\"id\", toSubmit), toSubmit);\n      // const id = toSubmit && (toSubmit.id || toSubmit.get('id'));\n      return axios.delete(resourceURL.replace(\"id\", toSubmit), toSubmit, {\n        ...config,\n        headers: {\n          authorization: token ? `Bearer ${token}` : null,\n          ...customHeaders\n        }\n      });\n    }\n\n    /**\n     * UPDATE\n     */\n    endpoints.update = (toUpdate, config) => {\n      const customHeaders = config && config.headers && { ...config.headers };\n      const id = toUpdate && (toUpdate.id || toUpdate.get('id'));\n      return axios.put(`${resourceURL}/${id}`, toUpdate, {\n        ...config,\n        headers: {\n          authorization: token ? `Bearer ${token}` : null,\n          ...customHeaders\n        }\n      });\n    }\n\n    /**\n     * PATCH\n     */\n    endpoints.patch = ({ id }, toPatch, config = { headers: { authorization: token ? `Bearer ${token}` : null } }) =>\n      axios.patch(`${resourceURL}/${id}`, toPatch, { ...config })\n\n    /**\n     * DELETE\n     */\n    endpoints.delete = ({ id }, config = { headers: { authorization: token ? `Bearer ${token}` : null } }) =>\n      axios.delete(`${resourceURL}/${id}`, { ...config })\n\n    return endpoints;\n  }\n}\n\nexport default ApiFactory;","/* eslint-disable */\nimport { \n  USER_STREAM_ENDPOINT,\n  STREAMING_ENDPOINT,\n  RESOLUTION_STREAMING_ENDPOINT,\n  AGENT_SERVER_ENDPOINT,\n  ADMIN_AGENT_SERVER__ENDPOINT,\n  VIDEO_META_INFO_ENDPOINT,\n  CANCEL_STREAMING_ENDPOINT,\n  DELETE_STREAMING_ENDPOINT,\n  PLAY_STREAMING_ENDPOINT,\n  DASHBOARD_STATISTIC_ENDPOINT,\n  RESET_AGENT_SERVER_ENDPOINT,\n  RESET_ADMIN_AGENT_SERVER_ENDPOINT,\n  ASSIGN_AGENT_SERVER_FOR_ENDPOINT,\n  UNASSIGN_AGENT_SERVER_FOR_ENDPOINT,\n  DASHBOARD_ADMIN_STATISTIC_ENDPOINT,\n  ASSIGN_AGENT_SERVER_FOR_RESELLER,\n  UNASSIGN_AGENT_SERVER_FOR_RESELLER\n} from './endpoints';\nimport ApiFactory from '../ApiFactory';\n\nconst UserStreamApi = new ApiFactory({url: process.env.REACT_APP_API_ENDPOINT });\n\nUserStreamApi.createEntities([\n  { name: USER_STREAM_ENDPOINT },\n  { name: STREAMING_ENDPOINT },\n  { name: AGENT_SERVER_ENDPOINT },\n  { name: ADMIN_AGENT_SERVER__ENDPOINT },\n  { name: RESOLUTION_STREAMING_ENDPOINT },\n  { name: VIDEO_META_INFO_ENDPOINT },\n  { name: CANCEL_STREAMING_ENDPOINT },\n  { name: DELETE_STREAMING_ENDPOINT },\n  { name: PLAY_STREAMING_ENDPOINT },\n  { name: DASHBOARD_STATISTIC_ENDPOINT },\n  { name: DASHBOARD_ADMIN_STATISTIC_ENDPOINT },\n  { name: RESET_AGENT_SERVER_ENDPOINT },\n  { name: RESET_ADMIN_AGENT_SERVER_ENDPOINT },\n  { name: ASSIGN_AGENT_SERVER_FOR_ENDPOINT },\n  { name: UNASSIGN_AGENT_SERVER_FOR_ENDPOINT },\n  { name: ASSIGN_AGENT_SERVER_FOR_RESELLER },\n  { name: UNASSIGN_AGENT_SERVER_FOR_RESELLER }\n]);\n\nconst fetchListUserStreamApi = (params) => UserStreamApi.createBasicCRUDEndpoints({ name: USER_STREAM_ENDPOINT }).get(params);\nconst detailUserStreamApi = (stream_id) => UserStreamApi.createBasicCRUDEndpoints({ name: USER_STREAM_ENDPOINT }).getOne(stream_id);\nconst updateUserStream = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: USER_STREAM_ENDPOINT }).update(data);\n\nconst listStreamingApi = (params) => UserStreamApi.createBasicCRUDEndpoints({ name: STREAMING_ENDPOINT }).get(params);\nconst createStreamingApi = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: STREAMING_ENDPOINT }).post(data);\nconst updateStreamingApi = (params) => UserStreamApi.createBasicCRUDEndpoints({ name: STREAMING_ENDPOINT }).update(params);\nconst playStreamingApi = (params) => UserStreamApi.createBasicCRUDEndpoints({ name: PLAY_STREAMING_ENDPOINT }).submitPost(params);\n\nconst cancelStreamingApi = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: CANCEL_STREAMING_ENDPOINT }).submitPut(data);\nconst deleteStreamingApi = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: DELETE_STREAMING_ENDPOINT }).submitDelete(data);\n\nconst fetchListAcceptedResolution = () => UserStreamApi.createBasicCRUDEndpoints({ name: RESOLUTION_STREAMING_ENDPOINT }).get();\nconst fetchVideoMETAInfoData = (params) => UserStreamApi.createBasicCRUDEndpoints({ name: VIDEO_META_INFO_ENDPOINT }).get(params);\n\nconst createNewAgentServerStream = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: ADMIN_AGENT_SERVER__ENDPOINT }).post(data);\nconst updateAgentServerStream = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: ADMIN_AGENT_SERVER__ENDPOINT }).update(data);\nconst deleteAgentServerStream = (id) => UserStreamApi.createBasicCRUDEndpoints({ name: ADMIN_AGENT_SERVER__ENDPOINT }).delete(id);\nconst fetchListAdminAgentServerStream = (params) => UserStreamApi.createBasicCRUDEndpoints({ name: ADMIN_AGENT_SERVER__ENDPOINT }).get(params);\nconst resetAdminAgentServerStream = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: RESET_ADMIN_AGENT_SERVER_ENDPOINT }).submitPut(data);\nconst resetAgentServerStream = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: RESET_AGENT_SERVER_ENDPOINT }).submitPut(data);\n\nconst assignAgentServerForUser = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: ASSIGN_AGENT_SERVER_FOR_ENDPOINT }).submitPut(data);\nconst unAssignAgentServerForUser = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: UNASSIGN_AGENT_SERVER_FOR_ENDPOINT }).submitPut(data);\n\nconst assignAgentServerForReseller = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: ASSIGN_AGENT_SERVER_FOR_RESELLER }).submitPut(data);\nconst unassignAgentServerForReseller = (data) => UserStreamApi.createBasicCRUDEndpoints({ name: UNASSIGN_AGENT_SERVER_FOR_RESELLER }).submitPut(data);\n\nconst fetchListAgentServerOfUser = () => UserStreamApi.createBasicCRUDEndpoints({ name: AGENT_SERVER_ENDPOINT }).get();\n\nconst fetchDashboardStatisticsStreaming = () => UserStreamApi.createBasicCRUDEndpoints({ name: DASHBOARD_STATISTIC_ENDPOINT }).get();\nconst fetchDashboardAdminStatisticsStreaming = () => UserStreamApi.createBasicCRUDEndpoints({ name: DASHBOARD_ADMIN_STATISTIC_ENDPOINT }).get();\n\nexport {\n    fetchListUserStreamApi,\n    detailUserStreamApi,\n    updateUserStream,\n    listStreamingApi,\n    createStreamingApi,\n    createNewAgentServerStream,\n    updateAgentServerStream,\n    deleteAgentServerStream,\n    fetchListAdminAgentServerStream,\n    fetchListAgentServerOfUser,\n    fetchListAcceptedResolution,\n    fetchVideoMETAInfoData,\n    cancelStreamingApi,\n    deleteStreamingApi,\n    updateStreamingApi,\n    playStreamingApi,\n    fetchDashboardStatisticsStreaming,\n    fetchDashboardAdminStatisticsStreaming,\n    resetAdminAgentServerStream,\n    assignAgentServerForUser,\n    unAssignAgentServerForUser,\n    resetAgentServerStream,\n    assignAgentServerForReseller,\n    unassignAgentServerForReseller\n}\n","import moment from \"moment\";\n\n/* eslint-disable */\nexport function validateYouTubeUrl(url) {\n    if (url) {\n        var regExp = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n        if (url.match(regExp)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function truncate(str, length) {\n    if (str.length > length) {\n      return str.slice(0, length) + '...';\n    } else return str;\n}\n\nexport const formatDate = (input) => {\n    var datePart = input.match(/\\d+/g),\n    // year = datePart[0].substring(2), // get only two digits\n    year = datePart[0], // get only two digits\n    month = datePart[1], day = datePart[2];\n  \n    return day+'/'+month+'/'+year;\n}\n\nexport const reverseTimeDate = (timedate) => {\n    // let temp = timedate.split(\" \");\n    // temp[0] = formatDate(temp[0]);\n    // return temp.reverse().join(\"  \");\n    return moment(timedate).format('HH:mm DD/MM')\n}\n\nexport function YouTubeGetID(url){\n    url = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n    return (url[2] !== undefined) ? url[2].split(/[^0-9a-z_\\-]/i)[0] : url[0];\n}\n\nexport function toHHMMSS (time) {\n    var sec_num = parseInt(time, 10); // don't forget the second param\n    var hours   = Math.floor(sec_num / 3600);\n    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n    var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n    if (hours   < 10) {hours   = \"0\"+hours;}\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n    return hours+':'+minutes+':'+seconds;\n}\n\nconst paddingTime = (n) => { return (n < 10) ? ('0'+n) : n };\n\nexport function converter_ISO8601_To_YYYYMMDDHHMMSS (original) {\n    // '2018-09-18T06:39:51Z'\n    var source_iso = original; \n    // if(source_iso.indexOf(\".\")==-1) {\n    //     source_iso =source_iso.replace(\"Z\", \".000Z\");\n    // }\n\n    var d = new Date(source_iso);\n    var day= paddingTime(d.getUTCDate());\n    var month= paddingTime(d.getUTCMonth() + 1);\n    var year= d.getUTCFullYear();\n    var hours= paddingTime(d.getUTCHours() + 7);\n    var minutes= paddingTime(d.getUTCMinutes());\n    var seconds= paddingTime(d.getUTCSeconds());\n\n    return year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n}\n\nexport function defaultISODateString() {\n    var d = new Date();\n    return d.getUTCFullYear() +\n        '-' + paddingTime(d.getUTCMonth() + 1) +\n        '-' + paddingTime(d.getUTCDate()) \n        // + 'T' + paddingTime(d.getUTCHours() + 7) +\n        // ':' + paddingTime(d.getUTCMinutes())\n        // // + ':' + paddingTime(d.getUTCSeconds())\n}\n\nexport const getCurrRoleUser = (profile) => {\n    return JSON.parse(profile) && Object.keys(JSON.parse(profile)).length != 0 && JSON.parse(profile).group.role;\n}\n\nexport const getCurrUserID = (profile) => {\n    return JSON.parse(profile) && Object.keys(JSON.parse(profile)).length != 0 && JSON.parse(profile)?.id;\n}\n\nexport const checkRoleUser = (profile, role) => { return role === getCurrRoleUser(profile);}\n\nexport function checkPlanUser (profile) {\n    let profileObj = JSON.parse(profile);\n    return profileObj \n        && Object.keys(profileObj).length != 0 \n        && (profileObj[\"plan\"] !== undefined)\n        && profileObj.plan.toUpperCase();\n}\n\nexport const removeEmpty = (obj) => {\n    return Object.fromEntries(\n      Object.entries(obj)\n        .filter(([_, v]) => v != null && v != undefined && v != \"\")\n        .map(([k, v]) => [k, v === Object(v) ? removeEmpty(v) : v])\n    );\n}\n\nexport function _sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport const httpErrorHandler = (error) => {\n    if (error === null) throw new Error('Unrecoverable error!! Error is null!')\n    if (axios.isAxiosError(error)) {\n      //here we have a type guard check, error inside this if will be treated as AxiosError\n      const response = error?.response\n      const request = error?.request\n      const config = error?.config //here we have access the config used to make the api call (we can make a retry using this conf)\n  \n      if (error.code === 'ERR_NETWORK') {\n        console.log('connection problems..')\n      } else if (error.code === 'ERR_CANCELED') {\n        console.log('connection canceled..')\n      }\n      if (response) {\n        //The request was made and the server responded with a status code that falls out of the range of 2xx the http status code mentioned above\n        const statusCode = response?.status\n        if (statusCode === 404) {\n          console.log('The requested resource does not exist or has been deleted')\n        } else if (statusCode === 401) {\n          console.log('Please login to access this resource')\n          //redirect user to login\n        }\n      } else if (request) {\n        //The request was made but no response was received, `error.request` is an instance of XMLHttpRequest in the browser and an instance of http.ClientRequest in Node.js\n      }\n    }\n    //Something happened in setting up the request and triggered an Error\n    console.log(error.message)\n  }","/* eslint-disable */\nimport React, { createContext, useContext, useEffect, useMemo, useState } from \"react\";\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n    const [token, setToken_] = useState(() => localStorage.getItem(\"persist:auth\") || null);\n    const [profile, setProfile_] = useState(() => localStorage.getItem(\"profile\") || null);\n\n    const setToken = (newToken) => {\n        setToken_(newToken);\n    };\n\n    const setProfile = (newProfile) => {\n        setProfile_(newProfile);\n    };\n\n    useEffect(() => {\n        if (token) {\n            // axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n            localStorage.setItem(\"persist:auth\", token);\n        } else {\n            // if (axios.defaults.headers.common) {\n            //     delete axios.defaults.headers.common[\"Authorization\"];\n            // }\n            localStorage.removeItem(\"persist:auth\");\n        }\n    }, [token]);\n\n    useEffect(() => {\n        if (profile) {\n            localStorage.setItem(\"profile\", profile);\n        } else {\n            localStorage.removeItem(\"profile\");\n        }\n    }, [profile]);\n\n    const contextValue = useMemo(() => ({\n        token,\n        profile,\n        setProfile,\n        setToken\n    }), [token, profile]);\n\n    return (\n        <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nexport default AuthProvider;\n","/* eslint-disable */\n// Chakra imports\nimport React from \"react\";\nimport {\n  List,\n  ListItem,\n  Button,\n  Icon\n} from \"@chakra-ui/react\";\nimport { MdLockOutline, MdPayment, MdPersonOutline } from \"react-icons/md\";\n\nexport default function LeftMenu(props) {\n\n  const { handleChangeVerticalTabs, activeTabId, resumeData } = props;\n\n  return (\n      <List w=\"100%\">\n        {resumeData && resumeData.map((item, index) => {\n          return (\n            <ListItem \n              key={index}\n            >\n              <Button\n                onClick={() => handleChangeVerticalTabs(index)}\n                key={index}\n                px=\"50px\"\n                py=\"30px\"\n                fontSize=\"md\"\n                borderRadius=\"4px\"\n                width=\"100%\"\n                fontWeight=\"500\"\n                borderBottom=\"2px solid #e1e1e1\"\n                variant={activeTabId === index ? \"solid\" : \"ghost\"}\n                backgroundColor={activeTabId === index ? \"blue.100\" : \"white\"}\n                >\n                <Icon\n                    me='10px'\n                    h='20px'\n                    w='20px'\n                    color={activeTabId === index ? \"facebook\" : \"whiteAlpha\"}\n                    as={(index == 0) ? MdPersonOutline : (index == 1) ? MdLockOutline : MdPayment}\n                />\n                {item.menu}\n              </Button>\n            </ListItem>\n          )\n        })}\n      </List>\n  );\n}\n","export default __webpack_public_path__ + \"a2f0a86bc07a209e54dcd048e5da1093.png\";","export default __webpack_public_path__ + \"80db2a895510dd2719aaefa74a1a39a3.png\";","/* eslint-disable */\n// Chakra imports\nimport React from \"react\";\nimport {\n    Box,\n    Button,\n    Flex,\n    Icon,\n    Text,\n    useColorModeValue,\n    Avatar,\n    FormControl,\n    FormLabel,\n    Input,\n    Card,\n    Grid,\n    GridItem\n} from \"@chakra-ui/react\";\n\nimport { useAuth } from \"../../../../contexts/authenContext\";\n\nimport avatar from \"../../../../assets/img/avatars/avatar.png\";\nimport banner from \"../../../../assets/img/auth/banner.png\";\nimport { IoNewspaper } from \"react-icons/io5\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function TabProfile(props) {\n    // Chakra Color Mode\n    const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\n\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n    const brandStars = useColorModeValue(\"brand.500\", \"brand.400\");\n    const textColorSecondary = \"gray.400\";\n    const borderColor = useColorModeValue(\n        \"white !important\",\n        \"#111C44 !important\"\n    );\n\n    const { t } = useTranslation()\n    const { profile } = useAuth();\n\n    let profileUser = JSON.parse(profile);\n\n    return (\n        <>\n            <Card mb=\"0px\" align='left' pb=\"20px\">\n                <Box\n                    bg={`url(${banner})`}\n                    bgSize='cover'\n                    borderRadius='4px'\n                    h='131px'\n                    w='100%'\n                />\n                <Flex px=\"50px\" direction='column'>\n                    <Avatar\n                        src={avatar}\n                        h='87px'\n                        w='87px'\n                        mt='-43px'\n                        borderColor={borderColor}\n                    />\n                </Flex>\n                <Flex px=\"50px\" direction='column'>\n                    <Grid\n                        templateRows='repeat(1, 1fr)'\n                        templateColumns='repeat(2, 1fr)'\n                        gap={2}\n                        >\n                        <GridItem colSpan={1} margin=\"auto 0\">    \n                            <Text color={textColorPrimary} fontWeight='bold' fontSize='2xl' mt='10px'>\n                                {profileUser?.fullname}\n                            </Text>\n                            <Text color={textColorSecondary} fontSize='sm'>\n                                {t(`content.${profileUser?.group?.role}`)}\n                            </Text>\n                        </GridItem>\n                    </Grid>\n                </Flex>\n            </Card>\n            <Flex direction='row' alignContent=\"baseline\" justifyContent=\"space-between\" my=\"10px\">\n                <Text color=\"black\" pt=\"30px\">\n                    Thông tin cá nhân:\n                </Text>\n                <Button\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    size=\"sm\"\n                    // onClick={onOpen()}\n                    fontWeight='400'>\n                    <Icon\n                        transition='0.2s linear'\n                        w='17px'\n                        h='17px'\n                        pr='5px'\n                        as={IoNewspaper}\n                        color='white'\n                    />\n                    Chỉnh sửa\n                </Button>\n            </Flex>\n            <Card  align='center' style={{ padding: '10px' }}>\n                <FormControl mb=\"10px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Họ và tên<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <Input\n                        name=\"email\"\n                        value={profileUser.fullname}\n                        // onChange={(e) => setInputValue(\"email\", e.target.value)}\n                        isRequired={true}\n                        isDisabled={true}\n                        variant='auth'\n                        fontSize='sm'\n                        ms={{ base: \"0px\", md: \"0px\" }}\n                        type='email'\n                        placeholder='mail@ssc.com'\n                        fontWeight='500'\n                        size='lg'\n                    />\n                </FormControl>\n                <FormControl mb=\"10px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Email<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <Input\n                        name=\"email\"\n                        value={profileUser.email}\n                        // onChange={(e) => setInputValue(\"email\", e.target.value)}\n                        isRequired={true}\n                        isDisabled={true}\n                        variant='auth'\n                        fontSize='sm'\n                        ms={{ base: \"0px\", md: \"0px\" }}\n                        type='email'\n                        placeholder='mail@ssc.com'\n                        fontWeight='500'\n                        size='lg'\n                    />\n                </FormControl>\n                <FormControl mb=\"10px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Số điện thoại<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <Input\n                        name=\"email\"\n                        // value={formik.values.email}\n                        // onChange={(e) => setInputValue(\"email\", e.target.value)}\n                        isRequired={true}\n                        isDisabled={true}\n                        variant='auth'\n                        fontSize='sm'\n                        ms={{ base: \"0px\", md: \"0px\" }}\n                        type='email'\n                        placeholder='mail@ssc.com'\n                        fontWeight='500'\n                        size='lg'\n                    />\n                </FormControl>\n            </Card>\n        </>\n    );\n}\n","/* eslint-disable */\nexport const LOGIN_ENPOINT = 'api/v1/users/login';\nexport const REGISTER_ENDPOINT = 'api/v1/users/register';\nexport const PROFILE_DETAIL_ENDPOINT = 'api/v1/users/profile';\nexport const ADMIN_LIST_USER_ENDPOINT = 'api/v1/admin/users/list';\nexport const UPDATE_PASSWORD_ENPOINT = 'api/v1/users/password';\nexport const DELETE_USER_ENPOINT = 'api/v1/admin/users/delete';","/* eslint-disable */\nimport {\n    LOGIN_ENPOINT,\n    REGISTER_ENDPOINT,\n    PROFILE_DETAIL_ENDPOINT,\n    ADMIN_LIST_USER_ENDPOINT,\n    UPDATE_PASSWORD_ENPOINT,\n    DELETE_USER_ENPOINT\n} from './endpoints';\nimport ApiFactory from '../ApiFactory';\n\nconst AuthenticateApi = new ApiFactory({ url: process.env.REACT_APP_API_ENDPOINT });\n\nAuthenticateApi.createEntities([\n    { name: LOGIN_ENPOINT },\n    { name: REGISTER_ENDPOINT },\n    { name: PROFILE_DETAIL_ENDPOINT },\n    { name: ADMIN_LIST_USER_ENDPOINT },\n    { name: UPDATE_PASSWORD_ENPOINT },\n    { name: DELETE_USER_ENPOINT },\n]);\n\nconst loginUserApi = (data) => AuthenticateApi.createBasicCRUDEndpoints({ name: LOGIN_ENPOINT }).postWithNoToken(data);\nconst registerUserApi = (data) => AuthenticateApi.createBasicCRUDEndpoints({ name: REGISTER_ENDPOINT }).post(data);\n\nconst fetchProfileDetail = (data, config) => AuthenticateApi.createBasicCRUDEndpoints({ name: PROFILE_DETAIL_ENDPOINT }).getWithHeader(data, config);\nconst updateProfileDetail = (data) => AuthenticateApi.createBasicCRUDEndpoints({ name: PROFILE_DETAIL_ENDPOINT }).update(data);\n\nconst fetchAdminListUser = (data) => AuthenticateApi.createBasicCRUDEndpoints({ name: ADMIN_LIST_USER_ENDPOINT }).get(data);\nconst updatePasswordUser = (data) => AuthenticateApi.createBasicCRUDEndpoints({ name: UPDATE_PASSWORD_ENPOINT }).put(data);\n\nconst deleteUserAPI = (id) => AuthenticateApi.createBasicCRUDEndpoints({ name: DELETE_USER_ENPOINT }).delete(id);\n\nexport {\n    loginUserApi,\n    registerUserApi,\n    fetchAdminListUser,\n    fetchProfileDetail,\n    updatePasswordUser,\n    updateProfileDetail,\n    deleteUserAPI\n}\n","/* eslint-disable */\n// Chakra imports\nimport React, { useState, useCallback } from \"react\";\nimport {\n    Button,\n    Icon,\n    Text,\n    useColorModeValue,\n    FormControl,\n    FormLabel,\n    Input,\n    Card,\n    InputGroup,\n    InputRightElement\n} from \"@chakra-ui/react\";\n\nimport { useAuth } from \"../../../../contexts/authenContext\";\nimport { RiEyeCloseLine } from \"react-icons/ri\";\nimport { MdOutlineRemoveRedEye } from \"react-icons/md\";\n\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\n// Tranlation context API\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport history from '../../../../utils/history';\nimport { updatePasswordUser } from \"../../../../api/Auth/index\";\nimport { MESSSAGE_STATUS_CODE } from \"../../../../variables\";\nimport { _sleep } from \"../../../../utils/handleValidate\";\n\nconst initialValues = {\n    old_password: \"\",\n    new_password: \"\",\n    confirm_password: \"\"\n}\n\nexport default function TabPassword(props) {\n    const [formDataProfile, setFormDataProfile] = useState({});\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const { profile, setToken } = useAuth();\n    // Chakra Color Mode\n\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n    const brandStars = useColorModeValue(\"brand.500\", \"brand.400\");\n    const textColorSecondary = \"gray.400\";\n\n\n    const handleClick = () => setShow(!show);\n\n    const { t } = useTranslation();\n\n\tconst handleLogoutEvent = () => {\n\t\tsetToken();\n\t\thistory.push('#/auth/sign-in');\n\t};\n\n    const validateSchema = Yup.object().shape({\n        old_password: Yup.string()\n            .required(t('content.required_field'))\n            .min(8, t('content.check_number_character'))\n            // .matches(/(?=.*[a-z])(?=.*[A-Z])\\w+/, \"Password ahould contain at least one uppercase and lowercase character\")\n            .matches(/\\d/, t('content.check_number_password'))\n            .matches(/[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/, t('content.check_special_character_password')),\n        new_password: Yup.string()\n            .required(t('content.required_field'))\n            .min(8, t('content.check_number_character'))\n            .matches(/\\d/, t('content.check_number_password'))\n            .matches(/[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/, t('content.check_special_character_password')),\n        confirm_password: Yup.string()\n            .required(t('content.check_matching_password'))\n            .oneOf([Yup.ref(\"new_password\")], t('content.check_matching_password')),\n    });\n\n    const handleChangePasswordNotification = (data) => {\n        if (data.data && data.data.error_code == 0) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`))\n        } else {\n            toast.error(data.data.message);\n        }\n    }\n    const handleOnSubmit = async (values) => {\n        let { confirm_password, ...newPassword } = values;\n        setLoading(true);\n        try {\n            const response = await updatePasswordUser(newPassword);\n            if (response.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                handleChangePasswordNotification(response);\n                setLoading(false);\n                formik.resetForm();\n            }\n            await Promise.all(\n                _sleep(1000),\n                handleLogoutEvent()\n            )\n        } catch (err) {\n            setLoading(false);\n            console.log(err);\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmit,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({\n                ...formik.values,\n                [key]: value,\n            })\n        },\n        [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <Text color=\"black\" align=\"left\" pb=\"10px\">\n                Cập nhật mật khẩu:\n            </Text>\n            <Card align='center' style={{ padding: '10px' }}>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Mật khẩu hiện tại<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <InputGroup size='md'>\n                        <Input\n                            name=\"old_password\"\n                            value={formik.values.old_password.trim() || ''}\n                            onChange={(e) => setInputValue(\"old_password\", e.target.value)}\n                            isRequired={true}\n                            fontSize='sm'\n                            placeholder='Min. 8 characters'\n                            size='lg'\n                            type={show ? \"text\" : \"password\"}\n                            variant='auth'\n                        />\n                        <InputRightElement display='flex' alignItems='center' mt='4px'>\n                            <Icon\n                                color={textColorSecondary}\n                                _hover={{ cursor: \"pointer\" }}\n                                as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\n                                onClick={handleClick}\n                            />\n                        </InputRightElement>\n                    </InputGroup>\n                    {formik.errors.old_password && formik.touched.old_password && (\n                        <p className=\"text-error\">{formik.errors.old_password}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Mật khẩu mới<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <InputGroup size='md'>\n                        <Input\n                            name=\"new_password\"\n                            value={formik.values.new_password.trim() || ''}\n                            onChange={(e) => setInputValue(\"new_password\", e.target.value)}\n                            isRequired={true}\n                            fontSize='sm'\n                            placeholder='Min. 8 characters'\n                            size='lg'\n                            type={show ? \"text\" : \"password\"}\n                            variant='auth'\n                        />\n                        <InputRightElement display='flex' alignItems='center' mt='4px'>\n                            <Icon\n                                color={textColorSecondary}\n                                _hover={{ cursor: \"pointer\" }}\n                                as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\n                                onClick={handleClick}\n                            />\n                        </InputRightElement>\n                    </InputGroup>\n                    {formik.errors.new_password && formik.touched.new_password && (\n                        <p className=\"text-error\">{formik.errors.new_password}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Nhập lại mật khẩu mới<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <InputGroup size='md'>\n                        <Input\n                            name=\"confirm_password\"\n                            value={formik.values.confirm_password.trim() || ''}\n                            onChange={(e) => setInputValue(\"confirm_password\", e.target.value)}\n                            isRequired={true}\n                            fontSize='sm'\n                            placeholder='Min. 8 characters'\n                            size='lg'\n                            type={show ? \"text\" : \"password\"}\n                            variant='auth'\n                        />\n                        <InputRightElement display='flex' alignItems='center' mt='4px'>\n                            <Icon\n                                color={textColorSecondary}\n                                _hover={{ cursor: \"pointer\" }}\n                                as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\n                                onClick={handleClick}\n                            />\n                        </InputRightElement>\n                    </InputGroup>\n                    {formik.errors.confirm_password && formik.touched.confirm_password && (\n                        <p className=\"text-error\">{formik.errors.confirm_password}</p>\n                    )}\n                </FormControl>\n                <Button \n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    isLoading={loading}\n                    loadingText={\"Chờ chút\"}\n                    type=\"submit\"\n                    fontWeight='500'>\n                    Thay đổi\n                </Button>\n            </Card>\n        </form>\n    );\n}\n","export default __webpack_public_path__ + \"634a6e55b6aa4f15569368dd81519fa0.png\";","/* eslint-disable */\n// Chakra imports\nimport React, { useMemo } from \"react\";\nimport {\n    Flex,\n    Icon,\n    Text,\n    useColorModeValue,\n    Table,\n    Tbody,\n    Thead,\n    Th,\n    Tr,\n    Td,\n    Badge,\n    Image\n} from \"@chakra-ui/react\";\n  \nimport {\n      useGlobalFilter,\n      usePagination,\n      useSortBy,\n      useTable,\n} from \"react-table\";\nimport { MdAccessTime, MdCancel, MdCheckCircle } from \"react-icons/md\";\n\nimport emptyBackgroundImage from '../../../../assets/img/empty_bg_2.png';\n\nexport default function TablePayment(props) {\n\n    // Chakra color mode\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n\n    const {\n        columnsData,\n        tableData\n    } = props;\n\n    const columns = useMemo(() => columnsData, [columnsData]);\n    const data = useMemo(() => tableData, [tableData]);\n\n    const tableInstance = useTable(\n        {\n            columns,\n            data,\n        },\n        useGlobalFilter,\n        useSortBy,\n        usePagination\n    );\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        page,\n        prepareRow,\n        initialState,\n    } = tableInstance;\n    initialState.pageSize = 5;\n\n    const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\n\n    let bodyWithNoData = () => {\n        return (\n            <Tr>\n                <Td colSpan={columns.length} textAlign=\"center\" py={8}>\n                    <Flex flexDirection=\"column\" alignItems=\"center\">\n                    <Image src={emptyBackgroundImage} alt=\"No Video Stream\" width=\"20%\" mb={4} />\n                    <Text fontSize=\"lg\" fontWeight=\"bold\" color=\"gray.600\" style={{ marginBottom: '5px' }}>Không có dữ liệu</Text>\n                    <Text fontSize=\"md\" color=\"gray.500\">Hãy tiến hành mua gói mới để bắt đầu.</Text>\n                    </Flex>\n                </Td>\n            </Tr>\n        );\n    };\n\n    let bodyWithData = () => {\n        return page?.map((row, index) => {\n            prepareRow(row);\n            return (\n                <Tr {...row.getRowProps()} key={index}>\n                    {row.cells.map((cell, index) => {\n                        let data = \"\";\n                        if (cell.column.Header === \"THỜI HẠN\") {\n                            data = (\n                                <Flex align='center'>\n                                    {\n                                        cell?.value ? (\n                                            <Text color={textColor} fontSize='sm' fontWeight='500'>\n                                                {cell?.value} ngày\n                                            </Text>\n                                        ) : '...'\n                                    }\n                                </Flex>\n                            );\n                        } else if (cell.column.Header === \"TÊN GÓI\") {\n                            const badgeStyle = cell?.value === \"premium\" \n                                ? { background: 'linear-gradient(45deg, orange 0%, rgb(250, 82, 82) 100%)', color: 'white' } \n                                : { background: 'green', color: 'white' }; // Adjust the color for \"Normal\" as needed\n\n                            data = (\n                                <Flex align='center'>\n                                    <Badge\n                                        style={{ ...badgeStyle, fontWeight: 500, borderRadius: '6px'}}\n                                        justifyContent=\"center\"\n                                        alignContent=\"center\"\n                                    >\n                                        {cell?.value}\n                                    </Badge>\n                                </Flex>\n                            );\n                        } else if (cell.column.Header === \"SỐ LUỒNG\") {\n                            data = (\n                                <Flex align='center'>\n                                    <Text color={textColor} fontSize='sm' fontWeight='500'>\n                                        {cell?.value} luồng\n                                    </Text>\n                                </Flex>\n                            );\n                        } else if (cell.column.Header === \"KHUYẾN MÃI\") {\n                            data = (\n                                <Flex align='center'>\n                                    <Text color=\"facebook.500\" fontSize='sm' fontWeight='500'>\n                                        {cell?.value} %\n                                    </Text>\n                                </Flex>\n                            );\n                        } else if (cell.column.Header === \"TỪ NGÀY\") {\n                            data = (\n                                <Flex align='center'>\n                                    {\n                                        cell?.value ? (\n                                            <Text fontSize='sm' color=\"green\" fontWeight='500' style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n                                                <MdAccessTime color=\"green\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n                                                {cell?.value}\n                                            </Text>\n                                        ) : \"...\"\n                                    }\n                                </Flex>\n                            );\n                        } else if (cell.column.Header === \"ĐẾN NGÀY\") {\n                            data = (\n                                <Flex align='center'>\n                                    {\n                                        cell?.value ? (\n                                            <Text fontSize='sm' color=\"red\" fontWeight='500' style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n                                                <MdAccessTime color=\"red\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n                                                {cell?.value}\n                                            </Text>\n                                        ) : \"...\"\n                                    }\n                                </Flex>\n                            );\n                        } else if (cell.column.Header === \"HIỆU LỰC\") {\n                            data = (\n                                <Flex align='center'>\n                                    <Icon\n                                        w='24px' h='24px' me='5px'\n                                        color={\n                                            cell?.value === true ? \"green.500\"\n                                            : cell?.value === false ? \"red.500\" : null\n                                        }\n                                        as={\n                                            cell?.value === true ? MdCheckCircle\n                                            : cell?.value === false ? MdCancel : null\n                                        }\n                                    />\n                                    <Text color=\"black\" fontSize='sm' fontWeight='500'>\n                                    {cell?.value === true ? 'Đã xác nhận' : 'Chưa xác nhận'}\n                                    </Text>\n                                </Flex>\n                            );\n                        } else if (cell.column.Header === \"GIÁ BAN ĐẦU\") {\n                            data = (\n                                <Flex align='center'>\n                                    <Text color={textColor} textDecoration=\"line-through\" fontSize='sm' fontWeight='500'>\n                                        {cell?.value.toLocaleString()} VNĐ\n                                    </Text>\n                                </Flex>\n                            );\n                        } else if (cell.column.Header === \"TỔNG CỘNG\") {\n                            data = (\n                                <Flex align='center'>\n                                    <Text color=\"green\" fontSize='sm' fontWeight='500'>\n                                        {cell?.value?.toLocaleString()} VNĐ\n                                    </Text>\n                                </Flex>\n                            );\n                        } else {\n                            data = (\n                                <Text color={textColor} fontSize='sm' fontWeight='500'>\n                                  {cell?.value}\n                                </Text>\n                            )\n                        }\n                        return (\n                            <Td\n                              {...cell.getCellProps({\n                                style: {\n                                  minWidth: cell.column.minWidth,\n                                  width: cell.column.width,\n                                },\n                              })}\n                              key={index}\n                              fontSize={{ sm: \"14px\" }}\n                              borderColor='transparent'>\n                              {data}\n                            </Td>\n                          );\n                    })}\n                </Tr>\n            );\n        })\n    };\n\n    return (\n        <Table {...getTableProps()} \n            border=\"none\" w=\"100%\" mb='24px' \n            borderRadius=\"10px\">\n            <Thead bgColor=\"#f5f5f5\">\n                {headerGroups.map((headerGroup, index) => (\n                    <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                        {headerGroup.headers.map((column, index) => (\n                            <Th\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\n                                pe='10px'\n                                key={index}\n                                width=\"100px\"\n                                borderColor={borderColor}>\n                                <Flex\n                                    justify='space-between'\n                                    align='center'\n                                    fontSize={{ sm: \"10px\", lg: \"12px\" }}\n                                    color='black'>\n                                    {column.render(\"Header\")}\n                                </Flex>\n                            </Th>\n                        ))}\n                    </Tr>\n                ))}\n            </Thead>\n            <Tbody {...getTableBodyProps()}>\n                {tableData.length ? bodyWithData() : bodyWithNoData()}\n            </Tbody>\n        </Table>\n    );\n}\n","/* eslint-disable */\n// Chakra imports\nimport React from \"react\";\nimport {\n    Button,\n    Flex,\n    Icon,\n    Text,\n    Card\n} from \"@chakra-ui/react\";\n\nimport {\n    columnsPaymentHistory\n} from \"../../../../variables/index\";\nimport TablePayment from \"./TablePayment\";\nimport { IoAddCircleOutline } from \"react-icons/io5\";\n\nexport default function TabPayment(props) {\n    let tableData = [];\n\n    return (\n        <Card mb={{ base: \"20px\", lg: \"20px\" }} style={{ boxShadow: 'none' }}>\n            <Flex justify='space-between' mx=\"30px\" mt=\"30px\" mb='37px' display=\"flex\">\n                <Text color=\"black\" align=\"left\" pb=\"10px\" fontSize={\"lg\"} fontWeight=\"bold\">\n                    Lịch sử giao dịch\n                </Text>\n                <Button \n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='solid'\n                    colorScheme=\"red\"\n                    fontWeight='500'>\n                    <Icon\n                        transition='0.2s linear'\n                        w='25px'\n                        h='25px'\n                        pr='5px'\n                        as={IoAddCircleOutline}\n                        color='white'\n                    />\n                    Mua gói\n                </Button>\n            </Flex>\n            <Card\n                direction='column'\n                w='100%'\n                px='0px'\n                overflowX={{ base: \"scroll\"}}>\n                <TablePayment\n                    columnsData={columnsPaymentHistory}\n                    tableData={tableData}\n                />\n            </Card>\n        </Card>\n    );\n}\n","/* eslint-disable */\n// Custom components\nimport React from \"react\";\n\nimport TabProfile from \"./TabProfile\";\nimport TabPassword from \"./TabPassword\";\nimport TabPayment from \"./TabPayment\";\n\nexport default function RightContent(props) {\n  const { activeTabId, resumeData, currentProfile, planDetail } = props;\n\n  const renderStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return (\n          <TabProfile \n            currentProfile={currentProfile}\n            planDetail={planDetail}/>\n        );\n      case 1:\n        return (\n          <TabPassword \n            currentProfile={currentProfile}\n            planDetail={planDetail}/>\n        );\n      case 2:\n        return (\n          <TabPayment planDetail={planDetail}/>\n        );\n      default:\n        return (\n          <TabProfile \n            currentProfile={currentProfile}\n            planDetail={planDetail}/>\n        );\n    }\n}\n\n  return (\n    <>\n      {resumeData.map((job, index) => {\n        return (\n          <div\n            key={index}\n            style={\n              activeTabId === index\n                ? { display: \"block\" }\n                : { display: \"none\" }\n            }>\n            { renderStepContent(index) }\n          </div>\n        )})\n      }\n    </>\n  );\n}\n","/* eslint-disable */\nexport const USER_PACKAGE_ENDPOINT = 'api/v1/user-packages';\nexport const INFORMATION_PACKAGE_ENDPOINT = 'api/v1/user-packages/info';\nexport const PREORDER_PACKAGE_ENDPOINT = 'api/v1/user-packages/pre-order';\n\nexport const ADMIN_CONFIRM_ENDPOINT = 'api/v1/admin/user-packages/id/confirm';\nexport const ADMIN_LIST_ENDPOINT = 'api/v1/admin/user-packages/all';\n","/* eslint-disable */\nimport { \n    USER_PACKAGE_ENDPOINT,\n    INFORMATION_PACKAGE_ENDPOINT,\n    PREORDER_PACKAGE_ENDPOINT,\n    ADMIN_CONFIRM_ENDPOINT,\n    ADMIN_LIST_ENDPOINT\n  } from './endpoints';\n  import ApiFactory from '../ApiFactory';\n  \n  const UserPackageApi = new ApiFactory({url: process.env.REACT_APP_API_ENDPOINT });\n  \n  UserPackageApi.createEntities([\n    { name: USER_PACKAGE_ENDPOINT },\n    { name: INFORMATION_PACKAGE_ENDPOINT },\n    { name: PREORDER_PACKAGE_ENDPOINT },\n    { name: ADMIN_CONFIRM_ENDPOINT },\n    { name: ADMIN_LIST_ENDPOINT }\n  ]);\n  \n  const fetchListUserPackageApi = () => UserPackageApi.createBasicCRUDEndpoints({ name: USER_PACKAGE_ENDPOINT }).get();\n  const createUserPackageApi = (data) => UserPackageApi.createBasicCRUDEndpoints({ name: USER_PACKAGE_ENDPOINT }).post(data);\n  const preOrderUserPackageApi = (data) => UserPackageApi.createBasicCRUDEndpoints({ name: PREORDER_PACKAGE_ENDPOINT }).post(data);\n  const fetchInfoUserPackageApi = (params) => UserPackageApi.createBasicCRUDEndpoints({ name: INFORMATION_PACKAGE_ENDPOINT }).get(params); \n  \n  const fetchAdminListApi = (params) => UserPackageApi.createBasicCRUDEndpoints({ name: ADMIN_LIST_ENDPOINT }).get(params);\n  const adminConfirmUserPackageApi = (data) => UserPackageApi.createBasicCRUDEndpoints({ name: ADMIN_CONFIRM_ENDPOINT }).submitPut(data)\n\n  export {\n    createUserPackageApi,\n    preOrderUserPackageApi,\n    adminConfirmUserPackageApi,\n    fetchListUserPackageApi,\n    fetchAdminListApi,\n    fetchInfoUserPackageApi\n  }\n  ","/* eslint-disable */\nimport React from \"react\";\n// Chakra imports\nimport { Flex, Icon, Image, Text, useColorModeValue, SkeletonCircle } from \"@chakra-ui/react\";\n\nimport { useTranslation } from 'react-i18next';\nimport { toHHMMSS } from \"../../../../utils/handleValidate\";\n\n\nexport default function VideoCardInfo(props) {\n  const { thumbnail, title, duration } = props;\n\n  // Chakra Color Mode\n  const textColor = useColorModeValue(\"brands.900\", \"white\");\n  const bgItem = useColorModeValue(\n    { bg: \"white\", boxShadow: \"0px 40px 58px -20px rgba(112, 144, 176, 0.12)\" },\n    { bg: \"navy.700\", boxShadow: \"unset\" }\n  );\n  const { t } = useTranslation();\n\n  return (\n    <Flex direction={{ base: \"column\" }} justify='center' w='400px'>\n      <Flex position='relative' align='center'>\n        {\n          thumbnail ? (\n            <Image src={thumbnail} h='100px' borderRadius='5px' me='16px' />\n          ) : (\n            <SkeletonCircle size='100' width=\"100px\" borderRadius=\"5px\" me=\"16px\" />\n          )\n        }\n        <Flex\n          direction='column'\n          w={{ base: \"70%\", md: \"100%\" }}\n          me={{ base: \"4px\", md: \"32px\", xl: \"10px\", \"3xl\": \"32px\" }}>\n          <Text\n            color={textColor}\n            fontSize={{\n              base: \"md\",\n            }}\n            mb='5px'\n            fontWeight='bold'\n            me='14px'>\n            {title}\n          </Text>\n          <Text\n            color='secondaryGray.800'\n            fontSize={{\n              base: \"sm\",\n            }}\n            fontWeight='400'\n            me='14px'>\n            {toHHMMSS(duration)}\n          </Text>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","export default __webpack_public_path__ + \"820237f02a8728611607960f63733c56.png\";","/* eslint-disable */\nimport React, { useState, useMemo, useEffect } from 'react'\nimport {\n    Flex,\n    Heading,\n    FormControl,\n    FormLabel,\n    Input,\n    FormHelperText,\n    useColorModeValue,\n    Table,\n    Link,\n    Tbody,\n    Td, Icon,\n    Text,\n    Th,\n    Thead,\n    Tr, Button, Image\n} from '@chakra-ui/react';\n\nimport {\n    useGlobalFilter,\n    usePagination,\n    useSortBy,\n    useTable,\n} from \"react-table\";\n\nimport { useTranslation } from 'react-i18next';\n\nimport { IoAddCircleOutline, IoRemoveCircleOutline } from 'react-icons/io5';\nimport VideoCardInfo from \"./VideoCardInfo\";\nimport noVideoStreamImg from '../../../../assets/img/no-video-stream.png';\n\n\nconst InputVideoStep = (props) => {\n    // Chakra color mode\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n    let linkColor = useColorModeValue({ base: \"gray.400\", lg: \"blue\" }, \"blue\");\n    \n    const [show, setShow] = useState(false);\n    \n    const { t } = useTranslation();\n\n    const { \n        columnsData,\n        tableData,\n        handleRemoveURLVideo,\n        handleOpenModal,\n        setInputValue,\n        formik,\n        isEdit\n    } = props;\n\n    const columns = useMemo(() => columnsData, [columnsData]);\n    const data = useMemo(() => tableData, [tableData]);\n\n    const tableInstance = useTable(\n        {\n            columns,\n            data,\n        },\n        useGlobalFilter,\n        useSortBy,\n        usePagination\n    );\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        page,\n        prepareRow,\n        initialState,\n    } = tableInstance;\n    initialState.pageSize = 5;\n\n    const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\n\n    // Chakra Color Mode\n    const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\n\n    let bodyWithNoData = () => {\n        return (\n            <Tr>\n                <Td></Td>\n                <Td>\n                    <Flex flexDirection=\"column\" justify='center' width=\"100%\" align='center' my='20px'>\n                        <Image\n                            src={noVideoStreamImg}\n                            w={{ base: \"100%\", \"3xl\": \"100%\" }}\n                            h={{ base: \"100%\", \"3xl\": \"100%\" }}\n                            borderRadius='20px'\n                        />\n                        <Text color={textColorPrimary} textAlign='center' fontWeight='bold' fontSize='l' my='15px'>\n                            {t('content.no_video_livestream')}\n                        </Text>\n                        <Button \n                            mt={{ base: \"10px\", \"2xl\": \"auto\" }}\n                            variant='solid'\n                            colorScheme='green'\n                            size=\"sm\"\n                            onClick={handleOpenModal()}>\n                            <Icon\n                                transition='0.2s linear'\n                                w='25px'\n                                h='25px'\n                                pr='5px'\n                                as={IoAddCircleOutline}\n                                color='white'\n                            />\n                            Thêm Video\n                        </Button>\n                    </Flex>\n                </Td>\n                <Td></Td>\n            </Tr>\n        );\n    };\n\n    let bodyWithData = () => {\n        return page.map((row, index) => {\n            prepareRow(row);\n            return (\n                <Tr {...row.getRowProps()} key={index}>\n                    {row.cells.map((cell, index) => {\n                        let data = \"\";\n                        if (cell.column.Header === \"#\") {\n                            data = (\n                                <Flex align='center'>\n                                    <Text color={textColor} fontSize='sm' fontWeight='700'>\n                                        {cell.value}\n                                    </Text>\n                                </Flex>\n                            );\n                        } else if (cell.column.Header === \"VIDEO\") {\n                            data = (\n                                <VideoCardInfo\n                                    title={cell.value.title}\n                                    duration={cell.value.duration}\n                                    thumbnail={cell.value.thumbnail}\n                                />\n                            );\n                        } else if (cell.column.Header === \"ACTION\") {\n                            data = (\n                                <Button \n                                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                                    variant='outline'\n                                    size=\"sm\"\n                                    isDisabled={isEdit || false}\n                                    colorScheme='orange'\n                                    onClick={handleRemoveURLVideo(cell)}\n                                    fontWeight='500'>\n                                    <Icon\n                                        transition='0.2s linear'\n                                        w='25px'\n                                        h='25px'\n                                        pr='5px'\n                                        as={IoRemoveCircleOutline}\n                                        color='orange'\n                                    />\n                                    Xóa\n                                </Button>\n                            );\n                        }\n                        return (\n                            <Td\n                              {...cell.getCellProps({\n                                style: {\n                                    minWidth: cell.column.minWidth,\n                                    width: cell.column.width,\n                                  },\n                              })}\n                              key={index}\n                              fontSize={{ sm: \"14px\" }}\n                              borderColor='transparent'>\n                              {data}\n                            </Td>\n                        );\n                    })}\n                </Tr>\n            );\n        })\n    };\n    return (\n        <>\n            <Heading color={textColor} fontSize='20px' my='20px'>\n                Chọn Video\n            </Heading>\n            <FormLabel\n                display='flex'\n                ms='4px'\n                fontSize='md'\n                fontWeight='500'\n                mt='24px'>\n                Tiêu đề:\n            </FormLabel>\n            <Input\n                name=\"name\"\n                value={formik.values.name}\n                onChange={(e) => setInputValue(\"name\", e.target.value)}\n                isRequired={true}\n                readOnly={isEdit || false}\n                variant='auth'\n                fontSize='md'\n                ms={{ base: \"0px\", md: \"0px\" }}\n                placeholder='Nhập tiêu đề gợi nhớ cho lượt phát livestream'\n                fontWeight='500'\n                size=\"md\"\n            />\n            {formik.errors.name && formik.touched.name && (\n                <p className=\"text-error\">{formik.errors.name}</p>\n            )}\n            <FormControl mt=\"1%\">\n                <Flex\n                    px={{ base: \"0px\" }}\n                    justifyContent='space-between'\n                    alignItems='end'\n                    w='100%'\n                    fontWeight='500'\n                    fontSize='md'\n                    mb='8px'>\n                    <FormLabel display='flex'\n                        ms='4px'\n                        fontSize='md'\n                        fontWeight='500'\n                        mt='24px'>\n                        Danh sách phát:\n                    </FormLabel>\n                    {\n                        (tableData.length === 0) || (\n                            <Button \n                                mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                                variant='brand'\n                                onClick={handleOpenModal()}\n                                size=\"sm\"\n                                // onClick={onOpen()}\n                                isDisabled={true}\n                                fontWeight='500'>\n                                <Icon\n                                    transition='0.2s linear'\n                                    w='25px'\n                                    h='25px'\n                                    pr='5px'\n                                    as={IoAddCircleOutline}\n                                    color='white'\n                                />\n                                Thêm Video\n                            </Button>\n                        )\n                    }\n                </Flex>\n                <Table {...getTableProps()} variant='striped' mb='24px' border=\"1px\" borderColor=\"gray.300\" borderRadius=\"10px\">\n                    <Thead bgColor=\"#f5f5f5\">\n                        {headerGroups.map((headerGroup, index) => (\n                            <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\n                                {headerGroup.headers.map((column, index) => (\n                                    <Th\n                                        {...column.getHeaderProps({...column.getSortByToggleProps(),\n                                            style: { minWidth: column.minWidth, width: column.width }\n                                        })}\n                                        pe='10px'\n                                        key={index}\n                                        width=\"100px\"\n                                        borderColor={borderColor}>\n                                        <Flex\n                                            justify='space-between'\n                                            align='center'\n                                            fontSize={{ sm: \"10px\", lg: \"12px\" }}\n                                            color='gray.400'>\n                                            {column.render(\"Header\")}\n                                        </Flex>\n                                    </Th>\n                                ))}\n                            </Tr>\n                        ))}\n                    </Thead>\n                    <Tbody {...getTableBodyProps()}>\n                        {\n                            (tableData.length != 0) ? bodyWithData() : bodyWithNoData()\n                        }\n                    </Tbody>\n                </Table>\n                {formik.errors.url && formik.touched.url && (\n                    <p className=\"text-error\">{formik.errors.url}</p>\n                )}\n                <FormHelperText>Khách hàng chịu trách nhiệm về nội dung được phát trong livestream theo\n                    <Link\n                        fontWeight='500'\n                        color={linkColor}\n                        href={`#/general/policy`}>\n                        {' '}Chính sách & Quy định của MKStream</Link>\n                </FormHelperText>\n            </FormControl>\n        </>\n    )\n}\n\nexport default InputVideoStep;","/* eslint-disable */\nimport React, { useState } from 'react'\nimport {\n    Heading,\n    FormControl,\n    GridItem,\n    FormLabel,\n    Select,\n    useColorModeValue,\n    Badge\n} from '@chakra-ui/react';\n\nimport { useTranslation } from 'react-i18next';\nimport { validateYouTubeUrl } from '../../../../utils/handleValidate';\nimport { VIDEO_RESOLUTION_DEFAULT } from '../../../../variables';\n\nconst ConfigureStreamStep = (props) => {\n    // Chakra color mode\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n\n    const { t } = useTranslation();\n\n    const { \n        listVideoResolution,\n        formik,\n        setInputValue,\n        isEdit,\n        allUserStream,\n        displaySubRowState,\n        listServerAgent\n    } = props;\n\n    const checkYoutubeLink = validateYouTubeUrl(formik.values.url);\n\n    console.log('---- formik nè ----',  (isEdit || false) && !checkYoutubeLink);\n\n    return (\n        <>\n            <Heading color={textColor} fontSize='20px' my='20px'>\n                Cấu hình\n            </Heading>\n\n            <FormControl as={GridItem} colSpan={[6, 3]} mb=\"3%\">\n                <FormLabel\n                    htmlFor=\"agent_id\"\n                    fontSize=\"md\"\n                    fontWeight=\"md\"\n                    color=\"gray.700\"\n                    _dark={{\n                        color: 'gray.50',\n                    }}>\n                    Chọn server:\n                </FormLabel>\n                <Select\n                    id=\"agent_id\"\n                    name=\"agent_id\"\n                    isDisabled={isEdit || false}\n                    // isDisabled={displaySubRowState === \"table-video\" || displaySubRowState === \"table-thread\" ? false : true}\n                    value={formik.values.agent_id || \"\"}\n                    onChange={(e) => setInputValue(\"agent_id\", e.target.value)}\n                    autoComplete=\"agent_id\"\n                    placeholder=\"--- Chọn server ---\"\n                    _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                    _placeholder={{ color: \"gray.400\" }}\n                    focusBorderColor=\"brand.400\"\n                    shadow=\"sm\"\n                    size=\"md\"\n                    w=\"full\"\n                    rounded=\"md\">\n                    { listServerAgent.map((item, id) => {\n                        return ( <option id={item.value} value={item.value}>{item.label}</option> )\n                    })}\n                </Select>\n                {formik.errors.agent_id && formik.touched.agent_id && (\n                    <p className=\"text-error\">{formik.errors.agent_id}</p>\n                )}\n            </FormControl>\n            <FormControl as={GridItem} colSpan={[6, 3]} mb=\"3%\">\n                <FormLabel\n                    htmlFor=\"stream_id\"\n                    fontSize=\"md\"\n                    fontWeight=\"md\"\n                    color=\"gray.700\"\n                    _dark={{\n                        color: 'gray.50',\n                    }}>\n                    Luồng liên kết:\n                </FormLabel>\n                <Select\n                    id=\"stream_id\"\n                    name=\"stream_id\"\n                    isDisabled={isEdit || false}\n                    // isDisabled={displaySubRowState === \"table-video\" || displaySubRowState === \"table-thread\" ? false : true}\n                    value={formik.values.stream_id}\n                    onChange={(e) => setInputValue(\"stream_id\", e.target.value)}\n                    autoComplete=\"stream_id\"\n                    placeholder=\"--- Chọn luồng ---\"\n                    _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                    _placeholder={{ color: \"gray.400\" }}\n                    focusBorderColor=\"brand.400\"\n                    shadow=\"sm\"\n                    size=\"md\"\n                    w=\"full\"\n                    rounded=\"md\">\n                    { allUserStream.map((item, id) => {\n                        return ( <option id={item.value} value={item.value}>{item.label}</option> )\n                    })}\n                </Select>\n                {formik.errors.stream_id && formik.touched.stream_id && (\n                    <p className=\"text-error\">{formik.errors.stream_id}</p>\n                )}\n            </FormControl>\n            {\n                checkYoutubeLink ? (\n                    <FormControl as={GridItem} colSpan={[6, 3]} mb=\"3%\">\n                        <FormLabel\n                            htmlFor=\"country\"\n                            fontSize=\"md\"\n                            fontWeight=\"md\"\n                            color=\"gray.700\"\n                            _dark={{\n                                color: 'gray.50',\n                            }}>\n                            Độ phân giải video:\n                        </FormLabel>\n                        <Select\n                            id=\"resolution\"\n                            name=\"resolution\"\n                            value={ checkYoutubeLink ? formik.values.resolution : VIDEO_RESOLUTION_DEFAULT['1080p'].name}\n                            // value={ formik.values.resolution }\n                            isDisabled={checkYoutubeLink ? (isEdit || false) : true}\n                            onChange={(e) => setInputValue(\"resolution\", e.target.value)}\n                            autoComplete=\"resolution\"\n                            _placeholder={{ color: \"gray.400\" }}\n                            isReadOnly\n                            placeholder=\"--- Chọn độ phân giải ---\"\n                            focusBorderColor=\"brand.400\"\n                            shadow=\"sm\"\n                            size=\"md\"\n                            w=\"full\"\n                            rounded=\"md\">\n                            { listVideoResolution.map((item, id) => {\n                                return ( \n                                    <option id={item.value} value={item.value}>{item.label}</option>\n                                )\n                            }) }\n                        </Select>\n                        {formik.errors.resolution && formik.touched.resolution && (\n                            <p className=\"text-error\">{formik.errors.resolution}</p>\n                        )}\n                    </FormControl>\n                ) : null\n            }\n        </>\n    )\n}\n\nexport default ConfigureStreamStep;","/* eslint-disable */\nimport React from 'react'\nimport {\n    Heading,\n    FormControl,\n    GridItem,\n    FormLabel,\n    Input,\n    SimpleGrid,\n    useColorModeValue,\n    Text,\n    Grid\n} from '@chakra-ui/react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { formatDate } from '../../../../utils/handleValidate';\n\nconst FinalStep = (props) => {\n    // Chakra color mode\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n\n    const { t } = useTranslation();\n    const {\n        formik,\n        setInputValue,\n        isEdit\n    } = props;\n\n    return (\n        <>\n            <Heading color={textColor} fontSize='20px' my='20px'>\n                Thời gian\n            </Heading>\n            <SimpleGrid columns={1} spacing={6}>\n                <FormControl as={GridItem} colSpan={[3, 2]}>\n                    <FormLabel\n                        fontSize=\"sm\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Thời gian bắt đầu:\n                    </FormLabel>\n                    <Grid\n                        my=\"5px\"\n                        templateRows='repeat(1, 1fr)'\n                        templateColumns='repeat(2, 1fr)'\n                        gap={4}\n                        >\n                        <GridItem colSpan={1}>\n                            <Input\n                                placeholder=\"Select Date and Time\"\n                                isReadOnly={isEdit || false}\n                                value={formik.values.started_at}\n                                _placeholder={{ color: \"gray.400\" }}\n                                onChange={(e) => setInputValue(\"started_at\", e.target.value)}\n                                size=\"md\"\n                                type=\"date\"\n                            />\n                            {formik.errors.started_at && formik.touched.started_at && (\n                                <p className=\"text-error\">{formik.errors.started_at}</p>\n                            )}\n                        </GridItem>\n                        <GridItem colSpan={1}>\n                            <input\n                                className=\"appearance-none px-6 py-5 focus:outline-none\"\n                                pattern=\"^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$\"\n                                type=\"time\"\n                                value={formik.values.started_time}\n                                _placeholder={{ color: \"gray.400\" }}\n                                disabled={isEdit || false}\n                                onChange={(e) => setInputValue(\"started_time\", e.target.value)}\n                                // pattern=\"[0-9]{2}:[0-9]{2}\"\n                                style={{ padding: \"7px 20px\", border: \"1px solid #e1e1e1\", borderRadius: \"8px\", width: \"100%\"  }}\n                                minLength={5}\n                                maxLength={5}\n                                locale=\"sv-sv\"\n                            />\n                            <Text>    \n                                {formik.errors.started_time && formik.touched.started_time && (\n                                    <p className=\"text-error\">{formik.errors.started_time}</p>\n                                )}\n                            </Text>\n                        </GridItem>\n                    </Grid>\n                    <Text mt=\"8px\"color=\"gray\" fontSize=\"xs\" size=\"xs\">Ngày: <strong>{formik.values.started_at && formatDate(formik.values.started_at) || '...'}</strong> - Giờ: <strong>{formik.values.started_time || '...'}</strong></Text>\n                </FormControl>\n\n                <FormControl as={GridItem} colSpan={[3, 2]}>\n                    <FormLabel\n                        fontSize=\"sm\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Thời gian kết thúc:\n                    </FormLabel>\n                    <Grid\n                        my=\"5px\"\n                        templateRows='repeat(1, 1fr)'\n                        templateColumns='repeat(2, 1fr)'\n                        gap={4}\n                        >\n                        <GridItem colSpan={1}>\n                            <Input\n                                placeholder=\"Select Date and Time\"\n                                value={formik.values.ended_at}\n                                isReadOnly={isEdit || false}\n                                onChange={(e) => setInputValue(\"ended_at\", e.target.value)}\n                                size=\"md\"\n                                type=\"date\"\n                            />\n                            {formik.errors.ended_at && formik.touched.ended_at && (\n                                <p className=\"text-error\">{formik.errors.ended_at}</p>\n                            )}\n                        </GridItem>\n                        <GridItem colSpan={1}>\n                            <input\n                                className=\"input-time-custom appearance-none focus:outline-none\"\n                                {...props}\n                                type=\"time\"\n                                disabled={isEdit || false}\n                                value={formik.values.ended_time}\n                                _placeholder={{ color: \"gray.400\" }}\n                                onChange={(e) => setInputValue(\"ended_time\", e.target.value)}\n                                style={{ padding: \"7px 20px\", border: \"1px solid #e1e1e1\", borderRadius: \"8px\", width:\"100%\" }}\n                                pattern=\"[0-9]{2}:[0-9]{2}\"\n                                minLength={5}\n                                maxLength={5}\n                            />\n                            {formik.errors.ended_time && formik.touched.ended_time && (\n                                <p className=\"text-error\">{formik.errors.ended_time}</p>\n                            )}\n                        </GridItem>\n                    </Grid>\n                    <Text mt=\"8px\"color=\"gray\" fontSize=\"xs\" size=\"xs\">Ngày: <strong>{formik.values.ended_at && formatDate(formik.values.ended_at) || '...'}</strong> - Giờ: <strong>{formik.values.ended_time || '...'}</strong></Text>\n                </FormControl>\n            </SimpleGrid>\n        </>\n    )\n}\n\nexport default FinalStep;","/* eslint-disable */\nimport React, { useState } from 'react'\nimport {\n    Button,\n    FormLabel,\n    Input,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Spinner,\n    Text\n} from '@chakra-ui/react';\n\nimport { useTranslation } from 'react-i18next';\n\nconst ModalAddUrl = ({ \n    isOpen,\n    onClose,\n    handleAddURLVideo,\n    loadingAddVideo,\n    formik,\n    setInputValue\n}) => {\n    const { t } = useTranslation();\n    \n    return (    \n        <Modal isCentered size=\"2xl\" isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Thêm video từ URL</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <Text fontSize='xs'>Link video:</Text>\n                    <Text fontSize='xs'>- Sử dụng link nguồn là <strong>GOOGLE DRIVE</strong> hoặc <strong>YOUTUBE</strong> để livestream</Text>\n                    <Text fontSize='xs'>- Thông số video chuẩn: định dạng: <strong>.mp4</strong>, mã hóa: <strong>h264</strong>, \n                    chất lượng âm thanh: <strong>128kbs 44100 Hz</strong></Text>\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='md'\n                        fontWeight='500'\n                        mt='24px'>\n                        URL:\n                    </FormLabel>\n                    <Input\n                        name=\"title_livestream\"\n                        isRequired={true}\n                        // onChange={(e) => setUrl(e.target.value)}\n                        onChange={(e) => setInputValue(\"url\", e.target.value)}\n                        value={formik.values.url}\n                        variant='auth'\n                        fontSize='sm'\n                        ms={{ base: \"0px\", md: \"0px\" }}\n                        type='email'\n                        placeholder='http:// hoặc https://'\n                        fontWeight='500'\n                        size='md'\n                    />\n                    {formik.errors.url && (\n                        <p className=\"text-error\">{formik.errors.url}</p>\n                    )}\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button colorScheme=\"facebook\" variant=\"outline\" size=\"md\" mr={3} onClick={onClose}>Hủy bỏ</Button>\n                    <Button \n                        colorScheme='facebook'\n                        size=\"md\"\n                        isDisabled={formik.errors.url}\n                        onClick={handleAddURLVideo(formik.values.url)}\n                    >{loadingAddVideo ? <Spinner size='sm' color=\"white\"/> : 'Thêm vào danh sách phát'}</Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n};\n\nexport default ModalAddUrl;","/* eslint-disable */\nimport { useMemo } from 'react';\n\nconst DOTS = '···';\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nconst usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    /*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n\nexport {\n    DOTS,\n    usePagination\n}","/* eslint-disable */\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { usePagination, DOTS } from '../../contexts/pagination';\nimport { Select } from '@chakra-ui/react';\n\nconst Pagination = ({\n    onPageChange,\n    totalCount,\n    siblingCount = 1,\n    currentPage,\n    pageSize, \n    color,\n    typeName = \"\"\n}) => {\n    const [itemsPerPage, setItemsPerPage] = useState(pageSize);\n    const paginationRange = usePagination({\n        currentPage,\n        totalCount,\n        siblingCount,\n        pageSize: itemsPerPage\n    });\n\n    if (currentPage === 0 || paginationRange.length < 2) {\n        return null; \n    }\n\n    const onNext = () => {\n        if (currentPage < paginationRange[paginationRange.length - 1]) {\n            onPageChange(currentPage + 1, itemsPerPage);\n        }\n    };\n\n    const onPrevious = () => {\n        if (currentPage > 1) {\n            onPageChange(currentPage - 1, itemsPerPage);\n        }\n    };\n\n    const lastPage = paginationRange[paginationRange.length - 1];\n\n    const handleItemsPerPageChange = (event) => {\n        const { value } = event?.target;\n        setItemsPerPage(Number(value));\n        onPageChange(currentPage, value);\n        onPageChange(1, itemsPerPage);\n    };\n\n    return (\n        <div className=\"pagination-wrapper\" style={{  display: 'flex', alignContent: 'center', alignItems: 'center', justifyContent: 'center', marginTop: '10px' }}>\n            <div className=\"pagination-info\">\n                <span>Tổng cộng <strong>{totalCount}</strong> {typeName}</span>\n            </div>\n            <ul className={classnames('pagination-container', `pagination-bar-${color}`)}>\n                <button\n                    className={classnames(`pagination-item-${color}`, { disabled: currentPage === 1 })}\n                    onClick={onPrevious}\n                    disabled={currentPage === 1}\n                    aria-label=\"Previous Page\"\n                >\n                    <div className=\"arrow left\" />\n                </button>\n                {paginationRange.map((pageNumber, index) => (\n                    pageNumber === DOTS ? (\n                        <li key={index} className={`pagination-item-${color} dots`}>&#8230;</li>\n                    ) : (\n                        <button\n                            key={index}\n                            className={classnames(`pagination-item-${color}`, { selected: pageNumber === currentPage })}\n                            onClick={() => onPageChange(pageNumber)}\n                            aria-current={pageNumber === currentPage ? \"page\" : undefined}\n                        >\n                            {pageNumber}\n                        </button>\n                    )\n                ))}\n                <button\n                    className={classnames(`pagination-item-${color}`, { disabled: currentPage === lastPage })}\n                    onClick={onNext}\n                    disabled={currentPage === lastPage}\n                    aria-label=\"Next Page\"\n                >\n                    <div className=\"arrow right\" />\n                </button>\n            </ul>\n\n            <Select\n                value={itemsPerPage}\n                onChange={handleItemsPerPageChange}\n                className=\"items-per-page-select\"\n                aria-label=\"Items per page\"\n                size=\"sm\"\n                disabled\n                style={{ marginTop: '5px' }}\n                w=\"fit-content\"\n            >\n                <option value={10}>10 {typeName}/trang</option>\n                <option value={15}>15 {typeName}/trang</option>\n                <option value={20}>20 {typeName}/trang</option>\n                <option value={25}>25 {typeName}/trang</option>\n                <option value={100}>100 {typeName}/trang</option>\n            </Select>\n        </div>\n    );\n};\n\nexport default Pagination;\n","/* eslint-disable */\nimport React from \"react\";\n\n// Chakra imports\nimport {\n  Icon,\n  Flex,\n  Text,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Assets\nimport {\n  MdOutlineMoreHoriz,\n  MdCancel,\n  MdDeleteOutline,\n  MdOutlinePerson,\n  MdPlayArrow,\n  MdEditSquare,\n} from \"react-icons/md\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { VIDEO_STATUS_GENERAL } from \"../../../../variables\";\n\nexport default function MenuVideo(props) {\n  const {\n    playRightAwayVideo,\n    editCurrVideoStream,\n    detailCurrVideoStream,\n    killCurrVideoStream,\n    delCurrVideoStream,\n    dataVideo,\n    setMenuSelected,\n    ...rest\n  } = props;\n\n  const groupVideoMenu = [\n    {\n      title: 'Phát ngay',\n      icons: MdPlayArrow,\n      action: playRightAwayVideo,\n      stateValidate: [VIDEO_STATUS_GENERAL.PENDING]\n    },\n    {\n      title: 'Chỉnh sửa',\n      icons: FaRegEdit,\n      action: editCurrVideoStream,\n      stateValidate: [\n        VIDEO_STATUS_GENERAL.PENDING,\n        VIDEO_STATUS_GENERAL.STREAMING,\n        VIDEO_STATUS_GENERAL.ERROR,\n        VIDEO_STATUS_GENERAL.CANCELED,\n        // VIDEO_STATUS_GENERAL.DOWNLOADING,\n      ]\n    },\n    {\n      title: 'Chi tiết',\n      icons: MdOutlinePerson,\n      action: detailCurrVideoStream,\n      stateValidate: [\n        VIDEO_STATUS_GENERAL.PENDING,\n        VIDEO_STATUS_GENERAL.STREAMING,\n        VIDEO_STATUS_GENERAL.FINISHED,\n        VIDEO_STATUS_GENERAL.CANCELED,\n        VIDEO_STATUS_GENERAL.ERROR,\n        VIDEO_STATUS_GENERAL.EXPIRED_STREAM,\n        VIDEO_STATUS_GENERAL.DOWNLOADING,\n      ]\n    },\n    {\n      title: 'Hủy phát',\n      icons: MdCancel,\n      action: killCurrVideoStream,\n      stateValidate: [\n        VIDEO_STATUS_GENERAL.STREAMING,\n        VIDEO_STATUS_GENERAL.DOWNLOADING,\n      ]\n    },\n    {\n      title: 'Xóa',\n      icons: MdDeleteOutline,\n      action: delCurrVideoStream,\n      stateValidate: [\n        VIDEO_STATUS_GENERAL.PENDING,\n        VIDEO_STATUS_GENERAL.FINISHED,\n        VIDEO_STATUS_GENERAL.CANCELED,\n        VIDEO_STATUS_GENERAL.ERROR,\n        VIDEO_STATUS_GENERAL.EXPIRED_STREAM\n      ]\n    },\n  ]\n\n  const textColor = useColorModeValue(\"secondaryGray.800\", \"white\");\n  const textHover = useColorModeValue(\n    { color: \"secondaryGray.900\", bg: \"unset\" },\n    { color: \"secondaryGray.500\", bg: \"unset\" }\n  );\n  const iconColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgList = useColorModeValue(\"white\", \"whiteAlpha.100\");\n  const bgShadow = useColorModeValue(\n    \"14px 17px 40px 4px rgba(112, 144, 176, 0.08)\",\n    \"unset\"\n  );\n  const bgButton = useColorModeValue(\"secondaryGray.400\", \"whiteAlpha.100\");\n  const bgHover = useColorModeValue(\n    { bg: \"secondaryGray.400\" },\n    { bg: \"whiteAlpha.50\" }\n  );\n  const bgFocus = useColorModeValue(\n    { bg: \"secondaryGray.300\" },\n    { bg: \"whiteAlpha.100\" }\n  );\n\n  // Ellipsis modals\n  const {\n    isopen: isOpenModal,\n    onOpen: onOpenModal,\n    onClose: onCloseModal,\n  } = useDisclosure();\n\n  return (\n    <Menu isopen={isOpenModal} onClose={onCloseModal} placement=\"auto-start\">\n      <MenuButton\n        id=\"menu-video-action\"\n        justifyContent='center'\n        _hover={bgHover}\n        _focus={bgFocus}\n        _active={bgFocus}\n        w='30px'\n        h='30px'\n        onClick={(e) => {\n          // e.preventDefault();\n          onOpenModal()\n        }}\n        borderRadius='10px'\n        {...rest}>\n        <Icon as={MdOutlineMoreHoriz} color={iconColor} w='24px' h='24px' />\n      </MenuButton>\n      <MenuList\n        w='fit-content'\n        minW='unset'\n        maxW='200px !important'\n        backdropFilter='blur(63px)'\n        bg={bgList}\n        boxShadow={bgShadow}\n        borderRadius='20px'\n        p='15px'>\n        {\n          groupVideoMenu.map((item, index) => {\n            let stateValidate = item.stateValidate;\n            return (\n              <MenuItem\n                key={index}\n                transition='0.2s linear'\n                color={textColor}\n                _hover={textHover}\n                p='0px'\n                borderRadius='8px'\n                _active={{\n                  bg: \"transparent\",\n                }}\n                isDisabled={!stateValidate.includes(dataVideo.status)}\n                _focus={{\n                  bg: \"transparent\",\n                }}\n                onClick={() => {\n                    item.action()\n                    setMenuSelected(dataVideo)\n                }}\n                mx=\"15px\"\n                my='10px'>\n                <Flex align='center'>\n                  <Icon as={item.icons} h='16px' w='16px' mr='8px' />\n                  <Text fontSize='md' color=\"black\" fontWeight='400'>\n                    {item.title}\n                  </Text>\n                </Flex>\n              </MenuItem>\n            )\n          })\n        }\n      </MenuList>\n    </Menu>\n  );\n}\n","export default __webpack_public_path__ + \"c0c7dbd123fe9a923fb1ad86f1c9aced.png\";","/* eslint-disable */\nimport React, { useState } from 'react'\nimport {\n    Button,\n    FormLabel,\n    Input,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Spinner\n} from '@chakra-ui/react';\n\nimport { useTranslation } from 'react-i18next';\n\nconst ModalStreamVideo = ({ \n    size,\n    isOpen,\n    onClose,\n    title,\n    content,\n    footer,\n    handleConfirm,\n    addButton\n}) => {\n    const { t } = useTranslation();\n    \n    return (    \n        <Modal isCentered size={size ? size : \"3xl\"} isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{title}</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <p>{content}</p>\n                </ModalBody>\n                {\n                    footer ? (\n                        <ModalFooter>\n                            {\n                                addButton ? addButton : null\n                            }\n                            <Button colorScheme=\"blue\" size=\"sm\" variant=\"outline\" mr={3} onClick={onClose}>Hủy bỏ</Button>\n                            <Button \n                                colorScheme='blue' size=\"sm\"\n                                // isDisabled={formik.errors.url}\n                                onClick={() => handleConfirm()}\n                            >Đồng ý</Button>\n                        </ModalFooter>\n                    ) : null\n                }\n            </ModalContent>\n        </Modal>\n    )\n};\n\nexport default ModalStreamVideo;","/* eslint-disable */\nimport React, { useState, useCallback, useEffect, useRef } from 'react'\nimport {\n    Progress,\n    Box,\n    ButtonGroup,\n    Button,\n    Grid,\n    useDisclosure,\n    Flex,\n    Step,\n    StepDescription,\n    StepIcon,\n    StepIndicator,\n    StepNumber,\n    StepSeparator,\n    StepStatus,\n    StepTitle,\n    Stepper,\n    Text,\n} from '@chakra-ui/react';\n\nimport * as Yup from \"yup\";\nimport { setIn, useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\nimport InputVideoStep from '../components/InputVideoStep';\nimport ConfigureStreamStep from '../components/ConfigureStreamStep';\nimport FinalStep from '../components/FinalStep';\n\nimport {\n    columnsInsertVideoStream, regexYoutubeLink\n} from \"../../../../variables/index\";\n\nimport {\n    validateYouTubeUrl,\n} from '../../../../utils/handleValidate';\n\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    createStreamingApi,\n    fetchListAcceptedResolution,\n    fetchListUserStreamApi,\n    fetchVideoMETAInfoData,\n    listStreamingApi\n} from '../../../../api/Stream';\nimport { MESSSAGE_STATUS_CODE } from '../../../../variables';\nimport ModalAddUrl from '../components/ModalAddUrl';\n\nconst steps = [\n    { title: 'Chọn video', description: \"\" },\n    { title: 'Cấu hình', description: \"\" },\n    { title: 'Thời gian', description: \"\" }\n];\n\nexport default function DetailVideoLivestream(props) {\n    const { dataGeneral, displaySubRowState, listServerAgent } = props; \n\n    const [allUserStream, setAllUserStream] = useState([]);\n    \n    let timeStart = dataGeneral.started_at.split(\" \");\n    let timeEnd = dataGeneral.ended_at.split(\" \");\n\n    const initialValues = {\n        name: dataGeneral.name,\n        stream_id: dataGeneral.stream_id,\n        agent_id: dataGeneral.agent_id,\n        url: dataGeneral.url,\n        resolution: dataGeneral.resolution,\n        started_at: timeStart[0],\n        ended_at: timeEnd[0],\n        started_time: timeStart.slice(-1).pop(),\n        ended_time: timeEnd.slice(-1).pop(),\n    };\n\n    // const ref = useRef()\n    const { t } = useTranslation();\n    const [activeStep, setActiveStep] = useState(1);\n    const [listVideoResolution, setListVideoResolution] = useState();\n    const [loadingAddVideo, setLoadingAddVideo] = useState(false);\n\n    const [tableVideoPlaylist, setTableVideoPlaylist] = useState([]);\n\n    const { isOpen: isOpen, onOpen: onOpen, onClose: onClose } = useDisclosure();\n\n    const validateSchema = Yup.object().shape({\n        name: Yup.string().required(t('content.required_field')),\n        stream_id: Yup.string().required(t('content.required_field')),\n        agent_id: Yup.string().required(t('content.required_field')),\n        url: Yup.string()\n            .required(t('content.required_field')),\n        resolution: Yup.string().required(t('content.required_field')),\n        started_at: Yup.date().required(t('content.required_field')),\n        ended_at: Yup.date()\n            .required(t('content.required_field'))\n            .when('started_at',\n                (started_at, schema) => (started_at && schema.min(started_at, t('content.ended_time_bigger_than_started_time')))),\n    });\n\n    const handleFetchVideoResolution = async () => {\n        try {\n            const responseResolution = await fetchListAcceptedResolution();\n            if (responseResolution.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                let data = [];\n\n                responseResolution.data.data.map(item => {\n                    data.push({\n                        'label': item.name + ' - ' + item.resolution,\n                        'value': item.name\n                    });\n                });\n                setListVideoResolution(data);\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    const handleFetchVideoStreamingByStreamID = async (stream_id) => {\n        try {\n            const responseVideoStream = await listStreamingApi();\n            if (responseVideoStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                let resArr = [];\n                let groupThumbnail = [];\n                responseVideoStream.data.data.items.map(async (item) => {\n                    if (item.stream_id == stream_id) {\n                        resArr.push(item);\n                        groupThumbnail.push(item.video_info.thumbnail);\n                    }    \n                });\n                return { groupVideo: resArr, groupThumbnail };\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n\n    const fetchAllUserStream = async () => {\n        try {\n            const responseVideoStream = await fetchListUserStreamApi({\n                limit: 500\n            });\n            if (responseVideoStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                setAllUserStream(responseVideoStream.data.data.items.map((item) => {\n                    return {\n                        label: item.name,\n                        value: item.id\n                    }\n                }));\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n    \n    const handleFetchUserStream = async () => {\n        try {\n            const responseUserStream = await fetchListUserStreamApi();\n            if (responseUserStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                const dataResponse = responseUserStream.data.data\n\n                let data = [];\n                let listItems = [];\n                dataResponse.items.map(item => data.push({\n                    'label': item.name,\n                    'value': item.id\n                }));\n                await Promise.all(dataResponse.items.map(async (docs) => {\n                    let { groupVideo, groupThumbnail } = await handleFetchVideoStreamingByStreamID(docs.id);\n                    return listItems.push({ \n                        ...docs,\n                        groupThumbnail: groupThumbnail,\n                        groupVideo: groupVideo\n                    });\n                }));\n            }\n            return responseUserStream;\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        fetchAllUserStream();\n        handleFetchVideoResolution();\n        handleFetchUserStream();\n        setTableVideoPlaylist([{\n            action: \"remove\",\n            order: 1,\n            video: dataGeneral.video_info\n        }]);\n        setInputValue(\"name\", dataGeneral.name);\n    }, []);\n\n    const handleOpenModal = () => () => {\n        onOpen();\n    }\n\n    const handleRemoveURLVideo = (cell) => () => {\n        let temp = tableVideoPlaylist.filter(obj => obj != tableVideoPlaylist[cell.row.index]);\n        setTableVideoPlaylist(temp);\n        setInputValue(\"name\", \"\");\n        setInputValue(\"url\", \"\");\n    }\n    \n    function isIsoDate(str) {\n        if (/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}/.test(str)) { return true; } else { return false; }   \n    }\n\n    const handleOnSubmitFormEditStream = async (values, { resetForm }) => {\n        try {\n            Object.keys(values).forEach((item) => {\n                if (item == 'started_at' || item == 'ended_at') {\n                    if (isIsoDate(values[item])) values[item] = values[item].replace('T', ' ').replace('Z', '')\n                }\n            });\n\n            const response = await createStreamingApi(values);\n            if (response.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(MESSSAGE_STATUS_CODE.SUCCESS.message)\n                await handleFetchUserStream();\n            }\n            resetForm();\n            onCloseVideoStreamModal();\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            // resetForm();\n        }\n    };\n\n    const handleAddURLVideo = (url) => async () => {\n        setLoadingAddVideo(true);\n        try {\n            if (validateYouTubeUrl(url)) {\n                let responseVideoMETA = await fetchVideoMETAInfoData({ 'url': url });\n                if (responseVideoMETA.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                    await Promise.all(\n                        setInputValue(\"name\", responseVideoMETA.data.data.title),\n                        setTableVideoPlaylist([...tableVideoPlaylist, {\n                            \"order\": tableVideoPlaylist.length + 1,\n                            \"video\": responseVideoMETA.data.data,\n                            \"action\": \"remove\"\n                        }]),\n                        onClose()\n                    )\n                }\n                \n                if (formik.values.name === \"\") {\n                    setInputValue(\"url\", url);\n                }\n            } else {\n                let responseVideoMETA = await fetchVideoMETAInfoData({ 'url': url });\n                if (responseVideoMETA.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                    await Promise.all(\n                        setTableVideoPlaylist([...tableVideoPlaylist, {\n                            \"order\": tableVideoPlaylist.length + 1,\n                            \"video\": responseVideoMETA.data.data,\n                            \"action\": \"remove\"\n                        }]),\n                        onClose()\n                    )\n                }\n            }\n            setLoadingAddVideo(false);\n        } catch (err) {\n            setLoadingAddVideo(false);\n            console.log(err)\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    const handleGoBackStep = () => {\n        setActiveStep(activeStep - 1);\n    }\n\n    const handleNextStep = () => {\n        setActiveStep(activeStep + 1)\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmitFormEditStream,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    \n    const renderStepContent = (step) => {\n        switch (step) {\n          case 1:\n            return (\n                <InputVideoStep\n                    isEdit={true}\n                    columnsData={columnsInsertVideoStream}\n                    tableData={tableVideoPlaylist}\n                    handleRemoveURLVideo={handleRemoveURLVideo}\n                    handleOpenModal={handleOpenModal}\n                    setInputValue={setInputValue}\n                    formik={formik}\n                />\n            );\n          case 2:\n            return (\n                <ConfigureStreamStep\n                    isEdit={true}\n                    allUserStream={allUserStream}\n                    listServerAgent={listServerAgent}\n                    listVideoResolution={listVideoResolution}\n                    setInputValue={setInputValue}\n                    formik={formik}\n                    displaySubRowState={displaySubRowState}\n                />\n            );\n          case 3:\n            return (\n                <FinalStep\n                    isEdit={true}\n                    setInputValue={setInputValue}\n                    formik={formik}\n                />\n            );\n          default:\n            return (\n                <Center h=\"120px\">\n                    <Text fontSize=\"lg\" gutterBottom>\n                        Chi tiết video\n                    </Text>\n                </Center>\n            );\n        }\n    }\n\n    const formUpdateStream = (\n        <form onSubmit={formik.handleSubmit}>\n            { renderStepContent(activeStep)}\n            <ButtonGroup mt=\"2%\" w=\"100%\">\n                <Flex w=\"100%\" justifyContent=\"flex-end\" alignItems=\"right\">\n                    {\n                        activeStep === 1 || (\n                            <Button\n                                onClick={() => handleGoBackStep()}\n                                isDisabled={\n                                    activeStep === 1\n                                }\n                                colorScheme=\"blue\"\n                                variant=\"outline\"\n                                w=\"7rem\"\n                                mr=\"1%\">\n                                Quay lại\n                            </Button>\n                        )\n                    }\n                    {\n                        activeStep === 3 || (\n                            <Button\n                                w=\"7rem\"\n                                // isDisabled={\n                                //     Object.keys(formik.errors)\n                                // }\n                                onClick={() => handleNextStep()}\n                                colorScheme=\"blue\"\n                                variant=\"brand\">\n                                Tiếp theo\n                            </Button>\n                        )\n                    }\n                </Flex>\n            </ButtonGroup>\n        </form>\n    );\n\n    const modalContent = (\n        <>\n            <ModalAddUrl\n                isOpen={isOpen}\n                onClose={onClose}\n                handleAddURLVideo={handleAddURLVideo}\n                loadingAddVideo={loadingAddVideo}\n                setInputValue={setInputValue}\n                formik={formik}\n            />\n            <Card py='15px'>\n                <Stepper index={activeStep}>\n                    {steps.map((activeStep, index) => (\n                        <Step key={index}>\n                        <StepIndicator>\n                            <StepStatus\n                            complete={<StepIcon />}\n                            incomplete={<StepNumber />}\n                            active={<StepNumber />}\n                            />\n                        </StepIndicator>\n\n                        <Box flexShrink='0'>\n                            <StepTitle>{activeStep.title}</StepTitle>\n                            <StepDescription>{activeStep.description}</StepDescription>\n                        </Box>\n\n                        <StepSeparator />\n                        </Step>\n                    ))}\n                </Stepper>\n                {formUpdateStream}\n            </Card>\n        </>\n    )\n\n    return (\n        <>\n            {modalContent}\n        </>\n    )\n}\n","/* eslint-disable */\nimport {\n    Flex,\n    Table,\n    Tbody,\n    Td,\n    Text,\n    Th,\n    Thead,\n    Tr,\n    useColorModeValue,\n    Badge,\n    Button,\n    Icon,\n    Spinner,\n    Box,\n    Tooltip,\n    Image\n} from \"@chakra-ui/react\";\nimport UseAnimations from \"react-useanimations\";\nimport download from 'react-useanimations/lib/download';\nimport activity from 'react-useanimations/lib/activity';\n\nimport React, { useEffect, useMemo } from \"react\";\n\nimport {\n    useGlobalFilter,\n    usePagination,\n    useSortBy,\n    useRowSelect,\n    useTable,\n    useExpanded,\n    useFlexLayout\n} from \"react-table\";\nimport { IoArrowForward, IoPauseOutline } from \"react-icons/io5\";\nimport { FaArrowDown, FaArrowUp } from \"react-icons/fa\";\nimport { VIDEO_RESOLUTION_DEFAULT, VIDEO_STREAMING_STATUS } from \"../../../../variables/index\";\nimport { reverseTimeDate, toHHMMSS, truncate } from \"../../../../utils/handleValidate\";\nimport MenuVideo from \"./MenuVideo\";\nimport noVideoStreamImg from '../../../../assets/img/no-video-stream.png';\nimport { FiServer } from \"react-icons/fi\";\nimport { MdOutlineHub } from \"react-icons/md\";\n\nexport default function TableSubRow(props) {\n    const {\n        detailCurrVideoStream, killCurrVideoStream, delCurrVideoStream,\n        playRightAwayVideo, editCurrVideoStream,\n        tableData, setMenuSelected, isLoading,\n        renderRowSubComponent,\n        paginationData,\n    } = props;\n\n    const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\n\n    const columnsData = [\n        {\n            Header: \"Thumbnail\",\n            accessor: \"name\",\n            Cell: ({ value, row }) => {\n                return (\n                    <Box position='relative'>\n                        <Image\n                            src={row.original?.video_info?.thumbnail}\n                            w={\"90px\"}\n                            borderRadius='6px'\n                        />\n                        <Button\n                            position='absolute'\n                            bg='white'\n                            p=\"10px !important\"\n                            fontSize={9}\n                            bottom='0px'\n                            left='0px'\n                            borderRadius='3px'\n                            h='12px'>\n                            {toHHMMSS(row.original?.video_info?.duration)}\n                        </Button>\n                    </Box>\n                )\n            }\n        },\n        {\n            Header: \"Tiêu đề\",\n            accessor: \"\",\n            Cell: ({ value, row }) => {\n                return (\n                    <Text\n                        color={textColor}\n                        fontSize={{\n                            base: \"sm\",\n                        }}\n                        mb='5px'\n                        fontWeight='bold'\n                        me='14px'>\n                        {truncate(row.original.video_info.title || row.original.name, 40)}\n                    </Text>\n                )\n            }\n        },\n        {\n            Header: \"Luồng phát\",\n            accessor: \"\",\n            Cell: ({ value, row }) => {\n                return (\n                    <span style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n                        <MdOutlineHub style={{ color: 'gray', marginRight: '7px', width: '18px', height: '18px' }} />\n                        <Text\n                            color={textColor}\n                            fontSize={{\n                                base: \"md\",\n                            }}\n                            fontWeight='bold'\n                            me='14px'>\n                            {row.original?.stream_obj?.name}\n                        </Text>\n                    </span>\n                )\n            }\n        },\n        {\n            Header: \"Server\",\n            accessor: \"\",\n            Cell: ({ value, row }) => {\n                return (\n                    <div style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n                        <FiServer color=\"#80808080\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n                        <Text\n                            color={textColor}\n                            fontSize={{\n                                base: \"md\",\n                            }}\n                            fontWeight='bold'\n                            me='14px'>\n                            {row.original?.agent_obj?.name || '...'}\n                        </Text>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: \"Thời gian phát\",\n            accessor: \"\",\n            Cell: ({ value, row }) => {\n                return (\n                    <Flex\n                        direction=\"column\"\n                        mt='5px'>\n                        <Text fontWeight='500' fontSize='sm' align=\"center\">\n                            <Icon\n                                transition='0.2s linear'\n                                w='12px'\n                                h='12px'\n                                as={IoArrowForward}\n                                color='black'\n                                mr=\"3px\"\n                            />\n                            {reverseTimeDate(row.original.started_at)}\n                        </Text>\n                        <Text fontWeight='500' fontSize='sm' align=\"center\">\n                            <Icon\n                                transition='0.2s linear'\n                                w='12px'\n                                h='12px'\n                                as={IoPauseOutline}\n                                color='black'\n                                mr=\"3px\"\n                            />\n                            {reverseTimeDate(row.original.ended_at)}\n                        </Text>\n                    </Flex>\n                )\n            }\n        },\n        {\n            Header: \"Độ phân giải\",\n            accessor: \"\",\n            Cell: ({ value, row }) => {\n                return (\n                    <Text\n                        color='secondaryGray.900'\n                        fontSize={{ base: \"sm\", }}\n                        fontWeight='500'\n                        me='10px'>\n                        {\n                            row.original.video_type !== 'google_drive' ? (\n                                <Badge variant='subtle' colorScheme={VIDEO_RESOLUTION_DEFAULT[row.original.resolution]?.color}>\n                                    {VIDEO_RESOLUTION_DEFAULT[row.original.resolution]?.name}\n                                </Badge>\n                            ) : <span style={{ color: '#80808080' }}>Chưa có thông tin</span>\n                        }\n                    </Text>\n                )\n            }\n        },\n        {\n            Header: \"Video livestream\",\n            accessor: \"\",\n            Cell: ({ value, row }) => {\n                return (\n                    <>\n                        { \n                            row?.original?.ytb_live_link ? (\n                                <Text\n                                    color='secondaryGray.900'\n                                    fontSize={{ base: \"sm\", }}\n                                    fontWeight='500'\n                                    me='10px'>\n                                    {row?.original?.ytb_live_link}\n                                </Text>\n                            ) : <span style={{ color: '#80808080' }}>Chưa có thông tin</span>\n                        }\n                    </>\n                )\n            }\n        },\n        {\n            Header: \"Trạng thái\",\n            accessor: \"\",\n            Cell: ({ row }) => {\n                const status = row.original.status;\n                const statusData = VIDEO_STREAMING_STATUS[status];\n                const statusID = statusData?.id;\n                \n                return (\n                    <div style={{ textAlign: \"left\" }}>\n                        <Tooltip \n                            label={row.original?.status_label || statusData?.message} \n                            placement=\"top\"\n                        >\n                            <span style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n                                <Text \n                                    w=\"fit-content\" \n                                    style={{ display: \"inline-flex\" }} \n                                    borderRadius=\"8px\" \n                                    py=\"3px\" \n                                    px=\"6px\" \n                                    fontSize=\"13px\"\n                                    bg={statusData?.color}\n                                    color={statusData?.textColor}\n                                >\n                                    {statusID === 6 ? (\n                                        <UseAnimations \n                                            name=\"download\"\n                                            animation={download} \n                                            size={20}\n                                            className=\"animation-icon\" \n                                            loop={false} \n                                            autoplay={false}\n                                            fillColor={statusData.textColor}\n                                            strokeColor={statusData.textColor}\n                                        />\n                                    ) : statusID === 1 ? (\n                                        <UseAnimations \n                                            name=\"activity\"\n                                            animation={activity} \n                                            size={20}\n                                            className=\"animation-icon\" \n                                            autoplay={true} \n                                            fillColor={statusData.textColor}\n                                            strokeColor={statusData.textColor}\n                                        />\n                                    ) : (\n                                        <Icon \n                                            as={statusData?.icon}\n                                            w='20px' \n                                            fontWeight={800}\n                                            h='auto' \n                                            color={statusData?.textColor}\n                                        />\n                                    )}\n                                </Text>\n                                {/* <span style={{ marginLeft: '8px' }} >{row.original?.status_label || statusData?.message}</span> */}\n                                <span style={{ marginLeft: '8px', fontWeight: 700, color: 'gray' }} >{statusData?.message}</span>\n                            </span>\n                        </Tooltip>\n                    </div>\n                );\n            }\n        },        \n        {\n            Header: \"Hành động\",\n            accessor: \"\",\n            Cell: ({ value, row }) => {\n                return (\n                    <div style={{marginLeft: '20px'}}>\n                        <MenuVideo\n                            setMenuSelected={setMenuSelected}\n                            dataVideo={row.original}\n                            playRightAwayVideo={() => playRightAwayVideo()}\n                            detailCurrVideoStream={() => detailCurrVideoStream(row.original)}\n                            editCurrVideoStream={() => editCurrVideoStream(row.original)}\n                            killCurrVideoStream={() => killCurrVideoStream()}\n                            delCurrVideoStream={() => delCurrVideoStream()}\n                        />\n                    </div>\n                )\n            }\n        }\n    ];\n\n    const columns = useMemo(() => columnsData, []);\n    const data = useMemo(() => tableData, [tableData]);\n\n    const tableInstance = useTable(\n        {\n            columns,\n            data,\n            getTrProps: (state, rowInfo, column, instance) => {\n                return {};\n            }\n        },\n        useGlobalFilter,\n        useSortBy,\n        useExpanded,\n        usePagination,\n        useRowSelect,\n        useFlexLayout\n    );\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        page,\n        prepareRow,\n        setPageSize\n    } = tableInstance;\n\n    useEffect(() => {\n        if (paginationData?.pageSize) {\n            setPageSize(paginationData.pageSize);\n        }\n    }, [paginationData, setPageSize]);\n\n    return (\n        <Table {...getTableProps()} variant=\"simple\" size=\"sm\">\n            <Thead>\n                {headerGroups.map(headerGroup => (\n                    <Tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <Th\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\n                                isNumeric={column.isNumeric}\n                            >\n                                {column.render('Header')}\n                                <span>\n                                    {column.isSorted ? (column.isSortedDesc ? <FaArrowDown /> : <FaArrowUp />) : ''}\n                                </span>\n                            </Th>\n                        ))}\n                    </Tr>\n                ))}\n            </Thead>\n            <Tbody {...getTableBodyProps()}>\n                {isLoading ? (\n                    <Tr>\n                        <Td colSpan={columns.length} textAlign=\"left\">\n                            <Spinner />\n                        </Td>\n                    </Tr>\n                ) : tableData?.length > 0 ? (\n                    page?.map(row => {\n                        prepareRow(row);\n                        return (\n                            <React.Fragment key={row?.id}>\n                                <Tr {...row.getRowProps()} borderTop={\"1px solid #80808017\"}>\n                                    {row.cells.map(cell => (\n                                        <Td\n                                            {...cell.getCellProps()}\n                                            isNumeric={cell.column.isNumeric}\n                                            padding={\"5px 10px\"}\n                                            margin={\"auto 0\"}\n                                        >\n                                            {cell.render('Cell')}\n                                        </Td>\n                                    ))}\n                                </Tr>\n                                {renderRowSubComponent && row?.isExpanded ? (\n                                    <Tr>\n                                        <Td colSpan={columns?.length}>\n                                            {renderRowSubComponent({ row })}\n                                        </Td>\n                                    </Tr>\n                                ) : null}\n                            </React.Fragment>\n                        );\n                    })\n                ) : (\n                    <Tr>\n                        <Td colSpan={columns?.length} textAlign=\"center\" py={8}>\n                            <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                            <Image src={noVideoStreamImg} alt=\"No Video Stream\" width=\"20%\" my={4} />\n                            <Text fontSize=\"lg\" fontWeight=\"bold\" color=\"gray.600\" className=\"mb-1\" style={{ marginBottom: '5px' }}>Không có dữ liệu</Text>\n                            <Text fontSize=\"md\" color=\"gray.500\">Hãy thêm luồng mới để bắt đầu.</Text>\n                            </Flex>\n                        </Td>\n                    </Tr>\n\n                )}\n            </Tbody>\n        </Table>\n    );\n}\n","/* eslint-disable */\nimport {\n    Text,\n    useColorModeValue,\n    Button,\n    Icon,\n    FormControl,\n    Grid,\n    GridItem,\n    Tooltip,\n    Select\n} from \"@chakra-ui/react\";\n\nimport React from \"react\"\nimport { IoAddCircleOutline } from \"react-icons/io5\";\nimport { MdFilterList } from \"react-icons/md\";\nimport UseAnimations from \"react-useanimations\";\nimport alertOctagon from 'react-useanimations/lib/alertOctagon';\n\nconst displayTypeChildTable = [\n    {\n        label: 'Video Stream - Dạng bảng',\n        value: 'table-video'\n    },\n    {\n        label: 'Luồng phát - Dạng bảng',\n        value: 'table-thread'\n    },\n    {\n        label: 'Luồng phát - Dạng thẻ',\n        value: 'card-thread'\n    },\n]\n\nexport default function FilterHeader(props) {\n    const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\n\n    const {\n        title,\n        setDisplaySubRowState,\n        handleOpenFilterModal,\n        handleOpenModalCreateStream,\n        activeFilter,\n        displaySubRowState } = props;\n\n    return (\n        <Grid\n            templateRows='repeat(1, 1fr)'\n            templateColumns='repeat(12, 1fr)'\n            gap={4} mb={0} px={2}\n        >\n            <GridItem colSpan={7} margin=\"auto 0\">\n                <FormControl>\n                    <Text\n                        color={textColor}\n                        fontSize='lg'\n                        fontWeight='700'\n                        mb=\"5px\"\n                        ml=\"20px\"\n                        lineHeight='100%'>\n                        {title}\n                    </Text>\n                </FormControl>\n            </GridItem>\n            <GridItem colSpan={2} margin=\"auto 0\">\n                <FormControl align=\"right\">\n                    <Select\n                        value={displaySubRowState}\n                        onChange={(e) => {\n                            console.log('--- target nè ----', e.target.value)\n                            setDisplaySubRowState(e.target.value)\n                        }}\n                        _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                        focusBorderColor=\"brand.400\"\n                        shadow=\"sm\"\n                        isDisabled={true}\n                        variant=\"flushed\"\n                        size=\"sm\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        {displayTypeChildTable.map((item, id) => {\n                            return (<option id={item.value} value={item.value}>{item.label}</option>)\n                        })}\n                    </Select>\n                </FormControl>\n            </GridItem>\n            <GridItem colSpan={1} margin=\"auto 0\" align=\"center\">\n                <FormControl>\n                    <Button\n                        _hover={{ bg: \"gray.100\" }}\n                        size=\"md\"\n                        color={\"black\"}\n                        colorScheme='black' \n                        variant='ghost' \n                        borderRadius='5px'\n                        px='10px'\n                        w=\"fit-content\"\n                        onClick={handleOpenModalCreateStream()}\n                        py='20px'>\n                        <Icon\n                            transition='0.2s linear'\n                            w='32px'\n                            h='32px'\n                            pr='10px'\n                            as={IoAddCircleOutline}\n                            color={\"black\"}\n                        />\n                        Thêm Video\n                    </Button>\n                </FormControl>\n            </GridItem>\n            <GridItem colSpan={1} align=\"center\">\n                <Button \n                    _hover={{ bg: \"gray.100\" }}\n                    size=\"md\"\n                    color={\"black\"}\n                    colorScheme={\"black\"}\n                    variant=\"solid\"\n                    borderRadius='5px'\n                    px='10px'\n                    w=\"fit-content\"\n                    py='20px'>\n                    <UseAnimations \n                        name=\"alertOctagon\"\n                        animation={alertOctagon} size={28}\n                        className=\"animation-icon\"\n                        fillColor=\"black\"\n                        strokeColor=\"black\"\n                    />\n                    <Tooltip label=\"Hướng dẫn sử dụng luồng livestream\" placement='top'>Hướng dẫn</Tooltip>\n                </Button>\n            </GridItem>\n            <GridItem colSpan={1} align=\"center\">\n                <Button \n                    _hover={{ bg: activeFilter === true ? \"green\" : \"gray.100\" }}\n                    size=\"md\"\n                    color={activeFilter === true ? \"white\" : \"black\"}\n                    colorScheme={activeFilter === true ? \"green\" : \"black\"}\n                    variant=\"solid\"\n                    borderRadius='5px'\n                    px='10px'\n                    w=\"fit-content\"\n                    py='20px'\n                    onClick={() => {\n                        handleOpenFilterModal();\n                    }}>\n                    <Icon\n                        transition='0.2s linear'\n                        w='32px'\n                        h='32px'\n                        pr='10px'\n                        as={MdFilterList}\n                        color={activeFilter === true ? \"white\" : \"black\"}\n                    />\n                    Bộ lọc\n                </Button>\n            </GridItem>\n        </Grid>\n    );\n}\n","/* eslint-disable */\n\nimport React, { useState } from \"react\";\n// Custom components\nimport Card from \"../../../../components/card/Card\";\n\n// Assets\nimport Pagination from '../../../../components/paginationCustom/Pagination';\nimport TableSubRow from \"../thread-component/TableSubRow\";\n\nexport default function VideoStreamTable(props) {\n    const {\n        tableData,\n        paginationData,\n        filterGroup,\n        setMenuSelected,\n        playRightAwayVideo,\n        editCurrVideoStream,\n        detailCurrVideoStream,\n        killCurrVideoStream,\n        delCurrVideoStream,\n        handleFetchResource } = props;\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const handleChangePage = () => async (page, limit) => {\n        setCurrentPage(page);\n        await handleFetchResource({ page, limit });\n    }\n\n    return (\n        <Card\n            direction='column'\n            w='100%'\n            px='0px'>\n            {filterGroup}\n            <Card\n                direction='column'\n                w='100%'\n                px='0px'\n                overflowX={{ base: \"scroll\"}}>        \n                <TableSubRow\n                    tableData={tableData || []}\n                    setMenuSelected={setMenuSelected}\n                    playRightAwayVideo={playRightAwayVideo}\n                    editCurrVideoStream={editCurrVideoStream}\n                    detailCurrVideoStream={detailCurrVideoStream}\n                    killCurrVideoStream={killCurrVideoStream}\n                    delCurrVideoStream={delCurrVideoStream}\n                />\n                </Card>\n            {\n                paginationData && (\n                    <Pagination\n                        color=\"blue\"\n                        typeName=\"video stream\"\n                        currentPage={currentPage}\n                        totalCount={paginationData.total}\n                        pageSize={paginationData.per_page}\n                        onPageChange={handleChangePage()}\n                    />\n                )\n            }\n        </Card>\n    );\n}\n","/* eslint-disable */\nimport React, { useState, useCallback, useEffect, useRef } from 'react'\nimport {\n    Progress,\n    Box,\n    ButtonGroup,\n    Button,\n    Grid,\n    useDisclosure,\n    Flex,\n    Step,\n    StepDescription,\n    StepIcon,\n    StepIndicator,\n    StepNumber,\n    StepSeparator,\n    StepStatus,\n    StepTitle,\n    Stepper,\n    Center,\n    Icon,\n    Text,\n} from '@chakra-ui/react';\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\nimport InputVideoStep from '../components/InputVideoStep';\nimport ConfigureStreamStep from '../components/ConfigureStreamStep';\nimport FinalStep from '../components/FinalStep';\n\nimport {\n    columnsInsertVideoStream, regexYoutubeLink\n} from \"../../../../variables/index\";\n\nimport {\n    _sleep,\n    validateYouTubeUrl,\n} from '../../../../utils/handleValidate';\n\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    createStreamingApi,\n    fetchListAcceptedResolution,\n    fetchListUserStreamApi,\n    fetchVideoMETAInfoData,\n    listStreamingApi,\n    updateStreamingApi\n} from '../../../../api/Stream';\nimport { MESSSAGE_STATUS_CODE } from '../../../../variables';\nimport ModalAddUrl from '../components/ModalAddUrl';\n\nconst steps = [\n    { title: 'Chọn video', description: \"\" },\n    { title: 'Cấu hình', description: \"\" },\n    { title: 'Thời gian', description: \"\" }\n];\n\nexport default function EditVideoLivestream(props) {\n    const { dataGeneral, displaySubRowState, handleRefresh, listServerAgent } = props;\n    \n    const [allUserStream, setAllUserStream] = useState([]);\n    \n    let timeStart = dataGeneral.started_at.split(\" \");\n    let timeEnd = dataGeneral.ended_at.split(\" \");\n    \n    console.log('--- data video nè- ----', dataGeneral);\n\n    const initialValues = {\n        name: dataGeneral?.name,\n        stream_id: dataGeneral?.stream_id,\n        agent_id: dataGeneral.agent_id,\n        url: dataGeneral?.url,\n        resolution: dataGeneral.video_type === 'google_drive' ? '1080p' : dataGeneral?.resolution,\n        started_at: timeStart[0],\n        ended_at: timeEnd[0],\n        started_time: timeStart.slice(-1).pop(),\n        ended_time: timeEnd.slice(-1).pop(),\n    }\n\n    const { t } = useTranslation();\n\n    const Step1Schema = Yup.object().shape({\n        name: Yup.string().required(t('content.required_field')),\n        url: Yup.string()\n            .required(t('content.required_field')),\n    });\n\n    const Step2Schema = Yup.object().shape({\n        stream_id: Yup.string().required(t('content.required_field')),\n        resolution: Yup.string().required(t('content.required_field')),\n    });\n\n    const Step3Schema = Yup.object().shape({\n        started_at: Yup.date().required(t('content.required_field')),\n        ended_at: Yup.date().required(t('content.required_field')),\n        started_time: Yup.string().required(t('content.required_field')),\n        ended_time: Yup.string().required(t('content.required_field'))\n    });\n    \n    const validateSchemaStep = [Step1Schema, Step2Schema, Step3Schema];\n\n    const [activeStep, setActiveStep] = useState(0);\n    const currentValidationSchema = validateSchemaStep[activeStep];\n    const isLastStep = activeStep === steps.length - 1;\n    const [listVideoResolution, setListVideoResolution] = useState();\n    const [loadingAddVideo, setLoadingAddVideo] = useState(false);\n\n    const [tableVideoPlaylist, setTableVideoPlaylist] = useState([]);\n\n    const { isOpen: isOpen, onOpen: onOpen, onClose: onClose } = useDisclosure();\n\n    const handleFetchVideoResolution = async () => {\n        try {\n            const responseResolution = await fetchListAcceptedResolution();\n            if (responseResolution.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                let data = [];\n\n                responseResolution.data.data.map(item => {\n                    data.push({\n                        'label': item.name + ' - ' + item.resolution,\n                        'value': item.name\n                    });\n                });\n                setListVideoResolution(data);\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    const handleFetchVideoStreamingByStreamID = async (stream_id) => {\n        try {\n            const responseVideoStream = await listStreamingApi();\n            if (responseVideoStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                let resArr = [];\n                let groupThumbnail = [];\n                responseVideoStream.data.data.items.map(async (item) => {\n                    if (item.stream_id == stream_id) {\n                        resArr.push(item);\n                        groupThumbnail.push(item.video_info.thumbnail);\n                    }    \n                });\n                return { groupVideo: resArr, groupThumbnail };\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n\n    const fetchAllUserStream = async () => {\n        try {\n            const responseVideoStream = await fetchListUserStreamApi({\n                limit: 500\n            });\n            if (responseVideoStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                setAllUserStream(responseVideoStream.data.data.items.map((item) => {\n                    return {\n                        label: item.name,\n                        value: item.id\n                    }\n                }));\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n    \n    const handleFetchUserStream = async () => {\n        try {\n            const responseUserStream = await fetchListUserStreamApi();\n            if (responseUserStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                const dataResponse = responseUserStream.data.data\n\n                let data = [];\n                let listItems = [];\n                dataResponse.items.map(item => data.push({\n                    'label': item.name,\n                    'value': item.id\n                }));\n                await Promise.all(dataResponse.items.map(async (docs) => {\n                    let { groupVideo, groupThumbnail } = await handleFetchVideoStreamingByStreamID(docs.id);\n                    return listItems.push({ \n                        ...docs,\n                        groupThumbnail: groupThumbnail,\n                        groupVideo: groupVideo\n                    });\n                }));\n            }\n            return responseUserStream;\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        fetchAllUserStream();\n        handleFetchVideoResolution();\n        handleFetchUserStream();\n        setTableVideoPlaylist([{\n            action: \"remove\",\n            order: 1,\n            video: dataGeneral.video_info\n        }]);\n        setInputValue(\"name\", dataGeneral.name);\n    }, []);\n\n    const handleOpenModal = () => () => {\n        onOpen();\n    }\n\n    const handleRemoveURLVideo = (cell) => () => {\n        let temp = tableVideoPlaylist.filter(obj => obj != tableVideoPlaylist[cell.row.index]);\n        setTableVideoPlaylist(temp);\n        setInputValue(\"name\", \"\");\n        setInputValue(\"url\", \"\");\n    }\n\n    const handleOnSubmitFormEditStream = async (values) => {\n        try {\n            if (isLastStep) {\n                let { started_time, ended_time, ...rest } = values\n                rest.started_at = rest.started_at + \" \" + started_time; \n                rest.ended_at = rest.ended_at + \" \" + ended_time;\n                rest.id = dataGeneral.id;\n                \n                const response = await updateStreamingApi(rest);\n                if (response.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                    toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`))\n                    \n                    _sleep(1000);\n                    handleRefresh();\n                    window.location.reload();\n\n                    setActiveStep(activeStep + 1);\n                    actions.resetForm();\n                    actions.setSubmitting(false);\n                }\n            } else {\n                setActiveStep(activeStep + 1);\n                actions.setTouched({});\n                actions.setSubmitting(false);\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const handleAddURLVideo = (url) => async () => {\n        setLoadingAddVideo(true);\n        try {\n            if (validateYouTubeUrl(url)) {\n                let responseVideoMETA = await fetchVideoMETAInfoData({ 'url': url });\n                if (responseVideoMETA.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                    await Promise.all(\n                        setInputValue(\"name\", responseVideoMETA.data.data.title),\n                        setTableVideoPlaylist([...tableVideoPlaylist, {\n                            \"order\": tableVideoPlaylist.length + 1,\n                            \"video\": responseVideoMETA.data.data,\n                            \"action\": \"remove\"\n                        }]),\n                        onClose()\n                    )\n                }\n                \n                if (formik.values.name === \"\") {\n                    setInputValue(\"url\", url);\n                }\n            } else {\n                let responseVideoMETA = await fetchVideoMETAInfoData({ 'url': url });\n                setInputValue(\"resolution\", \"1080p\");\n                if (responseVideoMETA.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                    await Promise.all(\n                        setTableVideoPlaylist([...tableVideoPlaylist, {\n                            \"order\": tableVideoPlaylist.length + 1,\n                            \"video\": responseVideoMETA.data.data,\n                            \"action\": \"remove\"\n                        }]),\n                        onClose()\n                    )\n                }\n            }\n            setLoadingAddVideo(false);\n        } catch (err) {\n            setLoadingAddVideo(false);\n            console.log(err)\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    const handleGoBackStep = () => {\n        setActiveStep(activeStep - 1);\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: currentValidationSchema,\n        onSubmit: handleOnSubmitFormEditStream,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            if (key === \"started_time\" || key === \"ended_time\") {\n                formik.setValues({ ...formik.values, [key]: value + \":00\" });\n            } else {formik.setValues({ ...formik.values, [key]: value });}\n        }, [formik]\n    );\n\n    const renderStepContent = (step) => {\n        switch (step) {\n          case 0:\n            return (\n                <InputVideoStep\n                    columnsData={columnsInsertVideoStream}\n                    tableData={tableVideoPlaylist}\n                    handleRemoveURLVideo={handleRemoveURLVideo}\n                    handleOpenModal={handleOpenModal}\n                    setInputValue={setInputValue}\n                    formik={formik}\n                />\n            );\n          case 1:\n            return (\n                <ConfigureStreamStep\n                    allUserStream={allUserStream}\n                    listServerAgent={listServerAgent}\n                    listVideoResolution={listVideoResolution}\n                    setInputValue={setInputValue}\n                    formik={formik}\n                    displaySubRowState={displaySubRowState}\n                />\n            );\n          case 2:\n            return (\n                <FinalStep\n                    setInputValue={setInputValue}\n                    formik={formik}\n                />\n            );\n          default:\n            return (\n                <Center h=\"120px\">\n                    <Text fontSize=\"lg\" gutterBottom>\n                        Cập nhật thành công\n                    </Text>\n                </Center>\n            );\n        }\n    }\n\n    const formUpdateStream = (\n        <form onSubmit={formik.handleSubmit}>\n            { renderStepContent(activeStep) }\n            <ButtonGroup mt=\"2%\" w=\"100%\">\n                <Flex w=\"100%\" justifyContent=\"flex-end\" alignItems=\"right\">\n                    {activeStep !== 0  && (\n                        <Button\n                            onClick={handleGoBackStep}\n                            colorScheme=\"blue\"\n                            variant=\"outline\"\n                            w=\"7rem\"\n                            mr=\"1%\">\n                            Quay lại\n                        </Button>\n                    )}\n                    <Button\n                        w=\"7rem\"\n                        isDisabled={formik.isSubmitting}\n                        colorScheme=\"blue\"\n                        type='submit'\n                        variant=\"brand\">\n                        {isLastStep ? 'Cập nhật' : 'Tiếp theo'}\n                    </Button>\n                </Flex>\n            </ButtonGroup>\n        </form>\n    );\n\n    const modalContent = (\n        <>\n            <ModalAddUrl\n                isOpen={isOpen}\n                onClose={onClose}\n                handleAddURLVideo={handleAddURLVideo}\n                loadingAddVideo={loadingAddVideo}\n                setInputValue={setInputValue}\n                formik={formik}\n            />\n            <Card py='15px'>\n                <Stepper index={activeStep}>\n                    {steps.map((activeStep, index) => (\n                        <Step key={index}>\n                        <StepIndicator>\n                            <StepStatus\n                            complete={<StepIcon />}\n                            incomplete={<StepNumber />}\n                            active={<StepNumber />}\n                            />\n                        </StepIndicator>\n\n                        <Box flexShrink='0'>\n                            <StepTitle>{activeStep.title}</StepTitle>\n                            <StepDescription>{activeStep.description}</StepDescription>\n                        </Box>\n\n                        <StepSeparator />\n                        </Step>\n                    ))}\n                </Stepper>\n                {formUpdateStream}\n            </Card>\n        </>\n    )\n\n    return (\n        <>\n            {modalContent}\n        </>\n    )\n}\n","/* eslint-disable */\nimport React from \"react\";\nimport {\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\nexport function SearchBar(props) {\n  // Pass the computed styles into the `__css` prop\n  const {\n    data,\n    onSearch,\n    variant,\n    background,\n    children,\n    placeholder,\n    borderRadius,\n    ...rest } = props;\n  // Chakra Color Mode\n  const searchIconColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputText = useColorModeValue(\"gray.700\", \"gray.100\");\n  return (\n    <InputGroup w={{ base: \"100%\" }} {...rest}>\n      <InputLeftElement\n        children={\n          <IconButton\n            bg='inherit'\n            borderRadius='inherit'\n            _hover={{  }}\n            _active={{\n              bg: \"inherit\",\n              transform: \"none\",\n              borderColor: \"transparent\",\n            }}\n            _focus={{\n              boxShadow: \"none\",\n            }}\n            icon={\n              <SearchIcon color={searchIconColor} w='15px' h='15px' />\n            }></IconButton>\n        }\n      />\n      <Input\n        variant='flushed'\n        fontSize='md'\n        color={inputText}\n        value={data || ''}\n        onChange={(e) => onSearch(e.target.value)}\n        fontWeight='400'\n        _placeholder={{ color: \"gray.400\" }}\n        borderRadius={borderRadius ? borderRadius : \"4px\"}\n        placeholder={placeholder ? placeholder : \"Tìm kiếm...\"}\n      />\n    </InputGroup>\n  );\n}\n","/* eslint-disable */\nimport {\n    Grid,\n    Icon,\n    GridItem,\n    FormLabel,\n    FormControl,\n    Select,\n    NumberInput,\n    NumberInputField,\n    NumberInputStepper,\n    NumberIncrementStepper,\n    NumberDecrementStepper\n} from '@chakra-ui/react';\n\nimport React from \"react\";\nimport { SearchBar } from '../../../../components/searchBar/SearchBar';\nimport { MdFeaturedVideo, MdOutlineComputer } from 'react-icons/md';\n\n\n\nexport default function FormFilterCustom(props) {\n    const { onSearch } = props;\n\n    const {\n        filter,\n        handleChangeStateFilter,\n        listFieldVideo,\n        statusFieldVideo,\n        allUserStream,\n        setFilter,\n        listServerAgent\n    } = props;\n\n    return (\n        <Grid\n            templateRows='repeat(1, 1fr)'\n            templateColumns='repeat(3, 1fr)'\n            gap={4}\n        >\n            <GridItem colSpan={1}>\n                <FormControl align=\"right\" mb=\"20px\">\n                    <FormLabel\n                        htmlFor=\"stream_id\"\n                        fontSize=\"xs\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Tìm kiếm tiêu đề:\n                    </FormLabel>\n                    <SearchBar\n                        name=\"keyword\"\n                        mb={{ base: '10px', md: 'unset' }}\n                        me=\"10px\" \n                        data={filter.keyword}\n                        onSearch={(value) => onSearch(value)}\n                    />\n                </FormControl>\n                <FormControl align=\"right\">\n                    <FormLabel\n                        htmlFor=\"stream_id\"\n                        fontSize=\"xs\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Số kết quả video:\n                    </FormLabel>\n                    <NumberInput\n                        min={1} max={50}\n                        clampValueOnBlur={false}\n                        value={filter.limit}\n                        onChange={(value) => setFilter(prevState => ({\n                            ...prevState,\n                            'limit': value\n                        }))}\n                        variant=\"flushed\"\n                    >\n                        <NumberInputField />\n                        <NumberInputStepper>\n                            <NumberIncrementStepper />\n                            <NumberDecrementStepper />\n                        </NumberInputStepper>\n                    </NumberInput>\n                </FormControl>\n            </GridItem>\n            <GridItem colSpan={1}>\n                <FormControl align=\"right\" mb=\"20px\">\n                    <FormLabel\n                        htmlFor=\"stream_id\"\n                        fontSize=\"xs\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Sắp xếp:\n                    </FormLabel>\n                    <Select\n                        name=\"order_by\"\n                        value={filter.order_by}\n                        onChange={handleChangeStateFilter}\n                        _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                        focusBorderColor=\"brand.400\"\n                        placeholder=\"Chọn thứ tự\"\n                        shadow=\"sm\"\n                        variant=\"flushed\"\n                        size=\"md\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        {listFieldVideo.map((item, id) => {\n                            return (<option id={item.value} value={item.value}>{item.label}</option>)\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl align=\"right\">\n                    <FormLabel\n                        htmlFor=\"status\"\n                        fontSize=\"xs\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Trạng thái:\n                    </FormLabel>\n                    <Select\n                        name=\"status\"\n                        value={filter.status}\n                        onChange={handleChangeStateFilter}\n                        _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                        focusBorderColor=\"brand.400\"\n                        placeholder=\"Chọn trạng thái\"\n                        shadow=\"sm\"\n                        variant=\"flushed\"\n                        size=\"md\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        {statusFieldVideo.map((item, id) => {\n                            return (<option id={item.value} value={item.value}>{item.label}</option>)\n                        })}\n                    </Select>\n                </FormControl>\n            </GridItem>\n            <GridItem colSpan={1}>\n                <FormControl align=\"right\" mb=\"20px\">\n                    <FormLabel\n                        htmlFor=\"stream_id\"\n                        fontSize=\"xs\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        <Icon as={MdFeaturedVideo} w='12px' h='12px' mr=\"5px\" />\n                        Theo luồng:\n                    </FormLabel>\n                    <Select\n                        name=\"stream_id\"\n                        value={filter.stream_id}\n                        onChange={handleChangeStateFilter}\n                        _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                        focusBorderColor=\"brand.400\"\n                        placeholder=\"Chọn luồng\"\n                        shadow=\"sm\"\n                        variant=\"flushed\"\n                        size=\"md\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        {allUserStream.map((item, id) => {\n                            return (<option id={item.value} value={item.value}>{item.label}</option>)\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl align=\"right\" mb=\"20px\">\n                    <FormLabel\n                        htmlFor=\"agent_id\"\n                        fontSize=\"xs\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        <Icon as={MdOutlineComputer} w='12px' h='12px' mr=\"5px\" />\n                        Theo server:\n                    </FormLabel>\n                    <Select\n                        name=\"agent_id\"\n                        value={filter.agent_id}\n                        onChange={handleChangeStateFilter}\n                        _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                        focusBorderColor=\"brand.400\"\n                        placeholder=\"Chọn server\"\n                        shadow=\"sm\"\n                        variant=\"flushed\"\n                        size=\"md\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        {listServerAgent.map((item, id) => {\n                            return (<option id={item.value} value={item.value}>{item.label}</option>)\n                        })}\n                    </Select>\n                </FormControl>\n            </GridItem>\n        </Grid>\n    );\n}\n","/* eslint-disable */\nimport React, { useState, useCallback, useEffect, useRef, Component } from 'react'\nimport {\n    Box,\n    ButtonGroup,\n    Button,\n    Grid,\n    useDisclosure,\n    Flex,\n    Step,\n    StepDescription,\n    StepIcon,\n    StepIndicator,\n    StepNumber,\n    StepSeparator,\n    StepStatus,\n    StepTitle,\n    Stepper,\n    Spinner,\n    Text,\n    Badge,\n    Avatar,\n    AvatarGroup,\n    Icon,\n    useOutsideClick,\n    GridItem,\n    SimpleGrid,\n    SkeletonCircle,\n    SkeletonText,\n    Center,\n} from '@chakra-ui/react';\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\nimport { RxReset } from \"react-icons/rx\";\n\nimport Card from \"../../../components/card/Card\";\nimport InputVideoStep from './components/InputVideoStep';\nimport ConfigureStreamStep from './components/ConfigureStreamStep';\nimport FinalStep from './components/FinalStep';\n\nimport {\n    MULTI_STEP_FORM_CREATE_STREAM,\n    USER_PACKAGE_STATUS,\n    columnsInsertVideoStream,\n    listOptionFieldVideo,\n    statusFieldVideo\n} from \"../../../variables/index\";\n\nimport {\n    defaultISODateString,\n    validateYouTubeUrl,\n    reverseTimeDate,\n    removeEmpty,\n    _sleep,\n} from '../../../utils/handleValidate';\n\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    cancelStreamingApi,\n    createStreamingApi,\n    deleteStreamingApi,\n    fetchListAcceptedResolution,\n    fetchListUserStreamApi,\n    fetchVideoMETAInfoData,\n    listStreamingApi,\n    playStreamingApi,\n    fetchListAgentServerOfUser\n} from '../../../api/Stream';\nimport { MESSSAGE_STATUS_CODE } from '../../../variables';\n\nimport ModalAddUrl from './components/ModalAddUrl';\nimport TableListThreadStream from './thread-component/TableListThreadStream';\nimport CardSubRow from './thread-component/CardSubRow';\nimport { MdArrowCircleDown, MdArrowCircleRight, MdLockReset, MdOutlineClose, MdOutlineDone, MdOutlineError, MdPause, MdPlayArrow, MdWatchLater } from 'react-icons/md';\nimport ModalStreamVideo from './thread-component/ModalStreamVideo';\nimport DetailVideoLivestream from './thread-component/DetailVideoLivestream';\nimport Pagination from '../../../components/paginationCustom/Pagination';\nimport TableSubRow from './thread-component/TableSubRow';\nimport FilterHeader from './display-video-component/FilterHeader';\nimport VideoStreamTable from './display-video-component/VideoStreamTable';\nimport EditVideoLivestream from './thread-component/EditVideoLivestream';\nimport FormFilterCustom from './display-video-component/FilterForm';\nimport { isEmpty } from 'lodash';\n\nconst initialValues = {\n    name: \"\",\n    stream_id: \"\",\n    agent_id: \"\",\n    url: \"\",\n    resolution: \"\",\n    started_at: \"\",\n    ended_at: \"\",\n    started_time: \"\",\n    ended_time: \"\"\n}\n\nconst columnsThreadStreams = [\n    {\n        // Build our expander column\n        id: \"expander\", // Make sure it has an ID\n        Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n            <>\n                <Text\n                    {...getToggleAllRowsExpandedProps()}\n                    fontSize={18}\n                    fontWeight={\"bold\"}\n                    ml={1}\n                >\n                    {isAllRowsExpanded ? <Icon as={MdArrowCircleDown} fontSize={30} width='20px' height='20px' color='blue.500' /> \n                        : <Icon as={MdArrowCircleRight} fontSize={30} width='20px' height='20px' color='blue.500' /> }\n                </Text>\n            </>\n        ),\n        Cell: ({ row, isAllRowsExpanded }) => {\n            return (\n                !row.canExpand ? (\n                    <Text\n                        { ...row.getToggleRowExpandedProps() }\n                        fontSize={25}\n                        fontWeight={\"bold\"}\n                        ml={1}\n                        px=\"20px\"\n                    >\n                        {row.isExpanded ? <Icon as={MdArrowCircleDown} fontSize={30} width='20px' height='20px' color='blue.500' /> \n                            : <Icon as={MdArrowCircleRight} fontSize={30} width='20px' height='20px' color='blue.500' />}\n                    </Text>\n                ) : null\n            )\n        }\n      },\n    {\n        Header: \"Tên luồng\",\n        accessor: \"name\",\n        Cell: ({ value, row }) => (\n            <Text fontSize='md' fontWeight='700'>\n                {value}\n            </Text>\n        )\n    },\n    {\n        Header: \"Số lượng video\",\n        accessor: \"\",\n        Cell: ({ value, row }) => {\n            return (\n                <>{\n                    row.original.groupThumbnail.length != 0 ? (\n                        <Grid\n                            templateRows='repeat(1, 1fr)'\n                            templateColumns='repeat(2, 1fr)'\n                            gap={2}\n                            >\n                            <GridItem colSpan={1} margin=\"auto 0\">\n                                <Text size=\"sm\"><strong>{row.original.groupThumbnail.length}</strong> Video</Text>\n                            </GridItem>\n                            <GridItem colSpan={1} margin=\"auto 0\">\n                                <AvatarGroup size='sm' max={2}>\n                                    { row.original.groupThumbnail.map((item) => (<Avatar src={item} />)) }\n                                </AvatarGroup>\n                            </GridItem>\n                        </Grid>\n                    ) : (\n                        <Text size=\"sm\">Chưa có video</Text>\n                    )\n                }</>\n            )\n        },\n    },\n    {\n        Header: \"Tiến trình\",\n        accessor: \"\",\n        Cell: ({ value, row }) => {\n            const statusTotal = {\n                \"0\": 0,\n                \"1\": 0,\n                \"2\": 0,\n                \"3\": 0,\n                \"4\": 0,\n                \"5\": 0\n            }\n            row.original.groupVideo.map((docs) => statusTotal[docs.status] = statusTotal[docs.status] + 1 );\n            return (\n                <Grid\n                    templateRows='repeat(2, 1fr)'\n                    templateColumns='repeat(1, 1fr)'\n                    >\n                    <GridItem rowSpan={1}>\n                        <Badge variant='subtle' px=\"5px\" py=\"2px\" m=\"2px\" borderColor=\"white\" borderRadius=\"10%\" bgColor='gray.200' justifyContent=\"center\" alignContent=\"center\">\n                            <Icon as={MdPlayArrow} color='black' w=\"15px\" h=\"12px\" />\n                            { statusTotal[\"0\"] }\n                        </Badge>\n                        <Badge variant='subtle' px=\"5px\" py=\"2px\" m=\"2px\" borderColor=\"white\" borderRadius=\"10%\" bgColor='gray.200'>\n                            <Icon as={MdPause} color='black' w=\"15px\" h=\"12px\" />\n                            { statusTotal[\"1\"] }</Badge>\n                        <Badge variant='subtle' px=\"5px\" py=\"2px\" m=\"2px\" borderColor=\"white\" borderRadius=\"10%\" bgColor='gray.200'>\n                            <Icon as={MdOutlineDone} color='black' w=\"15px\" h=\"12px\" />\n                            { statusTotal[\"2\"] }</Badge>\n                    </GridItem>\n                    <GridItem rowSpan={1}>\n                        <Badge variant='subtle' px=\"5px\" py=\"2px\" m=\"2px\" borderColor=\"white\" borderRadius=\"10%\" bgColor='gray.200'>\n                            <Icon as={MdOutlineClose} color='black' w=\"15px\" h=\"12px\" />\n                            { statusTotal[\"3\"] }</Badge>\n                        <Badge variant='subtle' px=\"5px\" py=\"2px\" m=\"2px\" borderColor=\"white\" borderRadius=\"10%\" bgColor='gray.200'>\n                            <Icon as={MdOutlineError} color='black' w=\"15px\" h=\"12px\" />\n                            { statusTotal[\"4\"] }</Badge>\n                        <Badge variant='subtle' px=\"5px\" py=\"2px\" m=\"2px\" borderColor=\"white\" borderRadius=\"10%\" bgColor='gray.200'>\n                            <Icon as={MdWatchLater} color='black' w=\"15px\" h=\"12px\" />\n                            { statusTotal[\"5\"] }</Badge>\n                    </GridItem>\n                </Grid>\n            )\n        },\n    },\n    {\n        Header: \"Thời hạn\",\n        accessor: \"\",\n        Cell: ({ value, row }) =>  {\n            return (\n                <Grid\n                    templateRows='repeat(1, 1fr)'\n                    templateColumns='repeat(2, 1fr)'\n                    gap={3}\n                    >\n                    <GridItem colSpan={1}>\n                        <Text fontSize={\"xs\"}>\n                            Từ ngày\n                        </Text>\n                        <Text fontSize={\"sm\"} fontWeight=\"bold\">\n                            {reverseTimeDate(row.original.started_at)}\n                        </Text>\n                    </GridItem>\n                    <GridItem colSpan={1}>\n                        <Text fontSize={\"xs\"}>\n                            Đến ngày \n                        </Text>\n                        <Text fontSize={\"sm\"} fontWeight=\"bold\">\n                            {reverseTimeDate(row.original.expired_at)}\n                        </Text>\n                    </GridItem>\n                </Grid>\n            )\n        }\n    },\n    {\n        Header: \"Trạng thái\",\n        accessor: \"status\",\n        Cell: ({ value, row }) => {\n            return (\n                <Flex align='center'>\n                    <Badge borderRadius=\"4px\" variant='solid' colorScheme={USER_PACKAGE_STATUS[value]?.color || 'gray'}>\n                        <Text \n                            color=\"white\" fontSize='xs' fontWeight='500'> \n                            {USER_PACKAGE_STATUS[value]?.message}\n                        </Text>\n                    </Badge>\n                </Flex>\n            )\n        }\n    }\n]\n\nlet initFilterLocalStorage = sessionStorage.getItem('filter_stream') && JSON.parse(sessionStorage.getItem('filter_stream'));\n\nlet interval;\n\nconst useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n   \n    // Remember the latest callback.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n   \n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\nconst initFormFilter = {\n    keyword: initFilterLocalStorage?.keyword || '',\n    order_by: initFilterLocalStorage?.order_by || null,\n    status:  initFilterLocalStorage?.status || null,\n    stream_id: initFilterLocalStorage?.stream_id || null,\n    agent_id: initFilterLocalStorage?.agent_id  || null,\n    limit: initFilterLocalStorage?.limit || 15\n}\n\nexport default function CreateLivestream() {\n    const { t } = useTranslation();\n\n    const Step1Schema = Yup.object().shape({\n        name: Yup.string().required(t('content.required_field')),\n        url: Yup.string().required(t('content.required_field')),\n    });\n\n    const Step2Schema = Yup.object().shape({\n        agent_id: Yup.string().required(t('content.required_field')),\n        stream_id: Yup.string().required(t('content.required_field')),\n        resolution: Yup.string().required(t('content.required_field')),\n    });\n\n    const Step3Schema = Yup.object().shape({\n        started_at: Yup.date().required(t('content.required_field')),\n        ended_at: Yup.date().required(t('content.required_field')),\n        started_time: Yup.string().required(t('content.required_field')),\n        ended_time: Yup.string().required(t('content.required_field'))\n    })\n    \n    const validateSchemaStep = [Step1Schema, Step2Schema, Step3Schema];\n\n    const ref = useRef();\n\n    const [listServerAgent, setListServerAgent] = useState([]);\n    \n    const [listUserStream, setListUserStream] = useState();\n    const [listVideoResolution, setListVideoResolution] = useState();\n    \n    const [menuSelected, setMenuSelected] = useState();\n    \n    const [tableVideoPlaylist, setTableVideoPlaylist] = useState([]);\n    const [loadingAddVideo, setLoadingAddVideo] = useState(false);\n    \n    const [displaySubRowState, setDisplaySubRowState] = useState('table-video');\n\n    const [tableThreadStream, setTableThreadStream] = useState({});\n    const [tableVideosStream, setTableVideosStream] = useState({});\n\n    const [filter, setFilter] = useState(initFormFilter);\n\n    const [allUserStream, setAllUserStream] = useState([]);\n\n    const [activeFilter, setActiveFilter] = useState(false);\n\n    useOutsideClick({\n        ref: ref,\n        handler: () => handleClickOutside(),\n    });\n\n    const [dataEditVideoLivestream, setDataEditVideoLivestream] = useState({});\n\n    const { isOpen: isOpen, onOpen: onOpen, onClose: onClose } = useDisclosure();\n    const { \n        isOpen: isOpenKillConfirm,\n        onOpen: onOpenKillConfirm,\n        onClose: onCloseKillConfirm\n    } = useDisclosure();\n\n    const { \n        isOpen: isOpenDelConfirm,\n        onOpen: onOpenDelconfirm,\n        onClose: onCloseDeleleConfirm\n    } = useDisclosure();\n\n    const { \n        isOpen: isOpenPlayRightAway,\n        onOpen: onOpenPlayRightAway,\n        onClose: onClosePlayRightAway\n    } = useDisclosure();\n\n    const { \n        isOpen: isOpenCreateVideoStreamModal,\n        onOpen: onOpenCreateVideoStreamModal,\n        onClose: onCloseCreateVideoStreamModal \n    } = useDisclosure();\n\n    const {\n        isOpen: isOpenDetailVideoStreamModal,\n        onOpen: onOpenDetailVideoStreamModal,\n        onClose: onCloseDetailVideoStreamModal\n    } = useDisclosure();\n\n    const {\n        isOpen: isOpenEditVideoStreamModal,\n        onOpen: onOpenEditVideoStreamModal,\n        onClose: onCloseEditVideoStreamModal\n    } = useDisclosure();\n\n    const {\n        isOpen: isOpenFilterModal,\n        onOpen: onOpenFilterModal,\n        onClose: onCloseFilterModal\n    } = useDisclosure();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const currentValidationSchema = validateSchemaStep[activeStep];\n    const isLastStep = activeStep === MULTI_STEP_FORM_CREATE_STREAM.length - 1;\n\n    const handleFetchVideoResolution = async () => {\n        try {\n            const responseResolution = await fetchListAcceptedResolution();\n            if (responseResolution.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                let data = [];\n                responseResolution.data.data.map(item => {\n                    data.push({\n                        'label': item.name + ' - ' + item.resolution,\n                        'value': item.name\n                    });\n                });\n                setListVideoResolution(data);\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    const handleClickOutside = () => {\n        if (!isOpenCreateVideoStreamModal) {\n            formik.resetForm();\n            setTableVideoPlaylist([]);\n            setActiveStep(0);\n        }\n    }\n\n    const handleFetchListVideoStream = async (params) => {\n        try {\n            let filterParams = removeEmpty(filter);\n            if (filterParams['order_by']) {\n                let orderByArr = filterParams['order_by'].split(\" \");\n                filterParams['order'] = orderByArr[0]\n                filterParams['by'] = orderByArr.slice(-1).pop();\n                delete filterParams['order_by'];\n            }\n            sessionStorage.setItem('filter_stream', JSON.stringify(filterParams));\n            const responseVideoStream = await listStreamingApi({...params, ...filterParams});\n            if (responseVideoStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                setTableVideosStream(responseVideoStream.data.data);\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n\n    const handleFetchListVideoStreamOriginal = async () => {\n        try {\n            const responseVideoStream = await listStreamingApi();\n            if (responseVideoStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                setTableVideosStream(responseVideoStream.data.data);\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n\n    const fetchAllUserStream = async () => {\n        try {\n            const responseVideoStream = await fetchListUserStreamApi({\n                limit: 500\n            });\n            if (responseVideoStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                setAllUserStream(responseVideoStream.data.data.items.map((item) => {\n                    return {\n                        label: item.name,\n                        value: item.id\n                    }\n                }));\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n\n    const handleFetchVideoStreamingByStreamID = async (stream_id) => {\n        try {\n            const responseVideoStream = await listStreamingApi({\n                stream_id: stream_id\n            });\n            if (responseVideoStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                let resArr = [];\n                let groupThumbnail = [];\n                responseVideoStream.data.data.items.map(async (item) => {\n                    if (item.stream_id == stream_id) {\n                        resArr.push(item);\n                        groupThumbnail.push(item.video_info.thumbnail);\n                    }    \n                });\n                return { groupVideo: resArr, groupThumbnail, metaVideo: responseVideoStream.data.data.meta };\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n    \n    const handleFetchUserStream = async (params) => {\n        try {\n            const responseUserStream = await fetchListUserStreamApi(params || {});\n            if (responseUserStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                const dataResponse = responseUserStream.data.data\n\n                let data = [];\n                let listItems = [];\n                dataResponse.items.map(item => data.push({\n                    'label': item.name,\n                    'value': item.id\n                }));\n                await Promise.all(\n                    dataResponse.items.map(async (docs, index) => {\n                        let { groupVideo, groupThumbnail, metaVideo } = await handleFetchVideoStreamingByStreamID(docs.id);\n                        return listItems.push({ \n                            ...docs,\n                            groupThumbnail: groupThumbnail,\n                            groupVideo: groupVideo,\n                            metaVideo: metaVideo\n                        });\n                    }),\n                );\n\n                setListUserStream(data);\n                setTableThreadStream({\n                    items: listItems,\n                    meta: dataResponse.meta\n                });\n            }\n            return responseUserStream;\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            console.log(err);\n        }\n    }\n\n    const handleFetchListAgentServerOfUser = async (params) => {\n        try {\n            const responseServerLivestream = await fetchListAgentServerOfUser(params || {});\n            if (responseServerLivestream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                setListServerAgent(responseServerLivestream.data.data.items.map(agent => {\n                    return {\n                        label: agent.name,\n                        value: agent.id\n                    }\n                }));\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    useInterval(() => {\n        if (\n            // activeFilter === false &&\n            isOpenDelConfirm === false &&\n            isOpenCreateVideoStreamModal === false &&\n            isOpenDetailVideoStreamModal === false &&\n            isOpenEditVideoStreamModal === false &&\n            isOpenFilterModal === false &&\n            isOpenPlayRightAway === false\n        ) {\n            handleFetchListVideoStream({ page: tableVideosStream?.meta?.current_page });\n        }\n    }, 7000);\n\n    useEffect(() => {\n        handleFetchListVideoStream();\n\n        handleFetchListAgentServerOfUser();\n        fetchAllUserStream();\n        handleFetchVideoResolution();\n\n        if (initFilterLocalStorage) {\n            const { limit, ...rest } = initFilterLocalStorage;\n            setActiveFilter(Object.entries(rest).length > 0);\n        }\n        setInputValue(\"started_at\", defaultISODateString());\n        return () => clearInterval(interval);\n    }, []);\n\n    const handleOpenModal = () => () => {\n        onOpen();\n    }\n\n    const handleAddURLVideo = (url) => async () => {\n        setLoadingAddVideo(true);\n        try {\n            if (validateYouTubeUrl(url)) {\n                let responseVideoMETA = await fetchVideoMETAInfoData({ 'url': url });\n                if (responseVideoMETA.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                    await Promise.all(\n                        setInputValue(\"name\", responseVideoMETA.data.data.title),\n                        setTableVideoPlaylist([...tableVideoPlaylist, {\n                            \"order\": tableVideoPlaylist.length + 1,\n                            \"video\": responseVideoMETA.data.data,\n                            \"action\": \"remove\"\n                        }]),\n                        onClose()\n                    )\n                }\n                \n                if (formik.values.name === \"\") {\n                    setInputValue(\"url\", url);\n                }\n            } else {\n                let responseVideoMETA = await fetchVideoMETAInfoData({ 'url': url });\n                setInputValue(\"resolution\", \"1080p\");\n                if (responseVideoMETA.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                    await Promise.all(\n                        setTableVideoPlaylist([...tableVideoPlaylist, {\n                            \"order\": tableVideoPlaylist.length + 1,\n                            \"video\": responseVideoMETA.data.data,\n                            \"action\": \"remove\"\n                        }]),\n                        onClose()\n                    )\n                }\n            }\n            setLoadingAddVideo(false);\n        } catch (err) {\n            setLoadingAddVideo(false);\n            console.log(err)\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    const handleRemoveURLVideo = (cell) => () => {\n        let temp = tableVideoPlaylist.filter(obj => obj != tableVideoPlaylist[cell.row.index]);\n        setTableVideoPlaylist(temp);\n        setInputValue(\"name\", \"\");\n        setInputValue(\"url\", \"\");\n    }\n\n    const handleOnSubmitFormCreateStream = async (values) => {\n        try {\n            if (isLastStep) {\n                let { started_time, ended_time, ...rest } = values\n                rest.started_at = rest.started_at + \" \" + started_time + \":00\"; \n                rest.ended_at = rest.ended_at + \" \" + ended_time + \":00\";\n                \n                const response = await createStreamingApi(rest);\n                if (response.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                    toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`))\n                    \n                    _sleep(1000);\n                    await handleFetchUserStream();\n                    window.location.reload();\n\n                    setActiveStep(activeStep + 1);\n                    actions.resetForm();\n                    actions.setSubmitting(false); \n\n                    onCloseCreateVideoStreamModal();\n                }\n            } else {\n                setActiveStep(activeStep + 1);\n                actions.setTouched({});\n                actions.setSubmitting(false);\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: currentValidationSchema,\n        onSubmit: handleOnSubmitFormCreateStream,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    const detailCurrVideoStream = (item) => {\n        onOpenDetailVideoStreamModal();\n        setDataEditVideoLivestream(item);\n    }\n\n    const handleOpenModalCreateStream = (idUserStream) => () => {\n        if (idUserStream) {\n            setInputValue(\"stream_id\", idUserStream);\n        }\n        onOpenCreateVideoStreamModal();\n    }\n\n    const delCurrVideoStream = () => {\n        onOpenDelconfirm();\n    }\n\n    const killCurrVideoStream = () => {\n        onOpenKillConfirm();\n    }\n\n    const handleOpenFilterModal = () => {\n        onOpenFilterModal();\n    }\n\n    const playRightAwayVideo = () => {\n        onOpenPlayRightAway();\n    }\n\n    const editCurrVideoStream = (item) => {\n        onOpenEditVideoStreamModal();\n        setDataEditVideoLivestream(item);\n    }\n\n    const handleConfirmKill = async () => {\n        try {\n            const responseConfirmKill = await cancelStreamingApi({ id: menuSelected.id });\n            if (responseConfirmKill.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                onCloseKillConfirm();\n\n                await handleFetchListVideoStreamOriginal();\n                await handleFetchUserStream();\n\n                // window.location.reload();\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            onCloseKillConfirm();\n        }\n    }\n\n    const handleConfirmDelete = async () => {\n        try {\n            console.log(' id nè ---', menuSelected)\n            const responseConfirmDel = await deleteStreamingApi(menuSelected.id);\n            if (responseConfirmDel.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                onCloseDeleleConfirm();\n                await handleFetchListVideoStreamOriginal();\n                await handleFetchUserStream();\n                // window.location.reload();\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            onCloseDeleleConfirm();\n        }\n    }\n\n    const handleConfirmPlayRightAway = async () => {\n        try {\n            const responseConfirmDel = await playStreamingApi(menuSelected.id);\n            if (responseConfirmDel.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                onClosePlayRightAway();\n                _sleep(2000);\n                // window.location.reload();\n                await handleFetchListVideoStreamOriginal();\n                await handleFetchUserStream();\n\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            onClosePlayRightAway();\n        }\n    }\n\n    const handleConfirmFilter = async () => {\n        try {\n            await handleFetchListVideoStream();\n            setActiveFilter(true);\n            clearInterval(interval);\n            onCloseFilterModal();\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            onCloseFilterModal();\n        }\n    }\n\n    const handleResetFilter = async () => {\n        try {\n            setFilter(prevState => ({ ...prevState, 'keyword': '' }));\n            setFilter(prevState => ({ ...prevState, 'order_by': null }));\n            setFilter(prevState => ({ ...prevState, 'status': null }));\n            setFilter(prevState => ({ ...prevState, 'stream_id': null }));\n            setFilter(prevState => ({ ...prevState, 'agent_id': null }));\n            setFilter(prevState => ({ ...prevState, 'limit': 15 }));\n            setActiveFilter(false);\n            sessionStorage.removeItem('filter_stream');\n\n            await handleFetchListVideoStreamOriginal();\n            onCloseFilterModal();\n\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            onCloseFilterModal();\n        }\n    }\n\n    const handleGoBackStep = () => {\n        setActiveStep(activeStep - 1);\n    }\n\n    const renderStepContent = (step) => {\n        switch (step) {\n          case 0:\n            return (\n                <InputVideoStep\n                    columnsData={columnsInsertVideoStream}\n                    tableData={tableVideoPlaylist}\n                    handleRemoveURLVideo={handleRemoveURLVideo}\n                    handleOpenModal={handleOpenModal}\n                    setInputValue={setInputValue}\n                    formik={formik}\n                />\n            );\n          case 1:\n            return (\n                <ConfigureStreamStep \n                    allUserStream={allUserStream}\n                    listServerAgent={listServerAgent}\n                    listVideoResolution={listVideoResolution}\n                    setInputValue={setInputValue}\n                    formik={formik}\n                    displaySubRowState={displaySubRowState}\n                />\n            );\n          case 2:\n            return (\n                <FinalStep \n                    setInputValue={setInputValue}\n                    formik={formik}\n                />\n            );\n          default:\n            return (\n                <Center h=\"120px\">\n                    <Text fontSize=\"lg\" gutterBottom>\n                        Tạo mới thành công\n                    </Text>\n                </Center>\n            );\n        }\n    }\n\n\n    const formCreateStream = (\n        <form onSubmit={formik.handleSubmit}>\n            { renderStepContent(activeStep) }\n            <ButtonGroup mt=\"2%\" w=\"100%\">\n                <Flex w=\"100%\" justifyContent=\"flex-end\" alignItems=\"right\">\n                    {activeStep !== 0  && (\n                        <Button\n                            onClick={handleGoBackStep}\n                            colorScheme=\"blue\"\n                            variant=\"outline\"\n                            w=\"7rem\"\n                            mr=\"1%\">\n                            Quay lại\n                        </Button>\n                    )}\n                    <Button\n                        w=\"7rem\"\n                        isDisabled={formik.isSubmitting}\n                        colorScheme=\"blue\"\n                        type='submit'\n                        variant=\"brand\">\n                        \n                        {isLastStep ? 'Tạo mới' : 'Tiếp theo'}\n                    </Button>\n                </Flex>\n            </ButtonGroup>\n        </form>\n    );\n\n    const modalContent = (\n        <React.Fragment>\n            <Stepper index={activeStep} mt=\"10px\">\n                {MULTI_STEP_FORM_CREATE_STREAM.map((activeStep, index) => (\n                    <Step key={index}>\n                    <StepIndicator>\n                        <StepStatus\n                        complete={<StepIcon />}\n                        incomplete={<StepNumber />}\n                        active={<StepNumber />}\n                        />\n                    </StepIndicator>\n\n                    <Box flexShrink='0'>\n                        <StepTitle>{activeStep.title}</StepTitle>\n                        <StepDescription>{activeStep.description}</StepDescription>\n                    </Box>\n\n                    <StepSeparator />\n                    </Step>\n                ))}\n            </Stepper>\n            {formCreateStream}\n        </React.Fragment>\n    );\n\n    const filterGroup = () => {\n        return (\n            <FilterHeader\n                title=\"Danh sách luồng Video Stream\"\n                handleOpenFilterModal={handleOpenFilterModal}\n                activeFilter={activeFilter}\n                handleOpenModalCreateStream={handleOpenModalCreateStream}\n                listUserStream={listUserStream}\n                setDisplaySubRowState={setDisplaySubRowState}\n                displaySubRowState={displaySubRowState}\n            />\n        )\n    }\n\n    const renderSwitchDisplay = (param) => {\n        // TODO: xử lý lại, tách từng view ra từng Component, tránh gọi cùng 1 lúc\n        switch(param) {\n          case 'table-video':\n            return (\n                <VideoStreamTable\n                    filterGroup={filterGroup()}\n                    tableData={tableVideosStream && tableVideosStream?.items}\n                    paginationData={tableVideosStream && tableVideosStream?.meta}\n                    setMenuSelected={setMenuSelected}\n                    playRightAwayVideo={playRightAwayVideo}\n                    editCurrVideoStream={editCurrVideoStream}\n                    detailCurrVideoStream={detailCurrVideoStream}\n                    killCurrVideoStream={killCurrVideoStream}\n                    delCurrVideoStream={delCurrVideoStream}\n                    handleFetchResource={handleFetchListVideoStream}\n                />\n            );\n          default:\n            return 'table-video';\n        }\n    }\n\n    const handleChangeStateFilter = (e) => {\n        const { name, value } = e.target;\n        setFilter(prevState => ({ ...prevState, [name]: value }));\n    };\n\n    const onSearchVideoStream = (value) => {\n        setFilter(prevState => ({ ...prevState, keyword: value }));\n    }\n\n    return (\n        <>\n            <ModalAddUrl\n                isOpen={isOpen}\n                onClose={onClose}\n                handleAddURLVideo={handleAddURLVideo}\n                loadingAddVideo={loadingAddVideo}\n                setInputValue={setInputValue}\n                formik={formik}\n            />\n\n            <ModalStreamVideo\n                size=\"xl\"\n                isOpen={isOpenKillConfirm}\n                onClose={onCloseKillConfirm}\n                title=\"Hủy livestream\"\n                content=\"Bạn chắc muốn hủy livestream này ?\"\n                footer={true}\n                handleConfirm={handleConfirmKill}\n            />\n            <ModalStreamVideo\n                size=\"xl\"\n                isOpen={isOpenDelConfirm}\n                onClose={onCloseDeleleConfirm}\n                title=\"Xóa livestream\"\n                content=\"Luồng livestream sẽ bị xóa vĩnh viễn. Bạn vẫn muốn tiếp tục ?\"\n                footer={true}\n                handleConfirm={handleConfirmDelete}\n            />\n            <ModalStreamVideo\n                size=\"xl\"\n                isOpen={isOpenPlayRightAway}\n                onClose={onClosePlayRightAway}\n                title=\"Phát ngay\"\n                content=\"Video sẽ được phát ngay bây giờ. Bạn vẫn muốn tiếp tục ?\"\n                footer={true}\n                handleConfirm={handleConfirmPlayRightAway}\n            />\n            <ModalStreamVideo\n                ref={ref}\n                isOpen={isOpenCreateVideoStreamModal}\n                onClose={onCloseCreateVideoStreamModal}\n                title=\"Thêm video livestream\"\n                content={modalContent}\n            />\n            <ModalStreamVideo\n                isOpen={isOpenDetailVideoStreamModal}\n                onClose={onCloseDetailVideoStreamModal}\n                title=\"Chi tiết video livestream\"\n                content={\n                    <>{\n                        dataEditVideoLivestream && (\n                            <DetailVideoLivestream\n                                dataGeneral={dataEditVideoLivestream}\n                                listServerAgent={listServerAgent}\n                            />\n                        )\n                    }</>\n                }\n            />\n            <ModalStreamVideo\n                isOpen={isOpenEditVideoStreamModal}\n                onClose={onCloseEditVideoStreamModal}\n                title=\"Chỉnh sửa video livestream\"\n                content={\n                    <>{\n                        dataEditVideoLivestream && (\n                            <EditVideoLivestream\n                                dataGeneral={dataEditVideoLivestream}\n                                handleRefresh={handleFetchListVideoStreamOriginal}\n                                listServerAgent={listServerAgent}\n                            />\n                        )\n                    }</>\n                }\n            />\n            <ModalStreamVideo\n                size=\"2xl\"\n                isOpen={isOpenFilterModal}\n                onClose={onCloseFilterModal}\n                title=\"Bộ lọc tìm kiếm\"\n                content={\n                    <FormFilterCustom\n                        filter={filter}\n                        onSearch={onSearchVideoStream}\n                        handleChangeStateFilter={handleChangeStateFilter}\n                        listFieldVideo={listOptionFieldVideo}\n                        statusFieldVideo={statusFieldVideo}\n                        allUserStream={allUserStream}\n                        setFilter={setFilter}\n                        listServerAgent={listServerAgent}\n                    />\n                }\n                handleConfirm={handleConfirmFilter}\n                footer={true}\n                addButton={\n                    <Button rightIcon={<RxReset />} \n                        colorScheme='blue' variant='ghost' \n                        size=\"sm\" borderRadius=\"5px\" mr=\"5px\"\n                        fontWeight=\"500\"\n                        onClick={handleResetFilter}\n                        _hover={{\n                            bg: \"#e2e8f0\"\n                        }}>\n                        Reset bộ lọc\n                    </Button>\n                }\n            />\n            <Box pt={{ base: \"130px\", md: \"80px\", xl: \"80px\" }}>\n                <Flex\n                    flexDirection='column'\n                    gridArea={{ xl: \"1 / 1 / 2 / 3\", \"2xl\": \"1 / 1 / 2 / 2\" }}>\n                    <Card p=\"0px\">\n                    {\n                        Object.keys(tableVideosStream).length == 0 ? (\n                            <React.Fragment>\n                                <Box padding='6' boxShadow='lg' bg='white'>\n                                    <SkeletonCircle startColor='gray.200' endColor='gray.200' size='14' borderRadius=\"5px\" />\n                                    <SkeletonText startColor='gray.200' endColor='gray.200' \n                                        mt='4' noOfLines={4} spacing='4' skeletonHeight='4' />\n                                </Box>\n                                <Box padding='6' boxShadow='lg' bg='white'>\n                                    <SkeletonCircle startColor='gray.200' endColor='gray.200' size='14' borderRadius=\"5px\" />\n                                    <SkeletonText startColor='gray.200' endColor='gray.200'\n                                        mt='4' noOfLines={4} spacing='4' skeletonHeight='4' />\n                                </Box>\n                                <Box padding='6' boxShadow='lg' bg='white'>\n                                    <SkeletonCircle startColor='gray.200' endColor='gray.200' size='14' borderRadius=\"5px\" />\n                                    <SkeletonText startColor='gray.200' endColor='gray.200' \n                                        mt='4' noOfLines={4} spacing='4' skeletonHeight='4' />\n                                </Box>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                {renderSwitchDisplay(displaySubRowState)}\n                            </React.Fragment>\n                        )\n                    }\n                    </Card>\n                </Flex>\n            </Box>\n        </>\n    )\n}\n","/* eslint-disable */\nimport {\n  Flex,\n  Table,\n  Checkbox,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  Badge,\n  SimpleGrid,\n  Button,\n  Icon,\n  FormControl,\n  Image\n} from \"@chakra-ui/react\";\n\nimport React, { useEffect, useMemo, useState } from \"react\";\n\nimport {\n  useGlobalFilter,\n  usePagination,\n  useSortBy,\n  useTable,\n} from \"react-table\";\n\n// Custom components\nimport Card from \"../../../../components/card/Card\";\nimport Pagination from '../../../../components/paginationCustom/Pagination';\n\nimport emptyBackgroundImage from '../../../../assets/img/empty_bg_2.png';\n\nexport default function TableListLiveStream(props) {\n\n  const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\n\n  const { \n    columnsData,\n    tableData,\n    paginationData,\n    filterGroup,\n    handleFetchResource } = props;\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const columns = useMemo(() => columnsData, [columnsData]);\n  const data = useMemo(() => tableData, [tableData]);\n\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    initialState,\n    setPageSize\n  } = tableInstance;\n\n  useEffect(() => {\n    setPageSize(paginationData.per_page)\n  }, []);\n\n  const handleChangePage = () => async (page, limit) => {\n    setCurrentPage(page);\n    await handleFetchResource({ page, limit });\n  }\n\n  const bodyWithoutData = () => {\n    return (\n      <Tr>\n        <Td colSpan={columns.length} textAlign=\"center\" py={8}>\n          <Flex flexDirection=\"column\" alignItems=\"center\">\n            <Image src={emptyBackgroundImage} alt=\"No Video Stream\" width=\"20%\" mb={4} />\n            <Text fontSize=\"lg\" fontWeight=\"bold\" style={{ marginBottom: '5px' }}>Không có dữ liệu</Text>\n            <Text fontSize=\"md\" color=\"gray.500\">Hãy thêm một video stream để bắt đầu.</Text>\n          </Flex>\n        </Td>\n      </Tr>\n    )\n  };\n\n  const bodyWithData = () => {\n    return (\n      page.map((row, index) => {\n        prepareRow(row);\n        return (\n          <Tr\n            {...row.getRowProps()}\n          >\n            {row.cells.map((cell, index) => {\n              return (\n                <Td {...cell.getCellProps()}>\n                  {cell.render(\"Cell\")}\n                </Td>\n              );\n            })}\n          </Tr>\n        );\n      })\n    )\n  }\n\n  return (\n    <Card\n      direction='column'\n      w='100%'\n      px='0px'\n      overflowX={{ sm: \"scroll\", lg: \"hidden\" }}>\n      {filterGroup}\n      <Table \n        {...getTableProps()} \n        className=\"-striped -highlight\" \n        variant='simple' color=\"black\" mb='24px'\n      >\n        <Thead bgColor=\"#f5f5f5\">\n          {headerGroups.map((headerGroup, index) => (\n            <Tr \n              {...headerGroup.getHeaderGroupProps()}\n              key={index}\n            >\n              {headerGroup.headers.map((column, index) => (\n                <Th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  pe='10px'\n                  key={index}\n                  borderColor={borderColor}>\n                  <Flex\n                    justify='space-between'\n                    align='center'\n                    fontSize={{ sm: \"10px\", lg: \"12px\" }}\n                    color='black'>\n                    {column.render(\"Header\")}\n                  </Flex>\n                </Th>\n              ))}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody {...getTableBodyProps()}>\n          {data.length == 0 ? bodyWithoutData() : bodyWithData()}\n        </Tbody>\n      </Table>\n      <Pagination\n        color=\"blue\"\n        typeName=\"luồng\"\n        currentPage={currentPage}\n        totalCount={paginationData.total}\n        pageSize={paginationData.per_page}\n        onPageChange={handleChangePage()}\n      />\n    </Card>\n  );\n}\n","/* eslint-disable */\nimport React from \"react\";\n\n// Chakra imports\nimport {\n  Icon,\n  Flex,\n  Text,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Assets\nimport {\n  MdOutlineMoreHoriz,\n  MdCancel,\n  MdDeleteOutline,\n  MdOutlinePerson,\n} from \"react-icons/md\";\n\nexport default function MenuVideo(props) {\n  const { editCurrUserStream, ...rest } = props;\n\n  \nconst groupVideoMenu = [\n  {\n    title: 'Chỉnh sửa',\n    icons: MdOutlinePerson,\n    action: editCurrUserStream\n  },\n  // {\n  //   title: 'Hủy luồng',\n  //   icons: MdCancel,\n  //   action: killCurrVideoStream\n  // },\n  // {\n  //   title: 'Xóa luồng',\n  //   icons: MdDeleteOutline,\n  //   action: delCurrVideoStream\n  // },\n]\n\n  const textColor = useColorModeValue(\"secondaryGray.800\", \"white\");\n  const textHover = useColorModeValue(\n    { color: \"secondaryGray.900\", bg: \"unset\" },\n    { color: \"secondaryGray.500\", bg: \"unset\" }\n  );\n  const iconColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgList = useColorModeValue(\"white\", \"whiteAlpha.100\");\n  const bgShadow = useColorModeValue(\n    \"14px 17px 40px 4px rgba(112, 144, 176, 0.08)\",\n    \"unset\"\n  );\n  const bgButton = useColorModeValue(\"secondaryGray.400\", \"whiteAlpha.100\");\n  const bgHover = useColorModeValue(\n    { bg: \"secondaryGray.400\" },\n    { bg: \"whiteAlpha.50\" }\n  );\n  const bgFocus = useColorModeValue(\n    { bg: \"secondaryGray.300\" },\n    { bg: \"whiteAlpha.100\" }\n  );\n\n  // Ellipsis modals\n  const {\n    isopen: isOpen1,\n    onOpen: onOpen1,\n    onClose: onClose1,\n  } = useDisclosure();\n\n  return (\n    <Menu isopen={isOpen1} onClose={onClose1} placement=\"top\">\n      <MenuButton\n        align='center'\n        justifyContent='center'\n        _hover={bgHover}\n        _focus={bgFocus}\n        _active={bgFocus}\n        w='37px'\n        h='37px'\n        lineHeight='100%'\n        onClick={onOpen1}\n        borderRadius='10px'\n        {...rest}>\n        <Icon as={MdOutlineMoreHoriz} color={iconColor} w='24px' h='24px' />\n      </MenuButton>\n      <MenuList\n        w='fit-content'\n        minW='unset'\n        maxW='150px !important'\n        backdropFilter='blur(63px)'\n        bg={bgList}\n        boxShadow={bgShadow}\n        borderRadius='20px'\n        p='15px'>\n        {\n          groupVideoMenu.map(item => {\n            return (\n              <MenuItem\n                transition='0.2s linear'\n                color={textColor}\n                _hover={textHover}\n                p='0px'\n                borderRadius='8px'\n                _active={{\n                  bg: \"transparent\",\n                }}\n                _focus={{\n                  bg: \"transparent\",\n                }}\n                onClick={item.action}\n                mb='10px'>\n                <Flex align='center'>\n                  <Icon as={item.icons} h='16px' w='16px' me='8px' />\n                  <Text fontSize='md' color=\"black\" fontWeight='400'>\n                    {item.title}\n                  </Text>\n                </Flex>\n              </MenuItem>\n            )\n          })\n        }\n      </MenuList>\n    </Menu>\n  );\n}\n","/* eslint-disable */\nimport React, { useState } from 'react'\nimport {\n    Button,\n    FormLabel,\n    Input,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Spinner\n} from '@chakra-ui/react';\n\nimport { useTranslation } from 'react-i18next';\n\nconst ModalStreamVideo = ({ \n    size,\n    isOpen,\n    onClose,\n    title,\n    content,\n    footer,\n    handleConfirm\n}) => {\n    const { t } = useTranslation();\n    \n    return (    \n        <Modal isCentered size={size ? size : \"4xl\"} isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{title}</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <p>{content}</p>\n                </ModalBody>\n                {\n                    footer ? (\n                        <ModalFooter>\n                            <Button colorScheme=\"blue\" size=\"sm\" variant=\"outline\" mr={3} onClick={onClose}>Hủy bỏ</Button>\n                            <Button \n                                colorScheme='blue' size=\"sm\"\n                                onClick={() => handleConfirm()}\n                            >Đồng ý</Button>\n                        </ModalFooter>\n                    ) : null\n                }\n            </ModalContent>\n        </Modal>\n    )\n};\n\nexport default ModalStreamVideo;","/* eslint-disable */\nimport React, { useState, useCallback } from 'react'\nimport {\n    Button,\n    Text,\n    Icon,\n    useColorModeValue,\n    FormLabel,\n    Input,\n    FormControl,\n    InputGroup,\n    InputRightElement,\n    FormHelperText\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\n\nimport {\n    converter_ISO8601_To_YYYYMMDDHHMMSS,\n} from '../../../../utils/handleValidate';\n\nimport { updateUserStream } from '../../../../api/Stream';\nimport { MESSSAGE_STATUS_CODE } from '../../../../variables';\nimport { RiEyeCloseLine } from 'react-icons/ri';\nimport { MdOutlineRemoveRedEye } from 'react-icons/md';\n\nexport default function EditUserStream(props) {\n    const { dataGeneral, handleFetchResource, onCloseUserStream } = props;\n\n    const [show, setShow] = useState(false);\n    const handleClick = () => setShow(!show);\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n    const brandStars = useColorModeValue(\"brand.500\", \"brand.400\");\n    const textColorSecondary = \"gray.400\";\n\n    const initialValues = {\n        name: dataGeneral?.name,\n        description: dataGeneral?.description,\n        key: dataGeneral?.key,\n        channel_id: dataGeneral?.channel_id,\n    }\n\n    const { t } = useTranslation();\n\n    const validateSchema = Yup.object().shape({\n        name: Yup.string().required(t('content.required_field')),\n        description: Yup.string().required(t('content.required_field')),\n        key: Yup.string().required(t('content.required_field')),\n        channel_id: Yup.string().required(t('content.required_field'))\n    });\n\n    const handleOnSubmitFormEdit = async (values, { resetForm }) => {\n        try {\n\n            const responseEdit = await updateUserStream({ ...values, id: dataGeneral.id });\n            if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                await handleFetchResource({});\n                resetForm();\n                onCloseUserStream();\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmitFormEdit,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            if ((key == 'started_at' || key == 'ended_at')) {\n                formik.setValues({ ...formik.values, [key]: converter_ISO8601_To_YYYYMMDDHHMMSS(value) });\n            } else { formik.setValues({ ...formik.values, [key]: value }); }\n        }, [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card p={0} align='center'>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Tên luồng<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <Input\n                        name=\"name\"\n                        value={formik.values.name}\n                        onChange={(e) => setInputValue(\"name\", e.target.value)}\n                        isRequired={true}\n                        fontSize='sm'\n                        size='lg'\n                    />\n                    {formik.errors.name && formik.touched.name && (\n                        <p className=\"text-error\">{formik.errors.name}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Mô tả luồng<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <Input\n                        name=\"description\"\n                        value={formik.values.description}\n                        onChange={(e) => setInputValue(\"description\", e.target.value)}\n                        isRequired={true}\n                        placeholder='Nhập mô tả luồng'\n                        fontSize='sm'\n                        size='lg'\n                    />\n                    {formik.errors.description && formik.touched.description && (\n                        <p className=\"text-error\">{formik.errors.description}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'\n                    >\n                        Channel ID<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <Input\n                        name=\"channel_id\"\n                        value={formik.values.channel_id}\n                        onChange={(e) => setInputValue(\"channel_id\", e.target.value)}\n                        isRequired={true}\n                        placeholder='ID của channel youtube'\n                        fontSize='sm'\n                        size='lg'\n                    />\n                    {formik.errors.channel_id && formik.touched.channel_id && (\n                        <p className=\"text-error\">{formik.errors.channel_id}</p>\n                    )}\n                    <FormHelperText fontSize='sm' color='gray.500' textAlign={'left'}>\n                        Sử dụng để kiểm tra trạng thái livestream của video youtube\n                    </FormHelperText>\n                </FormControl>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Mã livestream<Text color={brandStars}>*</Text>\n                    </FormLabel>\n                    <InputGroup size='md'>\n                        <Input\n                            name=\"key\"\n                            value={formik.values.key}\n                            onChange={(e) => setInputValue(\"key\", e.target.value)}\n                            isRequired={true}\n                            fontSize='sm'\n                            placeholder='Min. 8 characters'\n                            size='lg'\n                            type={show ? \"text\" : \"password\"}\n                            variant='auth'\n                        />\n                        <InputRightElement display='flex' alignItems='center' mt='4px'>\n                            <Icon\n                                color={textColorSecondary}\n                                _hover={{ cursor: \"pointer\" }}\n                                as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\n                                onClick={handleClick}\n                            />\n                        </InputRightElement>\n                    </InputGroup>\n                    {formik.errors.key && formik.touched.key && (\n                        <p className=\"text-error\">{formik.errors.key}</p>\n                    )}\n                </FormControl>\n                <Button\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    type=\"submit\"\n                    fontWeight='500'>\n                    Cập nhật\n                </Button>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\nimport {\n  Flex,\n  Image,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue\n} from \"@chakra-ui/react\";\nimport React, { useMemo } from \"react\";\nimport { useGlobalFilter, usePagination, useSortBy, useTable } from \"react-table\";\nimport Card from \"../../../../components/card/Card\";\n\nimport emptyBackgroundImage from '../../../../assets/img/empty_bg_2.png';\n\nexport default function TableListLiveStream({ columnsData, tableData, filterHeader }) {\n  const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\n\n  const columns = useMemo(() => columnsData, [columnsData]);\n  const data = useMemo(() => tableData, [tableData]);\n\n  const tableInstance = useTable(\n    { columns, data },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows } = tableInstance;\n\n  const renderNoData = () => (\n    <Tr>\n      <Td colSpan={columns.length} textAlign=\"center\" py={8}>\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n          <Image src={emptyBackgroundImage} alt=\"No Video Stream\" width=\"20%\" mb={4} />\n          <Text fontSize=\"lg\" fontWeight=\"bold\" style={{ marginBottom: '5px' }}>Không có dữ liệu</Text>\n          <Text fontSize=\"md\" color=\"gray.500\">Hãy thêm một video / luồng để bắt đầu.</Text>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n\n  return (\n    <Card direction=\"column\" w=\"100%\" px=\"0px\" overflowX={{ sm: \"scroll\", lg: \"hidden\" }}>\n      {filterHeader}\n      <Table {...getTableProps()} variant=\"simple\" color=\"gray.500\" mb=\"24px\">\n        <Thead bgColor=\"#f5f5f5\">\n          {headerGroups.map((headerGroup, index) => (\n            <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\n              {headerGroup.headers.map((column, idx) => (\n                <Th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  pe=\"10px\"\n                  key={idx}\n                  borderColor={borderColor}\n                >\n                  <Flex justify=\"space-between\" align=\"center\" fontSize={{ sm: \"10px\", lg: \"12px\" }} color=\"black\">\n                    {column.render(\"Header\")}\n                  </Flex>\n                </Th>\n              ))}\n            </Tr>\n          ))}\n        </Thead>\n        <Tbody {...getTableBodyProps()}>\n          {rows?.length === 0 ? renderNoData() : rows?.map((row, rowIndex) => {\n            tableInstance.prepareRow(row);\n            return (\n              <Tr {...row.getRowProps()} key={rowIndex}>\n                {row.cells.map((cell, cellIndex) => (\n                  <Td {...cell.getCellProps()} key={cellIndex}>\n                    {cell.render(\"Cell\")}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    </Card>\n  );\n}\n","/* eslint-disable */\nimport {\n    Flex,\n    Table,\n    Checkbox,\n    Tbody,\n    Td,\n    Text,\n    Th,\n    Thead,\n    Tr,\n    useColorModeValue,\n    Badge,\n    SimpleGrid,\n    Button,\n    Icon,\n    FormControl,\n    Spinner,\n    Grid,\n    GridItem,\n    Avatar,\n    AvatarGroup,\n    FormLabel,\n    Select\n} from \"@chakra-ui/react\";\n\nimport React, { useEffect, useState } from \"react\"\nimport { IoAddCircleOutline } from \"react-icons/io5\";\nimport { MdFilterList } from \"react-icons/md\";\n\nconst displayTypeChildTable = [\n    {\n        label: 'Video Stream - Dạng bảng',\n        value: 'table-video'\n    },\n    {\n        label: 'Luồng phát - Dạng bảng',\n        value: 'table-thread'\n    },\n    {\n        label: 'Luồng phát - Dạng thẻ',\n        value: 'card-thread'\n    },\n]\n\nexport default function FilterHeader(props) {\n    const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\n\n    const {\n        title,\n        handleOpenFilterModal,\n        activeFilter\n    } = props;\n\n    return (\n        <Grid\n            templateRows='repeat(1, 1fr)'\n            templateColumns='repeat(10, 1fr)'\n            gap={4}\n            mb={4}\n        >\n            <GridItem colSpan={9} margin=\"auto 0\">\n                <FormControl>\n                    <Text\n                        color={textColor}\n                        fontSize='lg'\n                        fontWeight='700'\n                        mb=\"5px\"\n                        ml=\"20px\"\n                        lineHeight='100%'>\n                        {title}\n                    </Text>\n                </FormControl>\n            </GridItem>\n            \n            <GridItem colSpan={1} margin=\"auto 0\" align=\"center\">\n                <Button \n                    _hover={{ bg: \"gray.100\" }}\n                    size=\"md\"\n                    color={activeFilter === true ? \"white\" : \"black\"}\n                    colorScheme={activeFilter === true ? \"green\" : \"black\"}\n                    variant=\"solid\"\n                    borderRadius='5px'\n                    px='10px'\n                    w=\"fit-content\"\n                    py='20px'\n                    onClick={() => {\n                        handleOpenFilterModal();\n                    }}>\n                    <Icon\n                        transition='0.2s linear'\n                        w='32px'\n                        h='32px'\n                        pr='10px'\n                        as={MdFilterList}\n                        color={activeFilter === true ? \"white\" : \"black\"}\n                    />\n                    Bộ lọc\n                </Button>\n            </GridItem>\n        </Grid>\n    );\n}\n","/* eslint-disable */\nimport {\n    useColorModeValue,\n    FormLabel,\n    FormControl\n} from '@chakra-ui/react';\n\nimport React from \"react\"\nimport { SearchBar } from '../../../../components/searchBar/SearchBar';\n\nexport default function FormFilterCustom(props) {\n    const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\n    const { onSearch, filter } = props;\n\n    return (\n        <FormControl align=\"right\" mb=\"20px\">\n            <FormLabel\n                htmlFor=\"stream_id\"\n                fontSize=\"xs\"\n                fontWeight=\"md\"\n                color=\"gray.700\"\n                _dark={{\n                    color: 'gray.50',\n                }}>\n                Tìm kiếm key:\n            </FormLabel>\n            <SearchBar\n                name=\"keyword\"\n                mb={{ base: '10px', md: 'unset' }}\n                me=\"10px\" \n                data={filter.keyword}\n                onSearch={(value) => onSearch(value)}\n            />\n        </FormControl>\n    );\n}\n","/* eslint-disable */\nimport React from 'react'\nimport {\n    Button,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton\n} from '@chakra-ui/react';\n\nimport { useTranslation } from 'react-i18next';\n\nconst ModalCustomGeneral = ({ \n    size,\n    isOpen,\n    onClose,\n    title,\n    content,\n    footer,\n    handleConfirm,\n    addButton\n}) => {\n    const { t } = useTranslation();\n    \n    return (    \n        <Modal isCentered size={size ? size : \"3xl\"} isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{title}</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody style={{ paddingTop: 0 }}>\n                    <p>{content}</p>\n                </ModalBody>\n                {\n                    footer ? (\n                        <ModalFooter>\n                            {\n                                addButton ? addButton : null\n                            }\n                            <Button colorScheme=\"blue\" size=\"sm\" variant=\"outline\" mr={3} onClick={onClose}>Hủy bỏ</Button>\n                            <Button \n                                colorScheme='blue'\n                                size=\"sm\"\n                                onClick={() => handleConfirm()}\n                            >Đồng ý</Button>\n                        </ModalFooter>\n                    ) : null\n                }\n            </ModalContent>\n        </Modal>\n    )\n};\n\nexport default ModalCustomGeneral;","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Button,\n  Icon,\n  Text,\n  Badge,\n  useDisclosure,\n  InputGroup,\n  Input,\n  InputRightElement,\n} from \"@chakra-ui/react\";\nimport TableListLiveStream from \"./components/TableListLiveStream\";\nimport { MdOutlineHub } from \"react-icons/md\";\nimport { RxReset } from \"react-icons/rx\";\n\n// Assets\nimport { MESSSAGE_STATUS_CODE, USER_PACKAGE_STATUS, USER_PACKAGE_USED} from \"../../../variables/index\";\nimport { fetchListUserStreamApi } from \"../../../api/Stream/index\";\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { removeEmpty, reverseTimeDate, truncate } from \"../../../utils/handleValidate\";\nimport MenuUserStream from \"./components/MenuUserStream\";\nimport ModalCustom from \"./components/ModalCustom\";\nimport activity from 'react-useanimations/lib/activity';\nimport UseAnimations from \"react-useanimations\";\nimport { MdAccessTime, MdLockReset, MdOutlineRemoveRedEye } from \"react-icons/md\";\nimport { RiEyeCloseLine } from \"react-icons/ri\";\nimport EditUserStream from \"./components/EditUserStream\";\nimport TableEmpty from \"./components/TableEmpty\";\nimport FilterHeader from \"./components/FilterHeader\";\nimport FormFilterCustom from \"./components/FilterForm\";\nimport ModalCustomGeneral from \"../../../components/modal/ModalCustomGeneral\";\n\nconst initFormFilter = {\n  keyword: ''\n}\n\nexport default function ListUserLivestream() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [tableUserStream, setTableUserStream] = useState({});\n  const [paginationData, setPaginationData] = useState({});\n  const [selectedUserStream, setSelectedUserStream] = useState({});\n  const [showArr, setShowArr] = useState([]);\n  const [filter, setFilter] = useState(initFormFilter);\n\n  const [activeFilter, setActiveFilter] = useState(false);\n\n  const handleClickArr = (id, value) => {\n    let myArray = [...showArr],\n    objIndex = showArr.findIndex((obj => obj.id == id));\n    myArray[objIndex].value = !value;\n    setShowArr(myArray);\n  };\n\n  const {\n    isOpen: isOpenUserStream,\n    onOpen: onOpenUserStream,\n    onClose: onCloseUserStream\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenFilterModal,\n    onOpen: onOpenFilterModal,\n    onClose: onCloseFilterModal\n} = useDisclosure();\n\n  const [search, setSearch] = useState('');\n  const { t } = useTranslation();\n\n  const onSearchVideoStream = (value) => {\n    setFilter(prevState => ({ ...prevState, keyword: value }));\n  }\n\n  const handleSearchTable = async (string) => {\n    setSearch(string);\n    try {\n      setTimeout(async () => {\n        await handleFetchResource({\n          search: string\n        });\n      }, 1000);\n    } catch (err) {\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n      console.log(err);\n    }\n  }\n\n  const handleConfirmFilter = async () => {\n    try {\n        await handleFetchResource({});\n        // setActiveFilter(true);\n        onCloseFilterModal();\n    } catch (err) {\n        if (err.response) {\n            toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n        onCloseFilterModal();\n    }\n  }\n\n  const handleFetchResource = async (params) => {\n    setIsLoading(true);\n    try {\n      let filterParams = removeEmpty(filter);\n      const responseUserStream = await fetchListUserStreamApi({...params, ...filterParams} || {});\n      let dataUserStream = [];\n      if (responseUserStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n          dataUserStream = responseUserStream.data.data.items;\n          let stateTemp = dataUserStream.map((item, index) => {\n            return {\n              id: index,\n              value: false\n            }\n          });\n          setShowArr(stateTemp);\n          setPaginationData(responseUserStream.data.data.meta);\n          setIsLoading(false);\n      }\n      setTableUserStream(dataUserStream);\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      console.log(err);\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  }\n\n  const handleFetchResourceOriginal = async (params) => {\n    setIsLoading(true);\n    try {\n      const responseUserStream = await fetchListUserStreamApi(params || {});\n      let dataUserStream = [];\n      if (responseUserStream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n          dataUserStream = responseUserStream.data.data.items;\n          let stateTemp = dataUserStream.map((item, index) => {\n            return {\n              id: index,\n              value: false\n            }\n          });\n          setShowArr(stateTemp);\n          setPaginationData(responseUserStream.data.data.meta);\n          setIsLoading(false);\n      }\n      setTableUserStream(dataUserStream);\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      console.log(err);\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  }\n\n  useEffect(() => {\n    handleFetchResourceOriginal({});\n  }, []);\n\n  const handleOpenFilterModal = () => {\n    onOpenFilterModal();\n  }\n\n  const handleResetFilter = async () => {\n    try {\n        setFilter(prevState => ({ ...prevState, 'keyword': '' }));\n        await handleFetchResourceOriginal();\n        onCloseFilterModal();\n    } catch (err) {\n        if (err.response) {\n            toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n        onCloseFilterModal();\n    }\n}\n\n  const editCurrUserStream = (item) => () => {\n    setSelectedUserStream(item);\n    onOpenUserStream();\n  }\n\n  const columnsDataComplex = [\n    {\n      Header: \"Tên luồng\",\n      accessor: \"name\",\n      Cell: ({ value, row }) => {\n        return (\n          <span style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n            <MdOutlineHub style={{ color: 'gray', marginRight: '7px', width: '18px', height: '18px' }} />\n            <Text fontWeight={\"600\"} color={\"black\"}>\n              { truncate(value, 25) }\n            </Text>\n          </span>\n        );\n      }\n    },\n    {\n      Header: \"Mô tả\",\n      accessor: \"description\",\n      Cell: ({ value, row }) => {\n        return (\n          <>\n            { value !== \"\" ? (\n              <Text color=\"black\" style={{ fontStyle: 'italic' }}>{ truncate(value, 25) }</Text>\n            ): (<Text>...</Text>)}\n          </>\n        )\n      }\n    },\n    {\n      Header: \"Mã livestream\",\n      accessor: \"key\",\n      Cell: ({ value, row }) => {\n        let objIndex = showArr.findIndex((obj => obj?.id == row?.index));\n        let state = showArr[objIndex]?.value;\n        return (\n          <>\n            {\n              (value && value !== undefined) ? (\n                <InputGroup size='sm'>\n                  <Input\n                    name=\"key\"\n                    value={value}\n                    isRequired={true}\n                    fontSize='sm'\n                    color=\"black\"\n                    isDisabled={true}\n                    placeholder=\"Chưa có key\"\n                    size='md'\n                    type={state ? \"text\" : \"password\"}\n                    variant='auth'\n                    style={{ color: 'black' }}\n                  />\n                  <InputRightElement display='flex' alignItems='center' mt='4px'>\n                    <Icon\n                      color=\"black\"\n                      _hover={{ cursor: \"pointer\" }}\n                      as={state ? RiEyeCloseLine : MdOutlineRemoveRedEye}\n                      onClick={() => handleClickArr(row.index, state)}\n                    />\n                  </InputRightElement>\n                </InputGroup>\n              ) : <span style={{ color: '#80808080', paddingLeft: '10px', fontSize:'14px' }}>Chưa có key</span>\n            }\n          </>\n        )\n      }\n    },\n    {\n      Header: \"Channel ID\",\n      accessor: \"\",\n      Cell: ({ value, row }) =>  {\n        return (\n          <Text fontSize={\"sm\"} fontWeight=\"600\" style={{ display: 'flex', alignContent: 'center', alignItems: 'center', color: 'gray' }}>\n            {row?.original?.channel_id || '...'}\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Từ ngày\",\n      accessor: \"\",\n      Cell: ({ value, row }) =>  {\n        return (\n          <Text fontSize={\"sm\"} fontWeight=\"600\" style={{ display: 'flex', alignContent: 'center', alignItems: 'center', color: 'gray' }}>\n            <MdAccessTime color=\"#80808080\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n            {reverseTimeDate(row?.original?.started_at)}\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Đến ngày\",\n      accessor: \"\",\n      Cell: ({ value, row }) =>  {\n        return (\n          <Text fontSize={\"sm\"} fontWeight=\"600\" style={{ display: 'flex', alignContent: 'center', alignItems: 'center', color: 'gray' }}>\n            <MdAccessTime color=\"#80808080\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n            {reverseTimeDate(row?.original.expired_at)}\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Sử dụng\",\n      accessor: \"\",\n      Cell: ({ value, row }) => {\n        return (\n            <Flex align='center'>\n              {\n                (row?.original?.live_streaming == true) ? (\n                  <Text w=\"fit-content\" style={{ display: \"inline-flex\" }} borderRadius=\"3px\" py=\"3px\" px=\"6px\" fontSize=\"13px\"\n                    bg=\"green\"\n                    color=\"white\">\n                    <UseAnimations \n                      name=\"activity\"\n                      animation={activity} size={22}\n                      className=\"animation-icon\"\n                      fillColor=\"green\"\n                      strokeColor=\"white\"\n                    />\n                    {USER_PACKAGE_USED[Number(row?.original?.live_streaming)]?.message}\n                  </Text>\n                ) :  '...'\n              }\n            </Flex>\n        )\n      }\n    },\n    {\n      Header: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value, row }) => {\n        return (\n            <Flex align='center'>\n                <Badge borderRadius=\"4px\" variant='subtle' colorScheme={USER_PACKAGE_STATUS[value]?.color}>\n                    <Text fontSize='xs' fontWeight='700'> \n                        {USER_PACKAGE_STATUS[value]?.message}\n                    </Text>\n                </Badge>\n            </Flex>\n        )\n      }\n    },\n    {\n      Header: \"Chỉnh sửa\",\n      accessor: \"\",\n      Cell: ({ value, row }) => {\n        return (\n          <MenuUserStream\n            editCurrUserStream={editCurrUserStream(row?.original)}\n          />\n        )\n      }\n    }\n  ];\n\n  const filterGroup = () => {\n    return (\n        <FilterHeader\n            title=\"Danh sách luồng\"\n            handleOpenFilterModal={handleOpenFilterModal}\n            activeFilter={activeFilter}\n        />\n    )\n}\n\n  return (\n    <Box pt={{ base: \"130px\", md: \"80px\", xl: \"80px\" }}>\n      <ModalCustom\n        size={\"lg\"}\n          isOpen={isOpenUserStream}\n          onClose={onCloseUserStream}\n          title=\"Chỉnh sửa luồng\"\n          content={\n            <EditUserStream\n              dataGeneral={selectedUserStream}\n              handleFetchResource={handleFetchResourceOriginal}\n              onCloseUserStream={onCloseUserStream}\n            />\n          }\n      />\n      <ModalCustomGeneral\n        size=\"lg\"\n        isOpen={isOpenFilterModal}\n        onClose={onCloseFilterModal}\n        title=\"Bộ lọc tìm kiếm\"\n        content={\n            <FormFilterCustom\n                filter={filter}\n                onSearch={onSearchVideoStream}\n            />\n        }\n        handleConfirm={handleConfirmFilter}\n        footer={true}\n        addButton={\n            <Button rightIcon={<RxReset fontSize=\"md\" />} \n                colorScheme='blue' variant='ghost' \n                size=\"md\" borderRadius=\"5px\" mr=\"5px\"\n                fontWeight=\"500\"\n                onClick={handleResetFilter}\n                _hover={{\n                    bg: \"#e2e8f0\"\n                }}>\n                Reset bộ lọc\n            </Button>\n        }\n      />\n      {\n        Object.keys(tableUserStream).length == 0 ? (\n          <TableEmpty\n            columnsData={columnsDataComplex}\n            filterGroup={filterGroup()}\n            tableData={[]}\n          />\n        ) : (\n          <TableListLiveStream\n            filterGroup={filterGroup()}\n            isLoading={isLoading}\n            search={search}\n            onSearch={handleSearchTable}\n            paginationData={paginationData}\n            columnsData={columnsDataComplex}\n            tableData={tableUserStream}\n            handleFetchResource={handleFetchResourceOriginal}\n          />\n        )\n      }\n    </Box>\n  );\n}","/* eslint-disable */\nimport React from \"react\";\n\nimport {\n  Icon,\n  Flex,\n  Text,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Assets\nimport {\n  MdOutlineMoreHoriz,\n  MdEditSquare,\n} from \"react-icons/md\";\nimport { FaRegEdit } from \"react-icons/fa\";\n\nexport default function MenuAgent(props) {\n  const {\n    confirmActivePackage,\n    setMenuSelected,\n    originalData,\n    ...rest\n  } = props;\n  \n  const groupVideoMenu = [\n    {\n      title: 'Xác nhận',\n      icons: FaRegEdit,\n      action: confirmActivePackage\n    },\n  ]\n\n  const textColor = useColorModeValue(\"secondaryGray.800\", \"white\");\n  const textHover = useColorModeValue(\n    { color: \"secondaryGray.900\", bg: \"unset\" },\n    { color: \"secondaryGray.500\", bg: \"unset\" }\n  );\n  const iconColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgList = useColorModeValue(\"white\", \"whiteAlpha.100\");\n  const bgShadow = useColorModeValue(\n    \"14px 17px 40px 4px rgba(112, 144, 176, 0.08)\",\n    \"unset\"\n  );\n  const bgButton = useColorModeValue(\"secondaryGray.400\", \"whiteAlpha.100\");\n  const bgHover = useColorModeValue(\n    { bg: \"secondaryGray.400\" },\n    { bg: \"whiteAlpha.50\" }\n  );\n  const bgFocus = useColorModeValue(\n    { bg: \"secondaryGray.300\" },\n    { bg: \"whiteAlpha.100\" }\n  );\n\n  const {\n    isopen: isOpen1,\n    onOpen: onOpen1,\n    onClose: onClose1,\n  } = useDisclosure();\n\n  return (\n    <Menu isopen={isOpen1} onClose={onClose1} placement=\"auto-start\">\n      <MenuButton\n        align='center'\n        justifyContent='center'\n        _hover={bgHover}\n        _focus={bgFocus}\n        _active={bgFocus}\n        w='37px'\n        h='37px'\n        lineHeight='100%'\n        onClick={onOpen1}\n        borderRadius='10px'\n        {...rest}>\n        <Icon as={MdOutlineMoreHoriz} color={iconColor} w='24px' h='24px' />\n      </MenuButton>\n      <MenuList\n        w='fit-content'\n        minW='unset'\n        maxW='200px !important'\n        backdropFilter='blur(63px)'\n        bg={bgList}\n        boxShadow={bgShadow}\n        borderRadius='10px'\n        p='5px'>\n        {\n          groupVideoMenu?.map((item, index) => {\n            return (\n              <MenuItem\n                key={index}\n                transition='0.2s linear'\n                my=\"15px\"\n                color={textColor}\n                _hover={textHover}\n                p='0px'\n                borderRadius='8px'\n                _active={{\n                  bg: \"transparent\",\n                }}\n                _focus={{\n                  bg: \"transparent\",\n                }}\n                onClick={() => {\n                  item.action()\n                  setMenuSelected(originalData)\n                }}\n                mx=\"15px\">\n                <Flex align='center'>\n                  <Icon as={item.icons} h='16px' w='16px' mr='8px' />\n                  <Text fontSize='md' color=\"black\" fontWeight='400'>\n                    {item?.title}\n                  </Text>\n                </Flex>\n              </MenuItem>\n            )\n          })\n        }\n      </MenuList>\n    </Menu>\n  );\n}\n","/* eslint-disable */\nimport {\n    Flex,\n    Table,\n    Checkbox,\n    Tbody,\n    Td,\n    Text,\n    Th,\n    Thead,\n    Tr,\n    useColorModeValue,\n    Badge,\n    SimpleGrid,\n    Button,\n    Icon,\n    FormControl,\n    Spinner,\n    Grid,\n    GridItem,\n    Avatar,\n    AvatarGroup,\n    FormLabel,\n    Select\n} from \"@chakra-ui/react\";\n\nimport React from \"react\"\nimport { IoAddCircleOutline } from \"react-icons/io5\";\n\nexport default function FilterHeader(props) {\n    const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\n\n    const {\n        title,\n        onModalCreate\n    } = props;\n\n    return (\n        <Grid\n            templateRows='repeat(1, 1fr)'\n            templateColumns='repeat(8, 1fr)'\n            gap={4}\n            mb={2}\n        >\n            <GridItem colSpan={6} margin=\"auto 0\">\n                <FormControl>\n                    <Text\n                        color={textColor}\n                        fontSize='lg'\n                        fontWeight='700'\n                        mb=\"5px\"\n                        ml=\"20px\"\n                        lineHeight='100%'>\n                        {title}\n                    </Text>\n                </FormControl>\n            </GridItem>\n            <GridItem colSpan={2} align=\"right\" mr=\"20px\">\n                <FormControl>\n                    <Button\n                        _hover={{ bg: \"gray.100\" }}\n                        size=\"md\"\n                        variant='outline'\n                        borderRadius='10px'\n                        px='10px'\n                        w=\"fit-content\"\n                        onClick={() => onModalCreate()}\n                        py='20px'>\n                        <Icon\n                            transition='0.2s linear'\n                            w='32px'\n                            h='32px'\n                            pr='10px'\n                            as={IoAddCircleOutline}\n                            color={\"facebook\"}\n                        />\n                        Thêm mới\n                    </Button>\n                </FormControl>\n            </GridItem>\n        </Grid>\n    );\n}\n","/* eslint-disable */\nimport React, { useState, useCallback, useEffect, useRef } from 'react'\nimport {\n    Button,\n    Icon,\n    useColorModeValue,\n    FormLabel,\n    FormControl,\n    InputGroup,\n    NumberInput,\n    NumberInputField,\n    NumberInputStepper,\n    NumberIncrementStepper,\n    NumberDecrementStepper,\n    Grid,\n    GridItem,\n    InputLeftAddon,\n    Select\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { setIn, useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\nimport { MESSSAGE_STATUS_CODE } from '../../../../variables';\nimport { MdOutlineFolder, MdPerson } from 'react-icons/md';\nimport { createUserPackageApi, fetchInfoUserPackageApi } from '../../../../api/UserPackage';\n\nexport default function CreateNewPackage(props) {\n    const { handleFetchResource, onClose, listAdmin } = props;\n\n    const [loading, setLoading] = useState(false);\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n\n    const [infoPackage, setInfoPackage] = useState([]);\n\n    const initialValues = {\n        user_id: \"\",\n        package_name: \"\",\n        package_days: 12,\n        stream_number: 100,\n    }\n\n    const { t } = useTranslation();\n\n    const validateSchema = Yup.object().shape({\n        user_id: Yup.string().required(t('content.required_field')),\n        package_name: Yup.string().required(t('content.required_field')),\n        package_days: Yup.number().required(t('content.required_field')),\n        stream_number: Yup.number().required(t('content.required_field')),\n    });\n\n    const handleFetchInfoUserPackageApi = async () => {\n        try {\n            const responseInfoPackage = await fetchInfoUserPackageApi();\n            if (responseInfoPackage.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                let mapPack = Object.entries(responseInfoPackage.data.data).map(([plan, value], index) => {\n                    return {\n                        label: plan,\n                        value: plan\n                    }\n                });\n                setInfoPackage(mapPack);\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    useEffect(() => {\n        handleFetchInfoUserPackageApi();\n    }, []);\n\n    const handleOnSubmitFormCreate = async (values, { resetForm }) => {\n        setLoading(true);\n        try {\n            const { package_days, ...rest } = values;\n            rest.package_days = package_days*30;\n            const responseEdit = await createUserPackageApi({ ...rest });\n            if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                await handleFetchResource({});\n                resetForm();\n                onClose();\n            }\n            setLoading(false);\n        } catch (err) {\n            setLoading(false);\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmitFormCreate,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card align='left'>\n                <FormControl as={GridItem} colSpan={[6, 3]} mb=\"3%\">\n                    <FormLabel\n                        htmlFor=\"user_id\"\n                        fontSize=\"md\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Chọn người dùng:\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftAddon children={<Icon as={MdPerson} color=\"gray\" w='40px' fontSize='md'\n                            size='lg'/>} />\n                        <Select\n                            id=\"user_id\"\n                            name=\"user_id\"\n                            value={formik.values.user_id || \"\"}\n                            onChange={(e) => setInputValue(\"user_id\", e.target.value)}\n                            autoComplete=\"user_id\"\n                            placeholder=\"--- Chọn người dùng  ---\"\n                            _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                            _placeholder={{ color: \"gray.400\" }}\n                            focusBorderColor=\"brand.400\"\n                            shadow=\"sm\"\n                            size=\"md\"\n                            w=\"full\"\n                            rounded=\"md\">\n                            { listAdmin.map((item, id) => {\n                                return ( <option id={item.value} value={item.value}>{item.label}</option> )\n                            })}\n                        </Select>\n                    </InputGroup>\n                    {formik.errors.user_id && formik.touched.user_id && (\n                        <p className=\"text-error\">{formik.errors.user_id}</p>\n                    )}\n                </FormControl>\n                <FormControl as={GridItem} colSpan={[6, 3]} mb=\"5%\">\n                    <FormLabel\n                        htmlFor=\"package_name\"\n                        fontSize=\"md\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Chọn loại:\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftAddon children={<Icon as={MdOutlineFolder} color=\"gray\" w='40px' fontSize='md'\n                            size='lg'/>} />\n                        <Select\n                            id=\"package_name\"\n                            name=\"package_name\"\n                            value={formik.values.package_name || \"\"}\n                            onChange={(e) => setInputValue(\"package_name\", e.target.value)}\n                            autoComplete=\"package_name\"\n                            placeholder=\"--- Chọn loại  ---\"\n                            _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                            _placeholder={{ color: \"gray.400\" }}\n                            focusBorderColor=\"brand.400\"\n                            shadow=\"sm\"\n                            size=\"md\"\n                            w=\"full\"\n                            rounded=\"md\">\n                            { infoPackage.map((item, id) => {\n                                return ( <option id={item.value} value={item.value}>{item.label}</option> )\n                            })}\n                        </Select>\n                    </InputGroup>\n                    {formik.errors.package_name && formik.touched.package_name && (\n                        <p className=\"text-error\">{formik.errors.package_name}</p>\n                    )}\n                </FormControl>\n                <Grid\n                    margin=\"auto 0\"\n                    templateRows='repeat(1, 1fr)'\n                    templateColumns='repeat(8, 1fr)'\n                    gap={4} mb={4}>\n                    <GridItem colSpan={2}>\n                        <FormControl align=\"right\">\n                            <FormLabel\n                                ms='4px'\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Thời hạn\n                                (tháng)\n                            </FormLabel>\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={2}>\n                        <FormControl align=\"right\">\n                            <NumberInput\n                                min={1} max={200}\n                                clampValueOnBlur={false}\n                                value={formik.values.package_days}\n                                onChange={(e) => setInputValue(\"package_days\", Number(e))}\n                                variant=\"outline\">\n                                <NumberInputField />\n                                <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                </NumberInputStepper>\n                            </NumberInput>\n                            {formik.errors.package_days && formik.touched.package_days && (\n                                <p className=\"text-error\">{formik.errors.package_days}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={2}>\n                        <FormControl align=\"right\">\n                            <FormLabel\n                                ms='4px'\n                                pt=\"10px\"\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Số luồng:\n                            </FormLabel>\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={2}>\n                        <FormControl align=\"right\">\n                            <NumberInput\n                                min={1} max={200}\n                                clampValueOnBlur={false}\n                                value={formik.values.stream_number}\n                                onChange={(e) => setInputValue(\"stream_number\", Number(e))}\n                                variant=\"outline\">\n                                <NumberInputField />\n                                <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                </NumberInputStepper>\n                            </NumberInput>\n                            {formik.errors.stream_number && formik.touched.stream_number && (\n                                <p className=\"text-error\">{formik.errors.stream_number}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    \n                </Grid>\n                <Button\n                    isLoading={loading}\n                    loadingText='Chờ chút'\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    type=\"submit\"\n                    fontWeight='500'>\n                    Xác nhận\n                </Button>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\nimport {\n    Flex,\n    Table,\n    Tbody,\n    Td,\n    Text,\n    Th,\n    Thead,\n    Tr,\n    useColorModeValue,\n    Image\n  } from \"@chakra-ui/react\";\n  \n  import React, { useEffect, useMemo, useState } from \"react\";\n  \n  import {\n    useGlobalFilter,\n    usePagination,\n    useSortBy,\n    useTable\n  } from \"react-table\";\n  \n  // Custom components\n  import Card from \"../../../../components/card/Card\";\n  import Pagination from '../../../../components/paginationCustom/Pagination';\n\n  import emptyBackgroundImage from '../../../../assets/img/empty_bg_2.png';\n\n  export default function TableUserManager(props) {\n    const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\n  \n    const { \n      columnsData,\n      tableData,\n      filterHeader,\n      paginationData,\n      handleFetchResource } = props;\n  \n    const [currentPage, setCurrentPage] = useState(1);\n  \n    const columns = useMemo(() => columnsData, [columnsData]);\n    const data = useMemo(() => tableData, [tableData]);\n  \n    const tableInstance = useTable(\n      {\n        columns,\n        data,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n  \n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      page,\n      prepareRow,\n      initialState,\n      setPageSize\n    } = tableInstance;\n  \n    useEffect(() => {\n      setPageSize(paginationData.per_page)\n    }, []);\n  \n    const handleChangePage = async (page, limit) => {\n      setCurrentPage(page);\n      await handleFetchResource({ page, limit });\n    }\n  \n    const bodyWithoutData = () => {\n      return (\n        <Tr>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n          <Td colSpan={columns?.length} style={{ textAlign: 'center', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n            <Image src={emptyBackgroundImage} alt=\"No Video Stream\" />\n            <Text>Không có dữ liệu</Text>\n          </Td>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n        </Tr>\n      )\n    };\n  \n    const bodyWithData = () => {\n      return (\n        page.map((row, index) => {\n          prepareRow(row);\n          return (\n            <Tr\n              {...row.getRowProps()}\n            >\n              {row.cells.map((cell, index) => {\n                return (\n                  <Td {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                  </Td>\n                );\n              })}\n            </Tr>\n          );\n        })\n      )\n    }\n  \n    return (\n      <Card\n        direction='column'\n        w='100%'\n        px='0px'>\n        {filterHeader}\n        <Card\n          direction='column'\n          w='100%'\n          px='0px'\n          overflowX={{ base: \"scroll\"}}>\n          <Table \n            {...getTableProps()} \n            className=\"-striped -highlight\" \n            variant='simple' mb='24px'\n          >\n            <Thead bgColor=\"#f5f5f5\">\n              {headerGroups.map((headerGroup, index) => (\n                <Tr \n                  {...headerGroup.getHeaderGroupProps()}\n                  key={index}\n                >\n                  {headerGroup.headers.map((column, index) => (\n                    <Th\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                      pe='10px'\n                      key={index}\n                      borderColor={borderColor}>\n                      <Flex\n                        justify='space-between'\n                        align='center'\n                        fontSize={{ sm: \"10px\", lg: \"12px\" }}\n                        color='black'>\n                        {column.render(\"Header\")}\n                      </Flex>\n                    </Th>\n                  ))}\n                </Tr>\n              ))}\n            </Thead>\n            <Tbody {...getTableBodyProps()}>\n              {data.length == 0 ? bodyWithoutData() : bodyWithData()}\n            </Tbody>\n          </Table>\n        </Card>\n        <Pagination\n          color=\"blue\"\n          typeName=\"gói\"\n          currentPage={currentPage}\n          totalCount={paginationData.total}\n          pageSize={paginationData.per_page}\n          onPageChange={handleChangePage}\n        />\n      </Card>\n    );\n  }\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Avatar = ({ name, inputSize }) => {\n    const sizeStyles = {\n        sm: {\n            width: '25px',\n            height: '25px',\n            fontSize: '12px',\n        },\n        md: {\n            width: '30px',\n            height: '30px',\n            fontSize: '15px',\n        },\n        lg: {\n            width: '40px',\n            height: '40px',\n            fontSize: '20px',\n        },\n    };\n\n    const appliedSize = sizeStyles[inputSize] || sizeStyles.sm;\n\n    const styles = {\n        ...appliedSize,\n        borderRadius: '50%',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: '500',\n        marginRight: '5px'\n    };\n\n    const getInitials = (fullName) => {\n        if (!fullName) return '';\n        const initials = fullName\n            .split(' ')\n            .map(word => word[0]?.toUpperCase())\n            .join('');\n        return initials.slice(0, 2);\n    };\n\n    return (\n      <div style={styles}>\n        {getInitials(name)}\n      </div>\n    );\n};\n\nAvatar.propTypes = {\n    name: PropTypes.string.isRequired,\n    inputSize: PropTypes.oneOf(['sm', 'md', 'lg']),\n};\n\nAvatar.defaultProps = {\n    inputSize: 'sm', \n};\n\nexport default Avatar;\n","/* eslint-disable */\nimport React from \"react\";\n\nimport {\n  Icon,\n  Flex,\n  Text,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport {\n  MdOutlineMoreHoriz,\n  MdDeleteOutline,\n} from \"react-icons/md\";\n\nexport default function MenuAgent(props) {\n  const {\n    deleteUserRequest,\n    setMenuSelected,\n    originalData,\n    ...rest\n  } = props;\n  \n  const groupVideoMenu = [\n    {\n      title: 'Xóa',\n      icons: MdDeleteOutline,\n      action: deleteUserRequest\n    },\n  ]\n\n  const textColor = useColorModeValue(\"secondaryGray.800\", \"white\");\n  const textHover = useColorModeValue(\n    { color: \"secondaryGray.900\", bg: \"unset\" },\n    { color: \"secondaryGray.500\", bg: \"unset\" }\n  );\n  const iconColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgList = useColorModeValue(\"white\", \"whiteAlpha.100\");\n  const bgShadow = useColorModeValue(\n    \"14px 17px 40px 4px rgba(112, 144, 176, 0.08)\",\n    \"unset\"\n  );\n  const bgButton = useColorModeValue(\"secondaryGray.400\", \"whiteAlpha.100\");\n  const bgHover = useColorModeValue(\n    { bg: \"secondaryGray.400\" },\n    { bg: \"whiteAlpha.50\" }\n  );\n  const bgFocus = useColorModeValue(\n    { bg: \"secondaryGray.300\" },\n    { bg: \"whiteAlpha.100\" }\n  );\n\n  // Ellipsis modals\n  const {\n    isopen: isOpen1,\n    onOpen: onOpen1,\n    onClose: onClose1,\n  } = useDisclosure();\n\n  return (\n    <Menu isopen={isOpen1} onClose={onClose1} computePositionOnMount={true} placement=\"top\">\n      <MenuButton\n        align='center'\n        justifyContent='center'\n        _hover={bgHover}\n        _focus={bgFocus}\n        _active={bgFocus}\n        w='37px'\n        h='37px'\n        lineHeight='100%'\n        onClick={onOpen1}\n        borderRadius='10px'\n        {...rest}>\n        <Icon as={MdOutlineMoreHoriz} color={iconColor} w='24px' h='24px' />\n      </MenuButton>\n      <MenuList\n        w='fit-content'\n        minW='unset'\n        maxW='200px !important'\n        backdropFilter='blur(63px)'\n        bg={bgList}\n        boxShadow={bgShadow}\n        borderRadius='10px'\n        p='5px'>\n        {\n          groupVideoMenu?.map((item, index) => {\n            return (\n              <MenuItem\n                key={index}\n                transition='0.2s linear'\n                my=\"15px\"\n                color={textColor}\n                _hover={textHover}\n                p='0px'\n                borderRadius='8px'\n                _active={{\n                  bg: \"transparent\",\n                }}\n                _focus={{\n                  bg: \"transparent\",\n                }}\n                onClick={() => {\n                  item.action()\n                  setMenuSelected(originalData)\n                }}\n                mx=\"15px\"\n              >\n                <Flex align='center'>\n                  <Icon as={item.icons} h='16px' w='16px' mr='8px' />\n                  <Text fontSize='md' color=\"black\" fontWeight='400'>\n                    {item?.title}\n                  </Text>\n                </Flex>\n              </MenuItem>\n            )\n          })\n        }\n      </MenuList>\n    </Menu>\n  );\n}\n","/* eslint-disable */\nimport {\n    Text,\n    useColorModeValue,\n    Button,\n    Icon,\n    FormControl,\n    Grid,\n    GridItem\n} from \"@chakra-ui/react\";\n\nimport React from \"react\"\nimport { IoAddCircleOutline } from \"react-icons/io5\";\n\nexport default function FilterHeader(props) {\n    const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\n\n    const {\n        title,\n        onModalCreate\n    } = props;\n\n    return (\n        <Grid\n            templateRows='repeat(1, 1fr)'\n            templateColumns='repeat(8, 1fr)'\n            gap={4}\n            mb={0}\n        >\n            <GridItem colSpan={5} margin=\"auto 0\">\n                <FormControl>\n                    <Text\n                        color={textColor}\n                        fontSize='lg'\n                        fontWeight='700'\n                        mb=\"5px\"\n                        ml=\"20px\"\n                        lineHeight='100%'>\n                        {title}\n                    </Text>\n                </FormControl>\n            </GridItem>\n            <GridItem colSpan={3} align=\"right\" mr=\"15px\">\n                <FormControl>\n                    <Button\n                        _hover={{ bg: \"gray.100\" }}\n                        size=\"md\"\n                        variant='outline'\n                        borderRadius='10px'\n                        borderColor={'#b4b4b4'}\n                        px='10px'\n                        w=\"fit-content\"\n                        onClick={() => onModalCreate()}\n                        py='20px'>\n                        <Icon\n                            transition='0.2s linear'\n                            w='26px'\n                            h='26px'\n                            pr='10px'\n                            as={IoAddCircleOutline}\n                            color={\"facebook\"}\n                        />\n                        Thêm mới\n                    </Button>\n                </FormControl>\n            </GridItem>\n        </Grid>\n    );\n}\n","/* eslint-disable */\nimport {\n    Flex,\n    Table,\n    Tbody,\n    Td,\n    Text,\n    Th,\n    Thead,\n    Tr,\n    useColorModeValue,\n    Image\n  } from \"@chakra-ui/react\";\n  \n  import React, { useEffect, useMemo, useState } from \"react\";\n  \n  import {\n    useGlobalFilter,\n    usePagination,\n    useSortBy,\n    useTable,\n  } from \"react-table\";\n  \n  // Custom components\n  import Card from \"../../../../components/card/Card\";\n  import Pagination from '../../../../components/paginationCustom/Pagination';\n\n  import emptyBackgroundImage from '../../../../assets/img/empty_bg_2.png';\n\n  export default function TableUserManager(props) {\n  \n    const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\n  \n    const { \n      columnsData,\n      tableData,\n      filterHeader,\n      paginationData,\n      handleFetchResource } = props;\n  \n    const [currentPage, setCurrentPage] = useState(1);\n  \n    const columns = useMemo(() => columnsData, [columnsData]);\n    const data = useMemo(() => tableData, [tableData]);\n  \n    const tableInstance = useTable(\n      {\n        columns,\n        data,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n  \n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      page,\n      prepareRow,\n      initialState,\n      setPageSize\n    } = tableInstance;\n  \n    useEffect(() => {\n      setPageSize(paginationData?.per_page)\n    }, [paginationData?.per_page]);\n  \n    const handleChangePage = async (page, limit) => {\n      setCurrentPage(page);\n      await handleFetchResource({ page, limit });\n    }\n  \n    const bodyWithoutData = () => {\n      return (\n        <Tr>\n          <Td colSpan={columns?.length} style={{ textAlign: 'center', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n            <Image src={emptyBackgroundImage} alt=\"No Video Stream\" />\n            <Text>Không có dữ liệu</Text>\n          </Td>\n        </Tr>\n      )\n    };\n  \n    const bodyWithData = () => {\n      return (\n        page?.map((row, index) => {\n          prepareRow(row);\n          return (\n            <Tr\n              {...row.getRowProps()}\n            >\n              {row.cells.map((cell, index) => {\n                return (\n                  <Td {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                  </Td>\n                );\n              })}\n            </Tr>\n          );\n        })\n      )\n    }\n  \n    return (\n      <Card\n        direction='column'\n        w='100%'\n        px='0px'>\n        {filterHeader}\n        <Card\n          direction='column'\n          w='100%'\n          px='0px'\n          overflowX={{ base: \"scroll\" }}>\n          <Table \n            {...getTableProps()} \n            className=\"-striped -highlight\" \n            variant='simple' mb='24px'\n          >\n            <Thead bgColor=\"#f5f5f5\">\n              {headerGroups.map((headerGroup, index) => (\n                <Tr \n                  {...headerGroup.getHeaderGroupProps()}\n                  key={index}\n                >\n                  {headerGroup.headers.map((column, index) => (\n                    <Th\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                      key={index}\n                      borderColor={borderColor}>\n                      <Flex\n                        justify='space-between'\n                        align='center'\n                        fontSize={{ sm: \"10px\", lg: \"12px\" }}\n                        color='black'>\n                        {column.render(\"Header\")}\n                      </Flex>\n                    </Th>\n                  ))}\n                </Tr>\n              ))}\n            </Thead>\n            <Tbody {...getTableBodyProps()}>\n              {data.length == 0 ? bodyWithoutData() : bodyWithData()}\n            </Tbody>\n          </Table>\n        </Card>\n        <Pagination\n          color=\"blue\"\n          typeName=\"người dùng\"\n          currentPage={currentPage}\n          totalCount={paginationData.total}\n          pageSize={paginationData.per_page}\n          onPageChange={handleChangePage}\n        />\n      </Card>\n    );\n  }\n  ","/* eslint-disable */\nimport React, { useState, useCallback } from 'react'\nimport {\n    Button,\n    Icon,\n    FormLabel,\n    Input,\n    FormControl,\n    InputGroup,\n    InputRightElement,\n    GridItem,\n    InputLeftAddon,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\nimport { MESSSAGE_STATUS_CODE, ROLE_USER } from '../../../../variables';\nimport { MdOutlineRemoveRedEye, MdPerson, MdVoicemail } from 'react-icons/md';\nimport { RiEyeCloseLine } from 'react-icons/ri';\nimport { registerUserApi } from '../../../../api/Auth';\nimport { useAuth } from '../../../../contexts/authenContext';\nimport { getCurrRoleUser, getCurrUserID } from '../../../../utils/handleValidate';\n\nexport default function CreateNewUser(props) {\n    const { handleFetchResource, onClose} = props;\n\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const handleClick = () => setShow(!show);\n    const textColorSecondary = \"gray.400\";\n\n    const initialValues = {\n        fullname: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    const { t } = useTranslation();\n    const { profile } = useAuth();\n\n    const validateSchema = Yup.object().shape({\n        fullname: Yup.string().required(t('content.required_field')),\n        email: Yup.string().required(t('content.required_field')),\n        password: Yup.string()\n            .required(t('content.required_field'))\n            .min(8, t('content.check_number_character'))\n            .matches(/\\d/, t('content.check_number_password'))\n            .matches(/[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/, t('content.check_special_character_password')),\n    });\n\n    const handleOnSubmitFormCreate = async (values, { resetForm }) => {\n        setLoading(true);\n        try {\n            if (getCurrRoleUser(profile) === ROLE_USER.RESELLER) {\n                values['referer_id'] = getCurrUserID(profile);\n            }\n            const responseEdit = await registerUserApi(values);\n            if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                await handleFetchResource({});\n                resetForm();\n                onClose();\n            }\n            setLoading(false);\n        } catch (err) {\n            setLoading(false);\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmitFormCreate,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card  align='left'>\n                <FormControl as={GridItem} colSpan={[6, 3]} mb=\"3%\">\n                    <FormLabel\n                        htmlFor=\"fullname\"\n                        fontSize=\"md\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Họ tên:\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftAddon children={<Icon as={MdPerson} color=\"gray\" w='40px' fontSize='md'\n                            size='lg'/>} />\n                        <Input\n                            placeholder=\"Nhập họ tên\"\n                            value={formik.values.fullname}\n                            _placeholder={{ color: \"gray.400\" }}\n                            onChange={(e) => setInputValue(\"fullname\", e.target.value)}\n                            size=\"md\"\n                        />\n                    </InputGroup>\n                    {formik.errors.fullname && formik.touched.fullname && (\n                        <p className=\"text-error\">{formik.errors.fullname}</p>\n                    )}\n                </FormControl>\n                <FormControl as={GridItem} colSpan={[6, 3]} mb=\"3%\">\n                    <FormLabel\n                        htmlFor=\"email\"\n                        fontSize=\"md\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Email:\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftAddon children={<Icon as={MdVoicemail} color=\"gray\" w='40px' fontSize='md'\n                            size='lg'/>} />\n                        <Input\n                            placeholder=\"Nhập email\"\n                            value={formik.values.email}\n                            _placeholder={{ color: \"gray.400\" }}\n                            onChange={(e) => setInputValue(\"email\", e.target.value)}\n                            size=\"md\"\n                        />\n                    </InputGroup>\n                    {formik.errors.email && formik.touched.email && (\n                        <p className=\"text-error\">{formik.errors.email}</p>\n                    )}\n                </FormControl>\n                <FormControl as={GridItem} colSpan={[6, 3]} mb=\"5%\">\n                    <FormLabel\n                        htmlFor=\"password\"\n                        fontSize=\"md\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Mật khẩu:\n                    </FormLabel>\n                    <InputGroup size='md'>\n                        <Input\n                            name=\"password\"\n                            value={formik.values.password || ''}\n                            onChange={(e) => setInputValue(\"password\", e.target.value)}\n                            isRequired={true}\n                            fontSize='sm'\n                            placeholder='Nhập mật khẩu'\n                            size='lg'\n                            type={show ? \"text\" : \"password\"}\n                            variant='auth'\n                        />\n                        <InputRightElement display='flex' alignItems='center' mt='4px'>\n                            <Icon\n                            color={textColorSecondary}\n                            _hover={{ cursor: \"pointer\" }}\n                            as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\n                            onClick={handleClick}\n                            />\n                        </InputRightElement>\n                    </InputGroup>\n                    {formik.errors.password && formik.touched.password && (\n                        <p className=\"text-error\">{formik.errors.password}</p>\n                    )}\n                </FormControl>\n                \n                <Button\n                    isLoading={loading}\n                    loadingText='Chờ chút'\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    type=\"submit\"\n                    fontWeight='500'>\n                    Xác nhận\n                </Button>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\n// Chakra imports\nimport React from \"react\";\nimport {\n    Button,\n    Flex,\n    Icon,\n    Text,\n    Card\n} from \"@chakra-ui/react\";\n\n\nimport {\n    columnsPaymentHistory\n} from \"../../../../variables/index\";\nimport TablePayment from \"../../profile/components/TablePayment\";\nimport { IoAddCircleOutline } from \"react-icons/io5\";\n\nexport default function TabPayment(props) {\n    const { onOpen, tableData } = props;\n\n    return (\n        <Card mb={{ base: \"20px\", lg: \"20px\" }} style={{ boxShadow: 'none' }}>\n            <Flex justify='space-between' mx=\"30px\" mt=\"30px\" mb='37px' display=\"flex\">\n                <Text color=\"black\" align=\"left\" pb=\"10px\" fontSize={\"lg\"} fontWeight=\"bold\">\n                    Lịch sử giao dịch\n                </Text>\n                <Button \n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='outline'\n                    alignContent=\"center\"\n                    justifyContent=\"center\"\n                    onClick={onOpen}\n                    fontWeight='600'>\n                    <Icon\n                        transition='0.2s linear'\n                        w='25px'\n                        h='25px'\n                        pr='8px'\n                        as={IoAddCircleOutline}\n                        color='black'\n                    />\n                    Mua gói\n                </Button>\n            </Flex>\n            <Card overflowX={{ base: \"scroll\"}}>\n                <TablePayment\n                    columnsData={columnsPaymentHistory}\n                    tableData={tableData}\n                />\n            </Card>\n        </Card>\n    );\n}\n","/* eslint-disable */\nimport React, { useState } from 'react'\nimport {\n    Button,\n    FormLabel,\n    Input,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Spinner\n} from '@chakra-ui/react';\n\nimport { useTranslation } from 'react-i18next';\n\nconst ModalStreamVideo = ({ \n    size,\n    isOpen,\n    onClose,\n    title,\n    content,\n    footer,\n    handleConfirm\n}) => {\n    const { t } = useTranslation();\n    \n    return (    \n        <Modal isCentered size={size ? size : \"4xl\"} isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>{title}</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <p>{content}</p>\n                </ModalBody>\n                {\n                    footer ? (\n                        <ModalFooter>\n                            <Button colorScheme=\"blue\" size=\"sm\" variant=\"outline\" mr={3} onClick={onClose}>Hủy bỏ</Button>\n                            <Button \n                                colorScheme='blue' size=\"sm\"\n                                // isDisabled={formik.errors.url}\n                                onClick={() => handleConfirm()}\n                            >Đồng ý</Button>\n                        </ModalFooter>\n                    ) : null\n                }\n            </ModalContent>\n        </Modal>\n    )\n};\n\nexport default ModalStreamVideo;","/* eslint-disable */\n// Chakra imports\nimport React, {useEffect, useState} from \"react\";\nimport {\n  useColorModeValue,\n  Box,\n  Stack,\n  HStack,\n  Heading,\n  Text,\n  Card,\n  VStack,\n  List,\n  ListItem,\n  ListIcon,\n  SimpleGrid,\n  Button,\n  useDisclosure,\n  Spinner\n} from \"@chakra-ui/react\";\n\nimport { MESSSAGE_STATUS_CODE, PACKAGE_ITEM_COLOR } from \"../../../variables/index\";\n\nimport { FaCheckCircle } from 'react-icons/fa';\nimport history from \"../../../utils/history\";\nimport TabPayment from \"./components/TabPayment\";\nimport ModalStreamVideo from \"./components/ModalStreamVideo\";\nimport { toast } from \"react-toastify\";\nimport { fetchInfoUserPackageApi, fetchListUserPackageApi } from \"../../../api/UserPackage\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PriceWrapper = ({ ...props }) => {\n  const { borderTopColor, children } = props;\n  return (\n    <Box\n      borderWidth=\"1px\"\n      alignSelf={{ base: 'center', lg: 'flex-start' }}\n      borderColor=\"transparent\"\n      borderTopWidth=\"7px\"\n      borderRadius={'xl'}\n      borderTopColor={borderTopColor}>\n      {children}\n    </Box>\n  )\n};\n\nexport default function PackagePlanInfo() {\n  const [ loading, setLoading] = useState(false);\n  const [ infoPackage, setInfoPackage] = useState([]);\n  \n  const { t } = useTranslation();\n\n  const { isOpen: isOpenBuyPackage, onOpen: onOpenBuyPackage, onClose: onCloseBuyPackage } = useDisclosure();\n  const [currentUserPackage, setCurrentUserPackage] = useState([]);\n  \n  const handleSelectPackage = (planType) => () => {\n    setLoading(true);\n    history.push(`#/admin/plan/${planType}`);\n    window.location.reload();\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }\n\n  const handleFetchInfoUserPackageApi = async () => {\n    try {\n      const responseInfoPackage = await fetchInfoUserPackageApi();\n      if (responseInfoPackage.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n        let infoPackageResp = responseInfoPackage.data.data;\n        let arrInfoPackage = [];\n        Object.entries(infoPackageResp).map(([plan, value], index) => {\n          let data = {};\n          if (plan == \"trial\") {\n            data = {\n              packageColor: \"gray\",\n              packageCode: plan,\n              textColor: \"black\",\n              total: (100 - value.discount)*value.price_per_month,\n              pricePerMonth: value.price_per_month*100,\n              packageDetail: [\n                'Số lượng: 100 luồng livestream',\n                'Băng thông: không giới hạn',\n                `Giảm giá: ${value.discount} %`,\n                `Giá gốc: ${(value.price_per_month*100).toLocaleString()} VNĐ`\n              ]\n            }\n          } else {\n            data = {\n              packageColor: PACKAGE_ITEM_COLOR[index].packageColor,\n              packageCode: plan,\n              textColor: PACKAGE_ITEM_COLOR[index].textColor,\n              total: (100 - value.discount)*value.price_per_month,\n              pricePerMonth: value.price_per_month*100,\n              packageDetail: [\n                'Số lượng: 100 luồng livestream',\n                'Băng thông: không giới hạn',\n                `Giảm giá: ${value.discount} %`,\n                `Giá gốc: ${(value.price_per_month*100).toLocaleString()} VNĐ`\n              ]\n            }\n          }\n          arrInfoPackage.push(data)\n        });\n\n        setInfoPackage(Array.from(arrInfoPackage));\n      }\n    } catch (err) {\n      if (err.response) {\n          toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  }\n\n  const fetchUserPackage = async () => {\n    try {\n        const responseListUserPackage = await fetchListUserPackageApi();\n        if (responseListUserPackage.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            let allUserPackage = responseListUserPackage.data.data.items;\n            setCurrentUserPackage(allUserPackage);\n        }\n    } catch (err) {\n        if (err.response) {\n            toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n    }\n  }\n\n  useEffect(() =>{ \n    handleFetchInfoUserPackageApi();\n    fetchUserPackage();\n  }, []);\n\n  const modalContent = (\n    <Stack\n      direction={{ base: 'column', md: 'row' }}\n      textAlign=\"center\"\n      justify=\"center\"\n      spacing={{ base: 7, lg: 7 }}\n      py={10}>\n      {\n        infoPackage.map((plan, id) => {\n          return (\n            <PriceWrapper borderTopColor={plan.packageColor} id={id} key={id}>\n              <Card\n                overflowX={{ sm: \"scroll\", lg: \"hidden\" }}\n                borderRadius={'xl'}>\n                <Box py={1} px={12}>\n                    <Text fontWeight=\"600\" fontSize=\"2xl\" my=\"5px\">\n                      {plan.packageCode.toUpperCase()}\n                    </Text>\n                    <Text fontSize=\"3xl\" fontWeight=\"700\" textColor=\"blue.500\">\n                      {plan.total.toLocaleString()}\n                    </Text>\n                    <Text fontSize=\"l\" color=\"gray.500\">\n                      VND/tháng\n                    </Text>\n                </Box>\n                <VStack\n                  py={5}\n                  borderBottomRadius={'xl'}>\n                  <List spacing={3} textAlign=\"start\" px={4}>\n                    {\n                      plan.packageDetail.map((desc, key) => {\n                        return (\n                          <ListItem id={key} key={key}>\n                            <ListIcon as={FaCheckCircle} color=\"green.500\" />\n                              {desc}\n                          </ListItem>)\n                      })\n                    }\n                  </List>\n                  {\n                    (plan.packageCode !== \"trial\") ? (\n                      <Box w=\"80%\" pt={7}>\n                        <Button\n                          w=\"full\"\n                          colorScheme=\"blue\"\n                          _hover={{ bg: \"black\" }}\n                          onClick={handleSelectPackage(plan.packageCode)}\n                          variant=\"brand\">\n                          Mua ngay\n                        </Button>\n                      </Box>\n                    ) : null\n                  }\n                </VStack>\n              </Card>\n            </PriceWrapper>\n          )\n        })\n      }\n    </Stack>\n  )\n\n  return (\n    <>\n      <Box \n        pt={{ base: \"100px\", md: \"100px\", xl: \"100px\" }}\n      > \n        <ModalStreamVideo\n            isOpen={isOpenBuyPackage}\n            onClose={onCloseBuyPackage}\n            title=\"Thông tin các gói\"\n            content={modalContent}\n        />\n        <TabPayment\n          tableData={currentUserPackage}\n          onOpen={onOpenBuyPackage}/>\n      </Box>\n    </>\n  )\n}\n","/* eslint-disable */\n// Chakra Imports\nimport { Button, Icon, useColorMode } from \"@chakra-ui/react\";\n// Custom Icons\nimport { IoMdMoon, IoMdSunny } from \"react-icons/io\";\nimport React from \"react\";\n\nexport default function FixedPlugin(props) {\n  const { ...rest } = props;\n  const { colorMode, toggleColorMode } = useColorMode();\n  const bgButton = \"linear-gradient(135deg, #868CFF 0%, #4318FF 100%)\";\n\n  return (\n    <Button\n      {...rest}\n      h='60px'\n      w='60px'\n      zIndex='99'\n      bg={bgButton}\n      position='fixed'\n      variant='no-effects'\n      left={document.documentElement.dir === \"rtl\" ? \"35px\" : \"\"}\n      right={document.documentElement.dir === \"rtl\" ? \"\" : \"35px\"}\n      bottom='30px'\n      border='1px solid'\n      borderColor='#6A53FF'\n      borderRadius='50px'\n      onClick={toggleColorMode}\n      display='flex'\n      p='0px'\n      align='center'\n      justify='center'>\n      <Icon\n        h='24px'\n        w='24px'\n        color='white'\n        as={colorMode === \"light\" ? IoMdMoon : IoMdSunny}\n      />\n    </Button>\n  );\n}\n","/* eslint-disable */\n// Chakra imports\nimport React from \"react\";\nimport { Box, Flex, Icon, Text } from \"@chakra-ui/react\";\nimport PropTypes from \"prop-types\";\nimport FixedPlugin from \"../../components/fixedPlugin/FixedPlugin\";\n// Custom components\n\nfunction AuthIllustration(props) {\n  const { children, illustrationBackground } = props;\n  // Chakra color mode\n  return (\n    <Flex position='relative' h='max-content'>\n      <Flex\n        h={{\n          sm: \"initial\",\n          md: \"unset\",\n          lg: \"100vh\",\n          xl: \"97vh\",\n        }}\n        w='100%'\n        maxW={{ md: \"66%\", lg: \"1313px\" }}\n        mx='auto'\n        pt={{ sm: \"50px\", md: \"0px\" }}\n        px={{ lg: \"30px\", xl: \"0px\" }}\n        ps={{ xl: \"70px\" }}\n        justifyContent='flex-start'\n        direction='column'>\n        {children}\n        <Box\n          display={{ base: \"none\", md: \"block\" }}\n          h='100%'\n          minH='100vh'\n          w={{ lg: \"50vw\", \"2xl\": \"44vw\" }}\n          position='absolute'\n          right='0px'>\n          <Flex\n            bg={`url(${illustrationBackground})`}\n            justify='center'\n            align='end'\n            w='100%'\n            h='100%'\n            bgSize='cover'\n            bgPosition='50%'\n            position='absolute'\n            borderBottomLeftRadius={{ lg: \"120px\", xl: \"200px\" }}></Flex>\n        </Box>\n      </Flex>\n      <FixedPlugin />\n    </Flex>\n  );\n}\n// PROPS\n\nAuthIllustration.propTypes = {\n  illustrationBackground: PropTypes.string,\n  image: PropTypes.any,\n};\n\nexport default AuthIllustration;\n","export default __webpack_public_path__ + \"f122cde41922d15c4bfceb45e54c0066.png\";","export default __webpack_public_path__ + \"591a2be066964241957c38324c3e4e7c.svg\";","/* eslint-disable */\nimport React, { useState, useCallback } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\n// Chakra imports\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Icon,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Image,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { MdOutlineRemoveRedEye } from \"react-icons/md\";\nimport { RiEyeCloseLine } from \"react-icons/ri\";\nimport { toast } from 'react-toastify';\n\nimport { useTranslation } from 'react-i18next';\n\nimport DefaultAuth from \"../../../layouts/auth/Default\";\nimport illustration from \"../../../assets/img/auth/auth.png\";\nimport { useAuth } from \"../../../contexts/authenContext\";\nimport history from '../../../utils/history';\nimport { loginUserApi } from '../../../api/Auth/index';\nimport { MESSSAGE_STATUS_CODE } from \"../../../variables/index\";\n\nimport logo from '../../../assets/img/logo.svg';\n\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n}\n\nconst SignIn = () => {\n  const textColor = useColorModeValue(\"navy.700\", \"white\");\n  const textColorSecondary = \"gray.400\";\n  const textColorDetails = useColorModeValue(\"navy.700\", \"secondaryGray.600\");\n  const textColorBrand = useColorModeValue(\"brand.500\", \"white\");\n  const brandStars = useColorModeValue(\"brand.500\", \"brand.400\");\n\n  const { t } = useTranslation();\n\n  const validateSchema = Yup.object().shape({\n    email: Yup.string().email(t('content.check_valid_email')).required(t('content.required_field')),\n    password: Yup.string()\n      .required(t('content.required_field'))\n      .min(8, t('content.check_number_character'))\n      .matches(/\\d/, t('content.check_number_password'))\n      .matches(/[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/, t('content.check_special_character_password')),\n  });\n\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { setProfile, setToken } = useAuth();\n\n  const handleClick = () => setShow(!show);\n\n  const handleLoginNotification = (data) => {\n    if (data.error_code == 0) {\n      toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`))\n    } else {\n      toast.error(data.message);\n    }\n  }\n\n  const handleOnSubmit = async (values) => {\n    setLoading(true);\n    try {\n      const response = await loginUserApi(values);\n      if (response.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n        let dataResponse = response?.data?.data;\n        let {id, ...rest} = dataResponse?.user;\n        setToken(dataResponse?.token);\n\n        setProfile(JSON.stringify({\n          plan: 'trail',\n          ...rest\n        }));\n\n        handleLoginNotification(response.data);\n\n        history.push('/#/admin/home-page');\n        window.location.reload();\n      }\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      console.log(err);\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validateSchema,\n    onSubmit: handleOnSubmit,\n  });\n\n  const setInputValue = useCallback(\n    (key, value) => {\n      formik.setValues({\n        ...formik.values,\n        [key]: value,\n      })\n    },\n    [formik]\n  );\n\n  const formLogin = (\n    <form onSubmit={formik.handleSubmit}>\n      <FormControl>\n        <FormLabel\n          display='flex'\n          ms='4px'\n          fontSize='sm'\n          fontWeight='500'\n          color={textColor}\n          mb='8px'>\n          Email<Text color={brandStars}>*</Text>\n        </FormLabel>\n        <Input\n          name=\"email\"\n          value={formik.values.email}\n          onChange={(e) => setInputValue(\"email\", e.target.value)}\n          isRequired={true}\n          variant='auth'\n          fontSize='sm'\n          ms={{ base: \"0px\", md: \"0px\" }}\n          type='email'\n          placeholder='mail@ssc.com'\n          fontWeight='500'\n          size='md'\n        />\n        {formik.errors.email && formik.touched && (\n          <p className=\"text-error\">{formik.errors.email}</p>\n        )}\n        <FormLabel\n          ms='4px'\n          mt='24px'\n          fontSize='sm'\n          fontWeight='500'\n          color={textColor}\n          display='flex'>\n          Mật khẩu<Text color={brandStars}>*</Text>\n        </FormLabel>\n        <InputGroup size='md'>\n          <Input\n            name=\"password\"\n            value={formik.values.password || ''}\n            onChange={(e) => setInputValue(\"password\", e.target.value)}\n            isRequired={true}\n            fontSize='sm'\n            placeholder='Min. 8 characters'\n            size='md'\n            type={show ? \"text\" : \"password\"}\n            variant='auth'\n          />\n          <InputRightElement display='flex' alignItems='center' mt='4px'>\n            <Icon\n              color={textColorSecondary}\n              _hover={{ cursor: \"pointer\" }}\n              as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\n              onClick={handleClick}\n            />\n          </InputRightElement>\n        </InputGroup>\n        {formik.errors.password && formik.touched && (\n          <p className=\"text-error\">{formik.errors.password}</p>\n        )}\n        <Flex justifyContent='space-between' align='center' my='24px'>\n          <FormControl display='flex' alignItems='center'>\n            <Checkbox\n              id='remember-login'\n              colorScheme='brandScheme'\n              me='10px'\n            />\n            <FormLabel\n              htmlFor='remember-login'\n              mb='0'\n              fontWeight='normal'\n              color={textColor}\n              fontSize='sm'>\n              Giữ tôi luôn đăng nhập\n            </FormLabel>\n          </FormControl>\n          <NavLink to='/auth/forgot-password'>\n            <Text\n              color={textColorBrand}\n              fontSize='sm'\n              w='124px'\n              fontWeight='500'>\n              Quên mật khẩu?\n            </Text>\n          </NavLink>\n        </Flex>\n        <Button\n          type=\"submit\"\n          disabled={loading}\n          fontSize='sm'\n          variant='brand'\n          fontWeight='500'\n          w='100%'\n          h='50'\n          mb='24px'>\n          {loading ? \"Chờ chút...\" : \"Đăng nhập\"}\n        </Button>\n      </FormControl>\n    </form>\n  )\n\n  return (\n    <DefaultAuth illustrationBackground={illustration} image={illustration}>\n      <Flex\n        maxW={{ base: \"100%\", md: \"max-content\" }}\n        w='100%'\n        mx={{ base: \"auto\", lg: \"0px\" }}\n        me='auto'\n        h='100%'\n        alignItems='start'\n        justifyContent='center'\n        mb={{ base: \"30px\", md: \"60px\" }}\n        px={{ base: \"25px\", md: \"0px\" }}\n        mt={{ base: \"40px\", md: \"14vh\" }}\n        flexDirection='column'>\n        <Image src={logo} h='70px' w='100px' mb='20%' />\n        <Box me='auto'>\n          <Heading color={textColor} fontSize='36px' mb='10px'>\n            Đăng nhập\n          </Heading>\n          <Text\n            mb='36px'\n            ms='4px'\n            color={textColorSecondary}\n            fontWeight='400'\n            fontSize='md'>\n            Nhập email và mật khẩu của bạn để đăng nhập!\n          </Text>\n        </Box>\n        <Flex\n          zIndex='2'\n          direction='column'\n          w={{ base: \"100%\", md: \"420px\" }}>\n          { formLogin }\n          <Flex\n            flexDirection='column'\n            justifyContent='center'\n            alignItems='start'\n            maxW='100%'\n            mt='0px'>\n            <Text color={textColorDetails} fontWeight='400' fontSize='14px'>\n              Chưa có tài khoản?\n              <NavLink to='/auth/register'>\n                <Text\n                  color={textColorBrand}\n                  as='span'\n                  ms='5px'\n                  fontWeight='500'>\n                  Tạo tài khoản mới\n                </Text>\n              </NavLink>\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    </DefaultAuth>\n  );\n}\n\nexport default SignIn;\n","/* eslint-disable */\nimport React, { useState, useCallback } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\n// Tranlation context API\nimport { useTranslation } from 'react-i18next';\n\n// Chakra imports\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Icon,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Text,\n  useColorModeValue,\n  Image\n} from \"@chakra-ui/react\";\nimport { MdOutlineRemoveRedEye } from \"react-icons/md\";\nimport { RiEyeCloseLine } from \"react-icons/ri\";\nimport { toast } from 'react-toastify';\n\n// Custom components\nimport DefaultAuth from \"../../../layouts/auth/Default\";\n// Assets\nimport illustration from \"../../../assets/img/auth/auth.png\";\nimport { useAuth } from \"../../../contexts/authenContext\";\nimport history from '../../../utils/history';\nimport { registerUserApi } from \"../../../api/Auth/index\";\nimport { MESSSAGE_STATUS_CODE } from \"../../../variables\";\nimport logo from '../../../assets/img/logo.svg';\n\nconst initialValues = {\n  fullname: \"\",\n  email: \"\",\n  password: \"\",\n  confirm_password: \"\"\n}\n\nconst Register = () => {\n  const textColor = useColorModeValue(\"navy.700\", \"white\");\n  const textColorSecondary = \"gray.400\";\n  const textColorDetails = useColorModeValue(\"navy.700\", \"secondaryGray.600\");\n  const textColorBrand = useColorModeValue(\"brand.500\", \"white\");\n  const brandStars = useColorModeValue(\"brand.500\", \"brand.400\");\n\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const validateSchema = Yup.object().shape({\n    fullname: Yup.string().min(2, t('content.minimum_2_char')),\n    email: Yup.string().email(t('content.check_valid_email')).required(t('content.required_field')), \n    password: Yup.string()\n      .required(t('content.required_field'))\n      .min(8, t('content.check_number_character'))\n      // .matches(/(?=.*[a-z])(?=.*[A-Z])\\w+/, \"Password ahould contain at least one uppercase and lowercase character\")\n      .matches(/\\d/, t('content.check_number_password'))\n      .matches(/[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/, t('content.check_special_character_password')),\n    confirm_password: Yup.string().when(\"password\", (password, field) => {\n      if (password) {\n        return field.required(t('content.check_matching_password')).oneOf([Yup.ref(\"password\")], t('content.check_matching_password'));\n      }\n    }),\n  });\n\n  const handleClick = () => setShow(!show);\n\n  const handleRegisterNotification = (data) => {\n    if (data.data && data.data.error_code == 0) {\n      toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n    } else {\n      toast.error(data.data.message);\n    }\n  }\n\n  const handleOnSubmit = async (values) => {\n    let { confirm_password, ...newUser } = values;\n    setLoading(true);\n    try {\n      const response = await registerUserApi(newUser);\n      if (response.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n        handleRegisterNotification(response);\n\n        setLoading(false);\n        if (response) {\n          history.push('#/auth/sign-in');\n          window.location.reload()\n        }\n      }\n    } catch (err) {\n      setLoading(false);\n      console.log(err);\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validateSchema,\n    onSubmit: handleOnSubmit,\n  });\n\n  const setInputValue = useCallback(\n    (key, value) => {\n      formik.setValues({\n        ...formik.values,\n        [key]: value,\n      })\n    },\n    [formik]\n  );\n\n  const formLogin = (\n    <form onSubmit={formik.handleSubmit}>\n      <FormControl>\n        <FormLabel\n          display='flex'\n          ms='4px'\n          fontSize='sm'\n          fontWeight='500'\n          color={textColor}\n          mb='8px'>\n          Họ tên<Text color={brandStars}>*</Text>\n        </FormLabel>\n        <Input\n          name=\"fullname\"\n          value={formik.values.fullname}\n          onChange={(e) => setInputValue(\"fullname\", e.target.value)}\n          isRequired={true}\n          variant='auth'\n          fontSize='sm'\n          ms={{ base: \"0px\", md: \"0px\" }}\n          type='fullname'\n          placeholder='Nguyễn Văn A'\n          fontWeight='500'\n          size='md'\n        />\n        {formik.errors.fullname && formik.touched.fullname && (\n          <p className=\"text-error\">{formik.errors.fullname}</p>\n        )}\n        <FormLabel\n          display='flex'\n          ms='4px'\n          fontSize='sm'\n          fontWeight='500'\n          color={textColor}\n          mt='24px'>\n          Email<Text color={brandStars}>*</Text>\n        </FormLabel>\n        <Input\n          name=\"email\"\n          value={formik.values.email}\n          onChange={(e) => setInputValue(\"email\", e.target.value)}\n          isRequired={true}\n          variant='auth'\n          fontSize='sm'\n          ms={{ base: \"0px\", md: \"0px\" }}\n          type='email'\n          placeholder='mail@ssc.com'\n          fontWeight='500'\n          size='md'\n        />\n        {formik.errors.email && formik.touched.email && (\n          <p className=\"text-error\">{formik.errors.email}</p>\n        )}\n        <FormLabel\n          ms='4px'\n          mt='24px'\n          fontSize='sm'\n          fontWeight='500'\n          color={textColor}\n          display='flex'>\n          Mật khẩu<Text color={brandStars}>*</Text>\n        </FormLabel>\n        <InputGroup size='md'>\n          <Input\n            name=\"password\"\n            value={formik.values.password || ''}\n            onChange={(e) => setInputValue(\"password\", e.target.value)}\n            isRequired={true}\n            fontSize='sm'\n            placeholder='Nhập mật khẩu'\n            size='md'\n            type={show ? \"text\" : \"password\"}\n            variant='auth'\n          />\n          <InputRightElement display='flex' alignItems='center' mt='4px'>\n            <Icon\n              color={textColorSecondary}\n              _hover={{ cursor: \"pointer\" }}\n              as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\n              onClick={handleClick}\n            />\n          </InputRightElement>\n        </InputGroup>\n        {formik.errors.password && formik.touched.password && (\n          <p className=\"text-error\">{formik.errors.password}</p>\n        )}\n        <FormLabel\n          ms='4px'\n          mt='24px'\n          fontSize='sm'\n          fontWeight='500'\n          color={textColor}\n          display='flex'>\n          Nhập lại mật khẩu<Text color={brandStars}>*</Text>\n        </FormLabel>\n        <InputGroup size='md'>\n          <Input\n            name=\"confirm_password\"\n            value={formik.values.confirm_password || ''}\n            onChange={(e) => setInputValue(\"confirm_password\", e.target.value)}\n            isRequired={true}\n            fontSize='sm'\n            placeholder='Nhập lại mật khẩu'\n            size='md'\n            type={show ? \"text\" : \"password\"}\n            variant='auth'\n          />\n          <InputRightElement display='flex' alignItems='center' mt='4px'>\n            <Icon\n              color={textColorSecondary}\n              _hover={{ cursor: \"pointer\" }}\n              as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\n              onClick={handleClick}\n            />\n          </InputRightElement>\n        </InputGroup>\n        {formik.errors.confirm_password && formik.touched.confirm_password && (\n          <p className=\"text-error\">{formik.errors.confirm_password}</p>\n        )}\n        <Button\n          type=\"submit\"\n          disabled={loading}\n          fontSize='sm'\n          variant='brand'\n          fontWeight='500'\n          w='100%'\n          h='50'\n          my='24px'>\n          {loading ? \"Chờ chút...\" : \"Đăng ký\"}\n        </Button>\n      </FormControl>\n    </form>\n  )\n\n  return (\n    <DefaultAuth illustrationBackground={illustration} image={illustration}>\n      <Flex\n        maxW={{ base: \"100%\", md: \"max-content\" }}\n        w='100%'\n        mx={{ base: \"auto\", lg: \"0px\" }}\n        me='auto'\n        h='100%'\n        alignItems='start'\n        justifyContent='center'\n        mb={{ base: \"30px\", md: \"60px\" }}\n        px={{ base: \"25px\", md: \"0px\" }}\n        mt={{ base: \"40px\", md: \"14vh\" }}\n        flexDirection='column'>\n        <Image src={logo} h='70px' w='90px' mb='10%' />\n        <Box me='auto'>\n          <Heading color={textColor} fontSize='36px' mb='10px'>\n            {t('content.register')}\n          </Heading>\n          <Text\n            mb='36px'\n            ms='4px'\n            color={textColorSecondary}\n            fontWeight='400'\n            fontSize='md'>\n            Nhập email và mật khẩu của bạn!\n          </Text>\n        </Box>\n        <Flex\n          zIndex='2'\n          direction='column'\n          w={{ base: \"100%\", md: \"420px\" }}\n          maxW='100%'\n          background='transparent'\n          borderRadius='15px'\n          mx={{ base: \"auto\", lg: \"unset\" }}\n          me='auto'\n          mb={{ base: \"20px\", md: \"auto\" }}>\n          { formLogin }\n          <Flex\n            flexDirection='column'\n            justifyContent='center'\n            alignItems='start'\n            maxW='100%'\n            mt='0px'>\n            <Text color={textColorDetails} fontWeight='400' fontSize='14px'>\n              Đã có tài khoản?\n              <NavLink to='/auth/sign-up'>\n                <Text\n                  color={textColorBrand}\n                  as='span'\n                  ms='5px'\n                  fontWeight='500'>\n                  Đăng nhập\n                </Text>\n              </NavLink>\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    </DefaultAuth>\n  );\n}\n\nexport default Register;\n","/* eslint-disable */\nimport React, { useState, useCallback } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\n// Tranlation context API\nimport { useTranslation } from 'react-i18next';\n\n// Chakra imports\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Icon,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { MdOutlineRemoveRedEye } from \"react-icons/md\";\nimport { RiEyeCloseLine } from \"react-icons/ri\";\n\n// Custom components\nimport DefaultAuth from \"../../../layouts/auth/Default\";\n// Assets\nimport illustration from \"../../../assets/img/auth/auth.png\";\nimport { useAuth } from \"../../../contexts/authenContext\";\nimport history from '../../../utils/history';\nimport { updatePasswordUser } from '../../../api/Auth/index';\nimport { toast } from \"react-toastify\";\n\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n}\n\nconst ForgotPassword = () => {\n  // Chakra color mode\n  const textColor = useColorModeValue(\"navy.700\", \"white\");\n  const textColorSecondary = \"gray.400\";\n  const textColorDetails = useColorModeValue(\"navy.700\", \"secondaryGray.600\");\n  const textColorBrand = useColorModeValue(\"brand.500\", \"white\");\n  const brandStars = useColorModeValue(\"brand.500\", \"brand.400\");\n\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { setProfile, setToken } = useAuth();\n\n  const { t } = useTranslation();\n\n  const validateSchema = Yup.object().shape({\n    email: Yup.string().email(\"Please enter a valid email\").required(\"This field is required\"),\n  });\n\n  const handleClick = () => setShow(!show);\n\n  const handleOnSubmit = async (values) => {\n    try {\n      const response = await updatePasswordUser(values);\n  \n      let {id, ...rest} = response.user;\n      setToken(response.token);\n      setProfile(JSON.stringify(rest));\n      history.push('#/admin');\n    } catch (err) {\n      if (err.response) {\n          toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validateSchema,\n    onSubmit: handleOnSubmit,\n  });\n\n  const setInputValue = useCallback(\n    (key, value) => {\n      formik.setValues({\n        ...formik.values,\n        [key]: value,\n      })\n    },\n    [formik]\n  );\n\n  const formLogin = (\n    <form onSubmit={formik.handleSubmit}>\n      <FormControl>\n        <FormLabel\n          display='flex'\n          ms='4px'\n          fontSize='sm'\n          fontWeight='500'\n          color={textColor}\n          mb='8px'>\n          Email<Text color={brandStars}>*</Text>\n        </FormLabel>\n        <Input\n          name=\"email\"\n          value={formik.values.username}\n          onChange={(e) => setInputValue(\"email\", e.target.value)}\n          isRequired={true}\n          variant='auth'\n          fontSize='sm'\n          ms={{ base: \"0px\", md: \"0px\" }}\n          type='email'\n          placeholder='mail@simmmple.com'\n          fontWeight='500'\n          size='lg'\n        />\n        {formik.errors.email && formik.touched && (\n          <p className=\"text-error\">{formik.errors.email}</p>\n        )}\n        <Button\n          type=\"submit\"\n          // disabled={!formik.isValid}\n          fontSize='sm'\n          variant='brand'\n          fontWeight='500'\n          w='100%'\n          h='50'\n          my='24px'>\n          Đổi mật khẩu\n        </Button>\n      </FormControl>\n    </form>\n  )\n\n  return (\n    <DefaultAuth illustrationBackground={illustration} image={illustration}>\n      <Flex\n        maxW={{ base: \"100%\", md: \"max-content\" }}\n        w='100%'\n        mx={{ base: \"auto\", lg: \"0px\" }}\n        me='auto'\n        h='100%'\n        alignItems='start'\n        justifyContent='center'\n        mb={{ base: \"30px\", md: \"60px\" }}\n        px={{ base: \"25px\", md: \"0px\" }}\n        mt={{ base: \"40px\", md: \"14vh\" }}\n        flexDirection='column'>\n        <Box me='auto'>\n          <Heading color={textColor} fontSize='36px' mb='10px'>\n            Đổi mật khẩu\n          </Heading>\n          <Text\n            mb='36px'\n            ms='4px'\n            color={textColorSecondary}\n            fontWeight='400'\n            fontSize='md'>\n            Nhập email bạn thường dùng\n          </Text>\n        </Box>\n        <Flex\n          zIndex='2'\n          direction='column'\n          w={{ base: \"100%\", md: \"420px\" }}\n          maxW='100%'\n          background='transparent'\n          borderRadius='15px'\n          mx={{ base: \"auto\", lg: \"unset\" }}\n          me='auto'\n          mb={{ base: \"20px\", md: \"auto\" }}>\n          { formLogin }\n          <Flex\n            flexDirection='column'\n            justifyContent='center'\n            alignItems='start'\n            maxW='100%'\n            mt='0px'>\n            <Text color={textColorDetails} fontWeight='400' fontSize='14px'>\n              Đã có tài khoản?\n              <NavLink to='/auth/sign-up'>\n                <Text\n                  color={textColorBrand}\n                  as='span'\n                  ms='5px'\n                  fontWeight='500'>\n                  Đăng nhập\n                </Text>\n              </NavLink>\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    </DefaultAuth>\n  );\n}\n\nexport default ForgotPassword;\n","export default __webpack_public_path__ + \"5e384d45783b5e7aad6a3fc0492cef87.jpg\";","/* eslint-disable */\nimport React, { useState } from 'react'\nimport {\n    Button,\n    FormLabel,\n    Input,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton\n} from '@chakra-ui/react';\n\nimport { useTranslation } from 'react-i18next';\n\nconst ModalPackageConfirm = ({ \n    isOpen,\n    onClose,\n    // handleAddURLVideo,\n    // formik,\n    // setInputValue\n}) => {\n    const { t } = useTranslation();\n    return (    \n        <Modal isCentered size=\"3xl\" isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Thêm video từ URL</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <p>Sử dụng link video Youtube để tạo Livestream.</p>\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='xl'\n                        fontWeight='500'\n                        mt='24px'>\n                        URL:\n                    </FormLabel>\n                </ModalBody>\n\n                <ModalFooter>\n                    <Button colorScheme=\"blue\" variant=\"outline\" mr={3} onClick={onClose}>Hủy bỏ</Button>\n                    <Button \n                        colorScheme='blue'\n                    >Thêm vào danh sách phát</Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n};\n\nexport default ModalPackageConfirm;","/* eslint-disable */\nimport {\n    Flex,\n    Table,\n    Tbody,\n    Td,\n    Text,\n    Th,\n    Thead,\n    Tr,\n    useColorModeValue,\n    Image\n  } from \"@chakra-ui/react\";\n  \n  import React, { useEffect, useMemo, useState } from \"react\";\n  \n  import {\n    useGlobalFilter,\n    usePagination,\n    useSortBy,\n    useTable,\n  } from \"react-table\";\n  \n  // Custom components\n  import Card from \"../../../../components/card/Card\";\n  import Pagination from '../../../../components/paginationCustom/Pagination';\n  import emptyBackgroundImage from '../../../../assets/img/empty_bg_2.png';\n\n  export default function TableManageServerLivestream(props) {\n    const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\n  \n    const { \n      columnsData,\n      tableData,\n      filterHeader,\n      paginationData,\n      handleFetchResource } = props;\n  \n    const [currentPage, setCurrentPage] = useState(1);\n  \n    const columns = useMemo(() => columnsData, [columnsData]);\n    const data = useMemo(() => tableData, [tableData]);\n  \n    const tableInstance = useTable(\n      {\n        columns,\n        data,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n  \n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      page,\n      prepareRow,\n      initialState,\n      setPageSize\n    } = tableInstance;\n  \n    useEffect(() => {\n      setPageSize(paginationData.per_page)\n    }, []);\n  \n    const handleChangePage = async (page, limit) => {\n      setCurrentPage(page);\n      await handleFetchResource({ page, limit });\n    }\n  \n    const bodyWithoutData = () => {\n      return (\n        <Tr>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n          <Td colSpan={columns?.length} style={{ textAlign: 'center', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n            <Image src={emptyBackgroundImage} alt=\"No Video Stream\" />\n            <Text>Không có dữ liệu</Text>\n          </Td>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n        </Tr>\n      )\n    };\n  \n    const bodyWithData = () => {\n      return (\n        page.map((row, index) => {\n          prepareRow(row);\n          return (\n            <Tr\n              {...row.getRowProps()}\n            >\n              {row.cells.map((cell, index) => {\n                return (\n                  <Td {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                  </Td>\n                );\n              })}\n            </Tr>\n          );\n        })\n      )\n    }\n  \n    return (\n      <Card\n        direction='column'\n        w='100%'\n        px='0px'\n        >\n        {filterHeader}\n        <Card\n          direction='column'\n          w='100%'\n          px='0px'\n          overflowX={{ base: \"scroll\"}}\n        >\n          <Table \n            {...getTableProps()} \n            className=\"-striped -highlight\" \n            variant='simple' mb='24px'\n            \n          >\n            <Thead bgColor=\"#f5f5f5\">\n              {headerGroups.map((headerGroup, index) => (\n                <Tr \n                  {...headerGroup.getHeaderGroupProps()}\n                  key={index}\n                >\n                  {headerGroup.headers.map((column, index) => (\n                    <Th\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                      pe='10px'\n                      key={index}\n                      borderColor={borderColor}>\n                      <Flex\n                        justify='space-between'\n                        align='center'\n                        fontSize={{ sm: \"10px\", lg: \"12px\" }} color=\"black\">\n                        {column.render(\"Header\")}\n                      </Flex>\n                    </Th>\n                  ))}\n                </Tr>\n              ))}\n            </Thead>\n            <Tbody {...getTableBodyProps()}>\n              {data.length == 0 ? bodyWithoutData() : bodyWithData()}\n            </Tbody>\n          </Table>\n        </Card>\n        <Pagination\n          color=\"blue\"\n          typeName=\"servers\"\n          currentPage={currentPage}\n          totalCount={paginationData.total}\n          pageSize={paginationData.per_page}\n          onPageChange={handleChangePage}\n        />\n      </Card>\n    );\n  }\n  ","/* eslint-disable */\nimport React from \"react\";\n\nimport {\n  Icon,\n  Flex,\n  Text,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Assets\nimport {\n  MdOutlineMoreHoriz,\n  MdDeleteOutline,\n  MdOutlinePerson,\n  MdEditSquare,\n  MdLockReset,\n  MdOutlineAssignmentInd,\n  MdOutlineAssignmentReturn\n} from \"react-icons/md\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { ROLE_USER } from \"../../../../variables\";\nimport { getCurrRoleUser } from \"../../../../utils/handleValidate\";\nimport { useAuth } from \"../../../../contexts/authenContext\";\n\nexport default function MenuAgent(props) {\n  const {\n    editAgentServer,\n    detailAgentServer,\n    assignAgentFor,\n    assignAgentResellerFor,\n    delAgentServer,\n    originalData,\n    setMenuSelected,\n    resetAgent,\n    ...rest\n  } = props;\n\n  const { profile } = useAuth();\n  \n  const groupVideoMenu = [\n    {\n      title: 'Chỉnh sửa',\n      icons: FaRegEdit,\n      action: editAgentServer,\n      role: [ROLE_USER.ADMIN]\n    },\n    {\n      title: 'Chi tiết',\n      icons: MdOutlinePerson,\n      action: detailAgentServer,\n      role: [ROLE_USER.ADMIN]\n    },\n    {\n      title: 'Gán User',\n      icons: MdOutlineAssignmentInd,\n      action: assignAgentFor,\n      role: [ROLE_USER.ADMIN, ROLE_USER.RESELLER]\n    },\n    {\n      title: 'Gán Reseller',\n      icons: MdOutlineAssignmentReturn,\n      action: assignAgentResellerFor,\n      role: [ROLE_USER.ADMIN]\n    },\n    {\n      title: 'Reset',\n      icons: MdLockReset,\n      action: resetAgent,\n      role: [ROLE_USER.ADMIN, ROLE_USER.RESELLER, ROLE_USER.USER_DEFAULT]\n    },\n    {\n      title: 'Xóa',\n      icons: MdDeleteOutline,\n      action: delAgentServer,\n      role: [ROLE_USER.ADMIN, ROLE_USER.RESELLER]\n    },\n  ]\n\n  const textColor = useColorModeValue(\"secondaryGray.800\", \"white\");\n  const textHover = useColorModeValue(\n    { color: \"secondaryGray.900\", bg: \"unset\" },\n    { color: \"secondaryGray.500\", bg: \"unset\" }\n  );\n  const iconColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgList = useColorModeValue(\"white\", \"whiteAlpha.100\");\n  const bgShadow = useColorModeValue(\n    \"14px 17px 40px 4px rgba(112, 144, 176, 0.08)\",\n    \"unset\"\n  );\n  const bgButton = useColorModeValue(\"secondaryGray.400\", \"whiteAlpha.100\");\n  const bgHover = useColorModeValue(\n    { bg: \"secondaryGray.400\" },\n    { bg: \"whiteAlpha.50\" }\n  );\n  const bgFocus = useColorModeValue(\n    { bg: \"secondaryGray.300\" },\n    { bg: \"whiteAlpha.100\" }\n  );\n\n  // Ellipsis modals\n  const {\n    isopen: isOpen1,\n    onOpen: onOpen1,\n    onClose: onClose1,\n  } = useDisclosure();\n\n  return (\n    <Menu isopen={isOpen1} onClose={onClose1} placement=\"auto-start\">\n      <MenuButton\n        align='center'\n        justifyContent='center'\n        _hover={bgHover}\n        _focus={bgFocus}\n        _active={bgFocus}\n        w='37px'\n        h='37px'\n        lineHeight='100%'\n        onClick={onOpen1}\n        borderRadius='10px'\n        {...rest}>\n        <Icon as={MdOutlineMoreHoriz} color={iconColor} w='24px' h='24px' />\n      </MenuButton>\n      <MenuList\n        w='fit-content'\n        minW='unset'\n        maxW='200px !important'\n        backdropFilter='blur(63px)'\n        bg={bgList}\n        boxShadow={bgShadow}\n        borderRadius='10px'\n        p='5px'>\n        {\n          groupVideoMenu.map((item, index) => {\n            if (item?.role?.includes(getCurrRoleUser(profile))) {\n              return (\n                <MenuItem\n                  key={index}\n                  transition='0.2s linear'\n                  my=\"12px\"\n                  color={textColor}\n                  _hover={textHover}\n                  p='0px'\n                  borderRadius='8px'\n                  _active={{\n                    bg: \"transparent\",\n                  }}\n                  _focus={{\n                    bg: \"transparent\",\n                  }}\n                  onClick={() => {\n                    item.action()\n                    setMenuSelected(originalData)\n                  }}\n                  mx=\"15px\">\n                  <Flex align='center'>\n                    <Icon as={item.icons} h='16px' w='16px' mr='8px' />\n                    <Text fontSize='md' color=\"black\" fontWeight='400'>\n                      {\n                        (item?.title === 'Gán User') ? (originalData?.user_obj ? 'Hủy Gán User' : 'Gán User') : (item?.title === 'Gán Reseller') ? (originalData?.reseller_obj ? 'Hủy Gán Reseller' : 'Gán Reseller' ) : item?.title \n                      }\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              )\n            }\n          })\n        }\n      </MenuList>\n    </Menu>\n  );\n}\n","/* eslint-disable */\nimport React, { useState, useCallback } from 'react'\nimport {\n    Button,\n    Icon,\n    useColorModeValue,\n    FormLabel,\n    Input,\n    FormControl,\n    InputGroup,\n    NumberInput,\n    NumberInputField,\n    NumberInputStepper,\n    NumberIncrementStepper,\n    NumberDecrementStepper,\n    Switch,\n    Grid,\n    GridItem,\n    InputLeftAddon\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { setIn, useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\n\nimport {\n    updateAgentServerStream,\n} from '../../../../api/Stream';\nimport { MESSSAGE_STATUS_CODE } from '../../../../variables';\nimport { MdComputer } from 'react-icons/md';\n\nexport default function EditAgentServer(props) {\n    const { dataGeneral, handleFetchResource, onClose } = props;\n\n    const [show, setShow] = useState(false);\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n\n    const initialValues = {\n        name: dataGeneral?.name,\n        url: dataGeneral?.url,\n        max_stream: dataGeneral?.max_stream || 0,\n        status: dataGeneral?.status,\n        expired_at: dataGeneral?.expired_at && dataGeneral?.expired_at.split(\" \")[0],\n        description: dataGeneral?.description\n    }\n    const { t } = useTranslation();\n\n    const validateSchema = Yup.object().shape({\n        name: Yup.string().required(t('content.required_field')),\n        description: Yup.string().required(t('content.required_field')),\n        url: Yup.string().required(t('content.required_field')),\n        expired_at: Yup.date().required(t('content.required_field')),\n        max_stream: Yup.number().required(t('content.required_field')),\n        status: Yup.boolean().required(t('content.required_field'))\n    });\n\n    const handleOnSubmitFormEdit = async (values, { resetForm }) => {\n        try {\n            let { expired_at, ...rest } = values;\n            rest.expired_at = expired_at + \" 00:00:00\";\n\n            const responseEdit = await updateAgentServerStream({ ...rest, id: dataGeneral.id });\n            if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                await handleFetchResource({});\n                resetForm();\n                onClose();\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmitFormEdit,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card  align='center'>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Tên server:\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftAddon children={<Icon as={MdComputer} color=\"gray\" w='20px' fontSize='sm'\n                            size='lg'/>} />\n                        <Input\n                            name=\"name\"\n                            value={formik.values.name}\n                            onChange={(e) => setInputValue(\"name\", e.target.value)}\n                            isRequired={true}\n                            fontSize='sm'\n                        />\n                    </InputGroup>\n                    {formik.errors.name && formik.touched.name && (\n                        <p className=\"text-error\">{formik.errors.name}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Mô tả:\n                    </FormLabel>\n                    <Input\n                        name=\"description\"\n                        value={formik.values.description}\n                        onChange={(e) => setInputValue(\"description\", e.target.value)}\n                        isRequired={true}\n                        fontSize='sm'\n                        size='lg'\n                    />\n                    {formik.errors.description && formik.touched.description && (\n                        <p className=\"text-error\">{formik.errors.description}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"20px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        URL:\n                    </FormLabel>\n                    <Input\n                        name=\"url\"\n                        value={formik.values.url}\n                        onChange={(e) => setInputValue(\"url\", e.target.value)}\n                        isRequired={true}\n                        fontSize='sm'\n                        size='lg'\n                    />\n                    {formik.errors.url && formik.touched.url && (\n                        <p className=\"text-error\">{formik.errors.url}</p>\n                    )}\n                </FormControl>\n                <Grid\n                    mb=\"25px\"\n                    templateRows='repeat(1, 1fr)'\n                    templateColumns='repeat(3, 1fr)'\n                    gap={4}>\n                    <GridItem colSpan={1}>\n                        <FormControl as={GridItem} colSpan={[6, 3]} align=\"left\">\n                            <FormLabel\n                                fontSize=\"sm\"\n                                fontWeight=\"md\"\n                                color=\"gray.700\"\n                                _dark={{\n                                    color: 'gray.50',\n                                }}>\n                                Hết hạn:\n                            </FormLabel>\n                            <Input\n                                placeholder=\"Select Date and Time\"\n                                value={formik.values.expired_at}\n                                _placeholder={{ color: \"gray.400\" }}\n                                onChange={(e) => setInputValue(\"expired_at\", e.target.value)}\n                                size=\"md\"\n                                type=\"date\"\n                            />\n                            {formik.errors.expired_at && formik.touched.expired_at && (\n                                <p className=\"text-error\">{formik.errors.expired_at}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={1}>\n                        <FormControl align=\"right\">\n                            <FormLabel\n                                ms='4px'\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Luồng tối đa:\n                            </FormLabel>\n                            <NumberInput\n                                min={1} max={200}\n                                size=\"md\"\n                                clampValueOnBlur={false}\n                                value={formik.values.max_stream}\n                                onChange={(e) => setInputValue(\"max_stream\", Number(e))}\n                                variant=\"outline\">\n                                <NumberInputField />\n                                <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                </NumberInputStepper>\n                            </NumberInput>\n                            {formik.errors.max_stream && formik.touched.max_stream && (\n                                <p className=\"text-error\">{formik.errors.max_stream}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={1}>\n                        <FormControl>\n                            <FormLabel\n                                ms='4px'\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Trạng thái:\n                            </FormLabel>\n                            <Switch\n                                isChecked={formik.values.status}\n                                size={\"md\"}\n                                pt=\"10px\"\n                                onChange={(e) => setInputValue(\"status\", e.target.checked)}\n                            />\n                            {formik.errors.status && formik.touched.status && (\n                                <p className=\"text-error\">{formik.errors.status}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                </Grid>\n                <Button\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    type=\"submit\"\n                    fontWeight='500'>\n                    Cập nhật\n                </Button>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\nimport {\n    Text,\n    useColorModeValue,\n    Button,\n    Icon,\n    FormControl,\n    Grid,\n    Flex,\n    GridItem,\n} from \"@chakra-ui/react\";\nimport { useAuth } from \"../../../../contexts/authenContext\";\n\nimport React from \"react\"\nimport { IoAddCircleOutline } from \"react-icons/io5\";\nimport { getCurrRoleUser } from \"../../../../utils/handleValidate\";\nimport { ROLE_USER } from \"../../../../variables\";\nimport { MdFilterList } from \"react-icons/md\";\n\nexport default function FilterHeader(props) {\n    const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\n    const { profile } = useAuth();\n\n    const {\n        title,\n        onModalCreate,\n        handleOpenFilterModal\n    } = props;\n\n    const isAdmin = [ROLE_USER.ADMIN].includes(getCurrRoleUser(profile));\n\n    return (\n        <Grid\n            templateRows='repeat(1, 1fr)'\n            templateColumns='repeat(8, 1fr)'\n            gap={0}\n            px={4}\n        >\n            <GridItem colSpan={6} margin=\"auto 0\">\n                <FormControl>\n                    <Text\n                        color={textColor}\n                        fontSize='lg'\n                        fontWeight='700'\n                        mb=\"5px\"\n                        lineHeight='100%'>\n                        {title}\n                    </Text>\n                </FormControl>\n            </GridItem>\n\n            <GridItem colSpan={2} display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\n                <Flex gap={4}>\n                    {isAdmin && (\n                        <Button\n                            _hover={{ bg: \"gray.100\" }}\n                            size=\"md\"\n                            variant='outline'\n                            borderRadius='10px'\n                            px='10px'\n                            w=\"fit-content\"\n                            onClick={onModalCreate}\n                            py='20px'\n                            aria-label=\"Add Server\"\n                            mr={0}\n                        >\n                            <Icon\n                                transition='0.2s linear'\n                                w='28px'\n                                h='28px'\n                                pr='10px'\n                                as={IoAddCircleOutline}\n                                color={\"black\"}\n                            />\n                            Thêm server\n                        </Button>\n                    )}\n                    <Button \n                        _hover={{ bg: \"gray.100\" }}\n                        size=\"md\"\n                        variant='outline' \n                        borderRadius='5px'\n                        px='10px'\n                        w=\"fit-content\"\n                        py='20px'\n                        onClick={handleOpenFilterModal}\n                        aria-label=\"Open Filter Modal\"\n                        ml={0}\n                    >\n                        <Icon\n                            transition='0.2s linear'\n                            w='32px'\n                            h='32px'\n                            pr='10px'\n                            as={MdFilterList}\n                            color={\"black\"}\n                        />\n                        Bộ lọc\n                    </Button>\n                </Flex>\n            </GridItem>\n        </Grid>\n    );\n}\n","/* eslint-disable */\nimport React, { useState, useCallback } from 'react'\nimport {\n    Button,\n    Icon,\n    useColorModeValue,\n    FormLabel,\n    Input,\n    FormControl,\n    InputGroup,\n    NumberInput,\n    NumberInputField,\n    NumberInputStepper,\n    NumberIncrementStepper,\n    NumberDecrementStepper,\n    Switch,\n    Grid,\n    GridItem,\n    InputLeftAddon\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\n\nimport {\n    truncate\n} from '../../../../utils/handleValidate';\n\nimport {\n    createNewAgentServerStream\n} from '../../../../api/Stream';\nimport { MESSSAGE_STATUS_CODE } from '../../../../variables';\nimport { MdComputer } from 'react-icons/md';\n\nexport default function CreateAgentServer(props) {\n    const { dataGeneral, handleFetchResource, onClose } = props;\n\n    const [loading, setLoading] = useState(false);\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n\n    const initialValues = {\n        name: \"\",\n        description: \"\",\n        url: \"\",\n        max_stream: 0,\n        expired_at: \"\",\n        status: false,\n    }\n    const { t } = useTranslation();\n\n    const validateSchema = Yup.object().shape({\n        name: Yup.string().required(t('content.required_field')),\n        description: Yup.string().required(t('content.required_field')),\n        url: Yup.string().required(t('content.required_field')),\n        max_stream: Yup.number().required(t('content.required_field')),\n        expired_at: Yup.date().required(t('content.required_field')),\n        status: Yup.boolean().required(t('content.required_field'))\n    });\n\n    const handleOnSubmitFormEdit = async (values, { resetForm }) => {\n        setLoading(true);\n        try {\n            let { expired_at, ...rest } = values;\n            rest.expired_at = expired_at + \" 00:00:00\";\n\n            const responseEdit = await createNewAgentServerStream({ ...rest });\n            if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                await handleFetchResource({});\n                resetForm();\n                onClose();\n            }\n            setLoading(false);\n        } catch (err) {\n            setLoading(false);\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmitFormEdit,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card  align='center'>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Tên server:\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftAddon children={<Icon as={MdComputer} color=\"gray\" w='20px' fontSize='sm'\n                            size='lg'/>} />\n                        <Input\n                            name=\"name\"\n                            value={formik.values.name}\n                            onChange={(e) => setInputValue(\"name\", e.target.value)}\n                            isRequired={true}\n                            fontSize='sm'\n                        />\n                    </InputGroup>\n                    {formik.errors.name && formik.touched.name && (\n                        <p className=\"text-error\">{formik.errors.name}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Mô tả:\n                    </FormLabel>\n                    <Input\n                        name=\"description\"\n                        value={truncate(formik.values.description)}\n                        onChange={(e) => setInputValue(\"description\", e.target.value)}\n                        isRequired={true}\n                        fontSize='sm'\n                        size='lg'\n                    />\n                    {formik.errors.description && formik.touched.description && (\n                        <p className=\"text-error\">{formik.errors.description}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"20px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        URL:\n                    </FormLabel>\n                    <Input\n                        name=\"url\"\n                        value={formik.values.url}\n                        placeholder='http:// hoặc https://'\n                        onChange={(e) => setInputValue(\"url\", e.target.value)}\n                        isRequired={true}\n                        fontSize='sm'\n                        size='lg'\n                    />\n                    {formik.errors.url && formik.touched.url && (\n                        <p className=\"text-error\">{formik.errors.url}</p>\n                    )}\n                </FormControl>\n                <Grid\n                    mb=\"25px\"\n                    templateRows='repeat(1, 1fr)'\n                    templateColumns='repeat(3, 1fr)'\n                    gap={4}>\n                    <GridItem colSpan={1}>\n                        <FormControl as={GridItem} colSpan={[6, 3]} align=\"left\">\n                            <FormLabel\n                                fontSize=\"sm\"\n                                fontWeight=\"md\"\n                                color=\"gray.700\"\n                                _dark={{\n                                    color: 'gray.50',\n                                }}>\n                                Hết hạn:\n                            </FormLabel>\n                            <Input\n                                placeholder=\"Select Date and Time\"\n                                value={formik.values.expired_at}\n                                _placeholder={{ color: \"gray.400\" }}\n                                onChange={(e) => setInputValue(\"expired_at\", e.target.value)}\n                                size=\"md\"\n                                type=\"date\"\n                            />\n                            {formik.errors.expired_at && formik.touched.expired_at && (\n                                <p className=\"text-error\">{formik.errors.expired_at}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={1}>\n                        <FormControl align=\"right\">\n                            <FormLabel\n                                ms='4px'\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Luồng tối đa:\n                            </FormLabel>\n                            <NumberInput\n                                min={1} max={200}\n                                size=\"md\"\n                                clampValueOnBlur={false}\n                                value={formik.values.max_stream}\n                                onChange={(e) => setInputValue(\"max_stream\", Number(e))}\n                                variant=\"outline\">\n                                <NumberInputField />\n                                <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                </NumberInputStepper>\n                            </NumberInput>\n                            {formik.errors.max_stream && formik.touched.max_stream && (\n                                <p className=\"text-error\">{formik.errors.max_stream}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={1}>\n                        <FormControl>\n                            <FormLabel\n                                ms='4px'\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Trạng thái:\n                            </FormLabel>\n                            <Switch\n                                isChecked={formik.values.status}\n                                size=\"lg\"\n                                pt=\"10px\"\n                                onChange={(e) => setInputValue(\"status\", e.target.checked)}\n                            />\n                            {formik.errors.status && formik.touched.status && (\n                                <p className=\"text-error\">{formik.errors.status}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                </Grid>\n                <Button\n                    isLoading={loading}\n                    loadingText='Chờ chút'\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    type=\"submit\"\n                    fontWeight='500'>\n                    Cập nhật\n                </Button>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\nimport React, { useState, useCallback } from 'react'\nimport {\n    Icon,\n    useColorModeValue,\n    FormLabel,\n    Input,\n    FormControl,\n    InputGroup,\n    NumberInput,\n    NumberInputField,\n    NumberInputStepper,\n    NumberIncrementStepper,\n    NumberDecrementStepper,\n    Switch,\n    Grid,\n    GridItem,\n    InputLeftAddon\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport Card from \"../../../../components/card/Card\";\nimport { MdComputer } from 'react-icons/md';\n\nexport default function DetailAgentServer(props) {\n    const { dataGeneral, handleFetchResource, onClose } = props;\n\n    const [show, setShow] = useState(false);\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n\n    const initialValues = {\n        name: dataGeneral?.name,\n        description: dataGeneral?.description,\n        url: dataGeneral?.url,\n        max_stream: dataGeneral?.max_stream || 0,\n        expired_at: dataGeneral?.expired_at && dataGeneral?.expired_at?.split(\" \")[0],\n        status: dataGeneral?.status,\n    }\n    const { t } = useTranslation();\n\n    const validateSchema = Yup.object().shape({\n        name: Yup.string().required(t('content.required_field')),\n        description: Yup.string().required(t('content.required_field')),\n        url: Yup.string().required(t('content.required_field')),\n        max_stream: Yup.number().required(t('content.required_field')),\n        expired_at: Yup.date().required(t('content.required_field')),\n        status: Yup.boolean().required(t('content.required_field'))\n    });\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card align='center'>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Tên server:\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftAddon children={<Icon as={MdComputer} color=\"gray\" w='20px' fontSize='sm'\n                            size='lg'/>} />\n                        <Input\n                            name=\"name\"\n                            value={formik.values.name}\n                            onChange={(e) => setInputValue(\"name\", e.target.value)}\n                            isRequired={true}\n                            fontSize='sm'\n                        />\n                    </InputGroup>\n                    {formik.errors.name && formik.touched.name && (\n                        <p className=\"text-error\">{formik.errors.name}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Mô tả:\n                    </FormLabel>\n                    <Input\n                        name=\"description\"\n                        value={formik.values.description}\n                        onChange={(e) => setInputValue(\"description\", e.target.value)}\n                        isRequired={true}\n                        readOnly={true}\n                        fontSize='sm'\n                        size='lg'\n                    />\n                    {formik.errors.description && formik.touched.description && (\n                        <p className=\"text-error\">{formik.errors.description}</p>\n                    )}\n                </FormControl>\n                <FormControl mb=\"15px\">\n                    <FormLabel\n                        display='flex'\n                        ms='4px'\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        URL:\n                    </FormLabel>\n                    <Input\n                        name=\"url\"\n                        value={formik.values.url}\n                        onChange={(e) => setInputValue(\"url\", e.target.value)}\n                        isRequired={true}\n                        readOnly={true}\n                        fontSize='sm'\n                        size='lg'\n                    />\n                    {formik.errors.url && formik.touched.url && (\n                        <p className=\"text-error\">{formik.errors.url}</p>\n                    )}\n                </FormControl>\n                <Grid\n                    mb=\"25px\"\n                    templateRows='repeat(1, 1fr)'\n                    templateColumns='repeat(3, 1fr)'\n                    gap={4}>\n                    <GridItem colSpan={1}>\n                        <FormControl as={GridItem} colSpan={[6, 3]} align=\"left\">\n                            <FormLabel\n                                fontSize=\"sm\"\n                                fontWeight=\"md\"\n                                color=\"gray.700\"\n                                _dark={{\n                                    color: 'gray.50',\n                                }}>\n                                Hết hạn:\n                            </FormLabel>\n                            <Input\n                                placeholder=\"Select Date and Time\"\n                                isDisabled={true}\n                                value={formik.values.expired_at}\n                                _placeholder={{ color: \"gray.400\" }}\n                                onChange={(e) => setInputValue(\"expired_at\", e.target.value)}\n                                size=\"md\"\n                                type=\"date\"\n                            />\n                            {formik.errors.expired_at && formik.touched.expired_at && (\n                                <p className=\"text-error\">{formik.errors.expired_at}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={1}>\n                        <FormControl align=\"right\">\n                            <FormLabel\n                                ms='4px'\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Luồng tối đa:\n                            </FormLabel>\n                            <NumberInput\n                                min={1} max={200}\n                                size=\"md\"\n                                clampValueOnBlur={false}\n                                isDisabled={true}\n                                value={formik.values.max_stream}\n                                onChange={(e) => setInputValue(\"max_stream\", Number(e))}\n                                variant=\"outline\">\n                                <NumberInputField />\n                                <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                </NumberInputStepper>\n                            </NumberInput>\n                            {formik.errors.max_stream && formik.touched.max_stream && (\n                                <p className=\"text-error\">{formik.errors.max_stream}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={1}>\n                        <FormControl>\n                            <FormLabel\n                                ms='4px'\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Trạng thái:\n                            </FormLabel>\n                            <Switch\n                                isChecked={formik.values.status}\n                                size={\"md\"}\n                                pt=\"10px\"\n                                onChange={(e) => setInputValue(\"status\", e.target.checked)}\n                            />\n                            {formik.errors.status && formik.touched.status && (\n                                <p className=\"text-error\">{formik.errors.status}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                </Grid>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\nimport React, { useState, useCallback, useEffect } from 'react'\nimport {\n    Button,\n    FormLabel,\n    FormControl,\n    Select\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\n\nimport {\n    assignAgentServerForUser,\n    unAssignAgentServerForUser\n} from '../../../../api/Stream';\n\nimport { MESSSAGE_STATUS_CODE } from '../../../../variables';\nimport { fetchAdminListUser } from '../../../../api/Auth';\n\nexport default function AssignAgentFor(props) {\n    const { dataGeneral, handleFetchResource, onClose } = props;\n\n    const [listAdmin, setListAdmin] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const initialValues = {\n        user_id: dataGeneral?.user_obj?.id,\n    }\n\n    const { t } = useTranslation();\n\n    const validateSchema = Yup.object().shape({\n        user_id: Yup.string().required(t('content.required_field')),\n    });\n\n    const fetchAdminListUserFunc = async () => {\n        try {\n            const responseEdit = await fetchAdminListUser({\n                limit: 1000\n            });\n            if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                setListAdmin(responseEdit.data.data.users.map(item => {\n                    return {\n                        label: item.fullname,\n                        value: item.id\n                    }\n                }));\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    useEffect(() => {\n        fetchAdminListUserFunc();\n    }, []);\n\n    const assignAgentServerForNewUser = async (values, resetForm) => {\n        const responseEdit = await assignAgentServerForUser({ id: dataGeneral.id, ...values});\n        if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n            await handleFetchResource({});\n            resetForm();\n            onClose();\n        }\n    }\n\n    const unassignAgentServerOut = async (values, resetForm) => {\n        const responseEdit = await unAssignAgentServerForUser({ id: dataGeneral.id, user_id: values});\n        if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n            await handleFetchResource({});\n            resetForm();\n            onClose();\n        }\n    }\n\n    const handleOnSubmitFormAssign = async (values, { resetForm }) => {\n        setLoading(true);\n        try {\n            if (!dataGeneral?.user_obj?.id) {\n                // console.log('---- assign user mới ---', { id: dataGeneral.id, ...values});\n                await assignAgentServerForNewUser(values, resetForm);\n            } else if (values.user_id === dataGeneral?.user_obj?.id) {\n                // console.log('---- assign user cũ ---', { id: dataGeneral.id, ...values});\n                await unassignAgentServerOut(dataGeneral?.user_obj?.id, resetForm);\n                // toast.error(`${dataGeneral?.user_obj?.fullname} đã được gán`)\n            } else {\n                console.log('---- thay thế assign user ---', { id: dataGeneral.id, ...values});\n                // await Promise.all(\n                //     await unassignAgentServerOut(dataGeneral?.user_obj?.id),\n                //     await assignAgentServerForNewUser(values, resetForm)\n                // )\n            }\n            setLoading(false)\n        } catch (err) {\n            setLoading(false)\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmitFormAssign,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card mb={{ base: \"0px\", lg: \"20px\" }} px=\"20px\" pb=\"10px\" align='center'>\n                <FormControl align=\"right\" mb=\"20px\">\n                    <FormLabel\n                        fontSize=\"md\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Quản trị viên:\n                    </FormLabel>\n                    <Select\n                        name=\"user_id\"\n                        value={formik.values.user_id}\n                        onChange={(e) => setInputValue(\"user_id\", e.target.value)}\n                        autoComplete=\"user_id\"\n                        placeholder=\"--- Chọn tên ---\"\n                        _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                        _placeholder={{ color: \"gray.400\" }}\n                        focusBorderColor=\"brand.400\"\n                        shadow=\"sm\"\n                        isDisabled={dataGeneral?.user_obj?.id}\n                        size=\"md\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        {listAdmin.map((item, id) => {\n                            return (<option id={item.value} value={item.value}>{item.label}</option>)\n                        })}\n                    </Select>\n                    {formik.errors.user_id && formik.touched.user_id && (\n                        <p className=\"text-error\">{formik.errors.user_id}</p>\n                    )}\n                </FormControl>\n                <Button\n                    isLoading={loading}\n                    loadingText=\"Đang gán\"\n                    _hover={{  bg: \"blue\"  }}\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    type=\"submit\"\n                    fontWeight='500'>\n                    {\n                        dataGeneral?.user_obj?.id ? 'Hủy gán' : 'Gán mới'\n                    }\n                </Button>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\nimport {\n    Grid,\n    GridItem,\n    FormLabel,\n    FormControl,\n    Select,\n} from '@chakra-ui/react';\n\nimport React from \"react\";\nimport { SearchBar } from '../../../../components/searchBar/SearchBar';\n\nexport default function FormFilterCustom(props) {\n    const { onSearch } = props;\n\n    const {\n        filter,\n        handleChangeStateFilter,\n        listOptionServerAgent,\n    } = props;\n\n    return (\n        <Grid\n            templateRows='repeat(1, 1fr)'\n            templateColumns='repeat(1, 1fr)'\n            gap={4}\n        >\n            <GridItem colSpan={1}>\n                <FormControl align=\"right\" mb=\"20px\">\n                    <FormLabel\n                        htmlFor=\"stream_id\"\n                        fontSize=\"xs\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Tìm theo tên, mô tả:\n                    </FormLabel>\n                    <SearchBar\n                        name=\"keyword\"\n                        mb={{ base: '10px', md: 'unset' }}\n                        me=\"10px\" \n                        data={filter.keyword}\n                        onSearch={(value) => onSearch(value)}\n                    />\n                </FormControl>\n                <FormControl align=\"right\" mb=\"20px\">\n                    <FormLabel\n                        htmlFor=\"stream_id\"\n                        fontSize=\"xs\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Sắp xếp:\n                    </FormLabel>\n                    <Select\n                        name=\"order_by\"\n                        value={filter.order_by}\n                        onChange={handleChangeStateFilter}\n                        _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                        focusBorderColor=\"brand.400\"\n                        placeholder=\"Chọn thứ tự\"\n                        shadow=\"sm\"\n                        variant=\"flushed\"\n                        size=\"md\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        {listOptionServerAgent.map((item, id) => {\n                            return (<option id={item.value} value={item.value}>{item.label}</option>)\n                        })}\n                    </Select>\n                </FormControl>\n            </GridItem>\n        </Grid>\n    );\n}\n","/* eslint-disable */\nimport React, { useState, useCallback, useEffect } from 'react'\nimport {\n    Button,\n    FormLabel,\n    FormControl,\n    Select\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\n\n\nimport {\n    assignAgentServerForReseller,\n    unassignAgentServerForReseller,\n} from '../../../../api/Stream';\nimport { MESSSAGE_STATUS_CODE, ROLE_USER } from '../../../../variables';\nimport { fetchAdminListUser } from '../../../../api/Auth';\n\nexport default function AssignResellerFor(props) {\n    const { dataGeneral, handleFetchResource, onClose } = props;\n\n    const [listAdmin, setListAdmin] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const initialValues = {\n        user_id: dataGeneral?.reseller_obj?.id,\n    }\n\n    const { t } = useTranslation();\n\n    const validateSchema = Yup.object().shape({\n        user_id: Yup.string().required(t('content.required_field')),\n    });\n\n    const fetchAdminListUserFunc = async () => {\n        try {\n            const responseEdit = await fetchAdminListUser({\n                limit: 1000,\n                group: ROLE_USER.RESELLER\n            });\n            if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                setListAdmin(responseEdit.data.data.users.map(item => {\n                    return {\n                        label: item.fullname,\n                        value: item.id\n                    }\n                }));\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    useEffect(() => {\n        fetchAdminListUserFunc();\n    }, []);\n\n    const assignAgentServerForNewUser = async (values, resetForm) => {\n        const responseEdit = await assignAgentServerForReseller({ id: dataGeneral.id, ...values});\n        if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n            await handleFetchResource({});\n            resetForm();\n            onClose();\n        }\n    }\n\n    const unassignAgentServerOut = async (values, resetForm) => {\n        const responseEdit = await unassignAgentServerForReseller({ id: dataGeneral.id, user_id: values});\n        if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n            await handleFetchResource({});\n            resetForm();\n            onClose();\n        }\n    }\n\n    const handleOnSubmitFormAssign = async (values, { resetForm }) => {\n        setLoading(true);\n        try {\n            if (!dataGeneral?.reseller_obj?.id) {\n                // console.log('---- assign user mới ---', { id: dataGeneral.id, ...values});\n                await assignAgentServerForNewUser(values, resetForm);\n            } else if (values.user_id === dataGeneral?.reseller_obj?.id) {\n                // console.log('---- assign user cũ ---', { id: dataGeneral.id, ...values});\n                await unassignAgentServerOut(dataGeneral?.reseller_obj?.id, resetForm);\n                // toast.error(`${dataGeneral?.user_obj?.fullname} đã được gán`)\n            } else {\n                console.log('---- thay thế assign user ---', { id: dataGeneral.id, ...values});\n\n            }\n            setLoading(false)\n        } catch (err) {\n            setLoading(false)\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmitFormAssign,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card mb={{ base: \"0px\", lg: \"20px\" }} px=\"20px\" pb=\"10px\" align='center'>\n                <FormControl align=\"right\" mb=\"20px\">\n                    <FormLabel\n                        fontSize=\"md\"\n                        fontWeight=\"md\"\n                        color=\"gray.700\"\n                        _dark={{\n                            color: 'gray.50',\n                        }}>\n                        Reseller:\n                    </FormLabel>\n                    <Select\n                        name=\"user_id\"\n                        value={formik.values.user_id}\n                        onChange={(e) => setInputValue(\"user_id\", e.target.value)}\n                        autoComplete=\"user_id\"\n                        placeholder=\"--- Chọn tên ---\"\n                        _placeholderShown={{ color: 'gray.100', bg: 'gray.100' }}\n                        _placeholder={{ color: \"gray.400\" }}\n                        focusBorderColor=\"brand.400\"\n                        shadow=\"sm\"\n                        isDisabled={dataGeneral?.reseller_obj?.id}\n                        size=\"md\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        {listAdmin.map((item, id) => {\n                            return (<option id={item.value} value={item.value}>{item.label}</option>)\n                        })}\n                    </Select>\n                    {\n                        formik.errors.user_id \n                            && formik.touched.user_id\n                            && <p className=\"text-error\">{formik.errors.user_id}</p>\n                    }\n                </FormControl>\n                <Button\n                    isLoading={loading}\n                    loadingText=\"Đang gán\"\n                    _hover={{  bg: \"blue\"  }}\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    type=\"submit\"\n                    fontWeight='500'>\n                    { dataGeneral?.reseller_obj?.id ? 'Hủy gán' : 'Gán mới' }\n                </Button>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\n// Chakra imports\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Text,\n  Badge,\n  useDisclosure,\n  Switch,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { MdAccessTime } from \"react-icons/md\";\nimport { FiServer } from \"react-icons/fi\";\nimport { RxReset } from \"react-icons/rx\";\n\nimport { MESSSAGE_STATUS_CODE, ROLE_USER, listOptionServerAgent, statusFieldVideo } from \"../../../variables/index\";\nimport { fetchListAgentServerOfUser, fetchListAdminAgentServerStream, resetAdminAgentServerStream, deleteAgentServerStream, resetAgentServerStream } from \"../../../api/Stream/index\";\nimport { checkRoleUser, formatDate, getCurrRoleUser, removeEmpty } from \"../../../utils/handleValidate\";\n\nimport TableEmpty from \"../list-user-livestream/components/TableEmpty\";\nimport TableManageServerLivestream from \"./components/TableManageServerLivestream\";\nimport MenuAgent from \"./components/MenuAgent\";\nimport { useAuth } from \"../../../contexts/authenContext\";\nimport ModalCustomGeneral from \"../../../components/modal/ModalCustomGeneral\";\nimport EditAgentServer from \"./components/EditAgentServer\";\nimport FilterHeader from \"./components/FilterHeader\";\nimport CreateAgentServer from \"./components/CreateAgentServer\";\nimport DetailAgentServer from \"./components/DetailAgentServer\";\nimport AssignAgentFor from \"./components/AssignAgentFor\";\nimport { MdLockReset } from \"react-icons/md\";\nimport { truncate } from \"lodash\";\nimport FormFilterCustom from \"./components/FormFilterCustom\";\nimport AssignResellerFor from \"./components/AssignResellerFor\";\nimport AvatarText from \"../../../components/AvatarText\";\n\nconst initFormFilter = {\n  keyword: '',\n  order_by: null\n};\n\nexport default function ServerLiveStreamAgent() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [tableServerLivestream, setTableServerLivestream] = useState([]);\n  const [paginationData, setPaginationData] = useState({});\n  const [selectedAgentServer, setSelectedAgentServer] = useState({});\n  const [menuSelected, setMenuSelected] = useState();\n\n  const [filter, setFilter] = useState(initFormFilter);\n\n  const { profile } = useAuth();\n\n  const {\n    isOpen: isOpenEditAgentServer,\n    onOpen: onOpenEditAgentServer,\n    onClose: onCloseEditAgentServer\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenNewAgentServer,\n    onOpen: onOpenNewAgentServer,\n    onClose: onCloseNewAgentServer\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenFilterModal,\n    onOpen: onOpenFilterModal,\n    onClose: onCloseFilterModal\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenAssignAgentServer,\n    onOpen: onOpenAssignAgentServer,\n    onClose: onCloseAssignAgentServer\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenAssignAgentResellerServer,\n    onOpen: onOpenAssignAgentResellerServer,\n    onClose: onCloseAssignAgentResellerServer\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenDetailAgentServer,\n    onOpen: onOpenDetailAgentServer,\n    onClose: onCloseDetailAgentServer\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenResetAgent,\n    onOpen: onOpenResetAgent,\n    onClose: onCloseResetAgent\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenDelAgentServer,\n    onOpen: onOpenDelAgentServer,\n    onClose: onCloseDelAgentServer\n  } = useDisclosure();\n\n  const { t } = useTranslation();\n\n  const handleFetchAgentServerOfUser = async (params) => {\n    setIsLoading(true);\n    try {\n      let serverInfo = {}\n      if ([ROLE_USER.ADMIN, ROLE_USER.RESELLER].includes(getCurrRoleUser(profile))) {\n        let filterParams = removeEmpty(filter);\n        if (filterParams['order_by']) {\n            let orderByArr = filterParams['order_by'].split(\" \");\n            filterParams['order'] = orderByArr[0]\n            filterParams['by'] = orderByArr.slice(-1).pop();\n            delete filterParams['order_by'];\n        }\n\n        const responseServerLivestream = await fetchListAdminAgentServerStream({ ...params, ...filterParams });\n        if (responseServerLivestream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n          serverInfo = responseServerLivestream.data.data;\n          setPaginationData(serverInfo.meta);\n          setTableServerLivestream(serverInfo.items);\n        }\n      } else if (getCurrRoleUser(profile) === ROLE_USER.USER_DEFAULT) {\n        const responseServerLivestream = await fetchListAgentServerOfUser(params || {});\n        if (responseServerLivestream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n          serverInfo = responseServerLivestream.data.data;\n          setPaginationData(serverInfo.meta);\n          setTableServerLivestream(serverInfo.items);\n        }\n      }\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      console.log(err);\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  }\n\n  const handleFetchAgentServerOfUserOriginal = async (params) => {\n    setIsLoading(true);\n    try {\n      let serverInfo = {}\n      if ([ROLE_USER.ADMIN, ROLE_USER.RESELLER].includes(getCurrRoleUser(profile))) {\n        const responseServerLivestream = await fetchListAdminAgentServerStream(params || {});\n        if (responseServerLivestream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n          serverInfo = responseServerLivestream.data.data;\n          setPaginationData(serverInfo.meta);\n          setTableServerLivestream(serverInfo.items);\n        }\n      } else if (getCurrRoleUser(profile) === ROLE_USER.USER_DEFAULT) {\n        const responseServerLivestream = await fetchListAgentServerOfUser(params || {});\n        if (responseServerLivestream.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n          serverInfo = responseServerLivestream.data.data;\n          setPaginationData(serverInfo.meta);\n          setTableServerLivestream(serverInfo.items);\n        }\n      }\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      console.log(err);\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  }\n\n  useEffect(() => {\n    handleFetchAgentServerOfUserOriginal({});\n  }, []);\n\n  const columnsServerAgent = [\n    {\n      Header: \"Tên\",\n      accessor: \"name\",\n      role: [ROLE_USER.USER_DEFAULT],\n      sticky: \"left\",\n      Cell: ({ value, row }) => {\n        return (\n          <Flex>\n            <FiServer color=\"#80808080\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n            <Text fontSize=\"sm\" fontWeight={\"bold\"} color={\"black\"}>\n              {value && truncate(value)}\n            </Text>\n          </Flex>\n        )\n      }\n    },\n    {\n      Header: \"Mô tả\",\n      accessor: \"description\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <>\n            {\n              value ? (\n                <Text\n                  colorScheme=\"black\" \n                  fontSize={{ base: \"sm\", }}\n                  me='8px'>{value && truncate(value)}\n                </Text>\n              ) : \"...\"\n            }\n          </>\n        )\n      }\n    },\n    {\n      Header: \"Phụ trách\",\n      accessor: \"\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <Flex style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n            {\n              row?.original?.user_obj ? (\n                <>\n                  <AvatarText name={row?.original.user_obj?.fullname} inputSize=\"md\" />\n                  <Text\n                    colorScheme=\"black\" \n                    fontWeight={\"500\"}\n                    fontSize={{ base: \"sm\", }}\n                    me='8px'>{row?.original.user_obj?.fullname && truncate(row?.original.user_obj?.fullname)}\n                  </Text>\n                </>\n              ) : \"...\"\n            }\n          </Flex>\n        )\n      }\n    },\n    {\n      Header: \"Reseller\",\n      accessor: \"\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <Flex style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n            {\n              row?.original?.reseller_obj ? (\n                <>\n                  <AvatarText name={row?.original?.reseller_obj?.fullname} inputSize=\"md\" />\n                  <Text\n                    colorScheme=\"black\" \n                    fontWeight={\"500\"}\n                    fontSize={{ base: \"sm\", }}\n                    me='8px'\n                  >\n                      {row?.original?.reseller_obj?.fullname && truncate(row?.original?.reseller_obj?.fullname)}\n                  </Text>\n                </>\n              ) : \"...\"\n            }\n          </Flex>\n        )\n      }\n    },\n    {\n      Header: \"Tối đa\",\n      accessor: \"max_stream\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <Text\n            textColor=\"blue.700\"\n            fontWeight={\"900\"}\n            fontSize={{ base: \"sm\", }}\n            me='8px'>\n            {\n              value !== 0 ? (\n                <Badge color=\"white\" bg='blackAlpha.600'>\n                    {value}\n                </Badge>\n              ) : <>{value}</>\n            }\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Đang chờ\",\n      accessor: \"\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        let temp = row?.original?.statuses?.find(item => item.status === 0)?.total;\n        return (\n          <Text\n            textColor=\"blue.700\"\n            fontWeight={\"900\"}\n            fontSize={{ base: \"sm\", }}\n            me='8px'>\n            {\n              temp !== 0 ? (\n                <Badge bg='gray.200'>\n                    {temp}\n                </Badge>\n              ) : <span style={{ color: '#80808080' }}>{temp}</span>\n            }\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Đang phát\",\n      accessor: \"\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        let temp = row?.original?.statuses?.find(item => item.status === 1)?.total;\n        return (\n          <Text\n            textColor=\"blue.700\"\n            fontWeight={\"900\"}\n            fontSize={{ base: \"sm\", }}\n            me='8px'>\n            {\n              temp !== 0 ? (\n                <Badge colorScheme='green'>\n                    {temp}\n                </Badge>\n              ) : <span style={{ color: '#80808080' }}>{temp}</span>\n            }\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Hoàn thành\",\n      accessor: \"\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        let temp = row?.original?.statuses?.find(item => item.status === 2)?.total;\n        return (\n          <Text\n            textColor=\"blue.700\"\n            fontWeight={\"900\"}\n            fontSize={{ base: \"sm\", }}\n            me='8px'>\n            {\n              temp !== 0 ? (\n                <Badge colorScheme='blue'>\n                    {temp}\n                </Badge>\n              ) : <span style={{ color: '#80808080' }}>{temp}</span>\n            }\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Đã hủy\",\n      accessor: \"\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        let temp = row?.original?.statuses?.find(item => item.status === 3)?.total;\n        return (\n          <Text\n            textColor=\"blue.700\"\n            fontWeight={\"900\"}\n            fontSize={{ base: \"sm\", }}\n            me='8px'>\n            {\n              temp !== 0 ? (\n                <Badge colorScheme='orange'>\n                    {temp}\n                </Badge>\n              ) : <span style={{ color: '#80808080' }}>{temp}</span>\n            }\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Lỗi\",\n      accessor: \"\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        let temp = row?.original?.statuses?.find(item => item.status === 4)?.total;\n        return (\n          <Text\n            textColor=\"blue.700\"\n            fontWeight={\"900\"}\n            fontSize={{ base: \"sm\", }}\n            me='8px'>\n            {\n              temp !== 0 ? (\n                <Badge colorScheme='red' >\n                    {temp}\n                </Badge>\n              ) : <span style={{ color: '#80808080' }}>{temp}</span>\n            }\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Hết hạn\",\n      accessor: \"\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        let temp = row?.original?.statuses?.find(item => item?.status === 5)?.total;\n        return (\n          <Text\n            textColor=\"blue.700\"\n            fontWeight={\"900\"}\n            fontSize={{ base: \"sm\" }}\n            me='8px'>\n            {\n              temp !== 0 ? (\n                <Badge colorScheme='green'>\n                    {temp}\n                </Badge>\n              ) : <span style={{ color: '#80808080' }}>{temp}</span>\n            }\n          </Text>\n        )\n      }\n    },\n  ];\n\n  const columnAction = [\n    {\n      Header: \"Hành động\",\n      accessor: \"\",\n      role: [ROLE_USER.ADMIN, ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <MenuAgent\n            originalData={row?.original}\n            setMenuSelected={setMenuSelected}\n            detailAgentServer={() => {\n              detailAgentServer(row?.original)\n            }}\n            assignAgentFor={() => {\n              assignAgentFor(row?.original)\n            }}\n            assignAgentResellerFor={() => {\n              assignAgentResellerFor(row?.original)\n            }}\n            editAgentServer={() => {\n              editAgentServer(row?.original)\n            }}\n            delAgentServer={() => {\n              delAgentServer(row?.original)\n            }}\n            resetAgent={() => {\n              resetAgent(row?.original)\n            }}\n          />\n        )\n      }\n    }\n  ]\n\n  const columnsAdminServerAgent = [...columnsServerAgent,\n    {\n      Header: \"Ngày hết hạn\",\n      accessor: \"\",\n      Cell: ({ value, row }) =>  {\n        return (\n          <Text fontSize={\"sm\"} fontWeight=\"bold\" style={{ display: 'flex', alignContent: 'center', alignItems: 'center', color:'#80808080' }}>\n            <MdAccessTime color=\"#80808080\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n            {row?.original?.expired_at ? formatDate(row?.original?.expired_at) : \"...\"}\n          </Text>\n        )\n      }\n    }, \n    {\n      Header: \"Trạng thái\",\n      accessor: \"status\",\n      role: [ROLE_USER.ADMIN, ROLE_USER.RESELLER],\n      Cell: ({ value, row }) => {\n        return (\n          <Switch\n            isChecked={value}\n            size={\"lg\"}\n            pt=\"10px\"\n            readOnly\n          />\n        )\n      }\n    }\n  ];\n\n  const handleConfirmFilter = async () => {\n    try {\n        await handleFetchAgentServerOfUser();\n        onCloseFilterModal();\n    } catch (err) {\n        if (err.response) {\n            toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n        onCloseFilterModal();\n    }\n  }\n\n  const handleResetFilter = async () => {\n    try {\n        setFilter(prevState => ({ ...prevState, 'keyword': '' }));\n        setFilter(prevState => ({ ...prevState, 'order_by': null }));\n\n\n        await handleFetchAgentServerOfUserOriginal();\n        onCloseFilterModal();\n\n    } catch (err) {\n        if (err.response) {\n            toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n        onCloseFilterModal();\n    }\n  }\n\n  const onSearchServer = (value) => {\n    setFilter(prevState => ({ ...prevState, keyword: value }));\n  }\n\n  const handleChangeStateFilter = (e) => {\n    const { name, value } = e.target;\n    setFilter(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleOpenFilterModal = () => {\n    onOpenFilterModal();\n  }\n\n  const handleOpenModalCreateAgent = () => {\n    onOpenNewAgentServer();\n  }\n\n  const detailAgentServer = (item) => {\n    setSelectedAgentServer(item);\n    onOpenDetailAgentServer();\n  }\n  \n  const assignAgentFor = (item) => {\n    setSelectedAgentServer(item);\n    onOpenAssignAgentServer();\n  }\n\n  const assignAgentResellerFor = (item) => {\n    setSelectedAgentServer(item);\n    onOpenAssignAgentResellerServer();\n  }\n\n  const editAgentServer = (item) => {\n    setSelectedAgentServer(item);\n    onOpenEditAgentServer();\n  }\n\n  const resetAgent = (item) => {\n    setSelectedAgentServer(item);\n    onOpenResetAgent();\n  }\n  \n  const delAgentServer = (item) => {\n    setSelectedAgentServer(item);\n    onOpenDelAgentServer();\n  }\n\n  const handleConfirmDelAgent = async () => {\n    try {\n        const responseConfirmReset = await deleteAgentServerStream({id: menuSelected.id});\n        if (responseConfirmReset.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n            onCloseDelAgentServer();\n\n            window.location.reload();\n            await handleFetchAgentServerOfUserOriginal();\n        }\n    } catch (err) {\n        if (err.response) {\n            toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n        onCloseDelAgentServer();\n    }\n  }\n\n  const handleConfirmResetAgent = async () => {\n    try {\n      if (checkRoleUser(profile, ROLE_USER.ADMIN) || checkRoleUser(profile, ROLE_USER.RESELLER)) {\n        const responseConfirmReset = await resetAdminAgentServerStream({ id: menuSelected.id });\n        if (responseConfirmReset?.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n            onCloseResetAgent();\n            _sleep(500);\n            window.location.reload();\n            await handleFetchAgentServerOfUserOriginal();\n        }\n      } else if (checkRoleUser(profile, ROLE_USER.USER_DEFAULT)) {\n        const responseConfirmReset = await resetAgentServerStream({ id: menuSelected.id });\n        if (responseConfirmReset?.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n            onCloseResetAgent();\n            _sleep(500);\n            window.location.reload();\n            await handleFetchAgentServerOfUserOriginal();\n        }\n      }\n    } catch (err) {\n        if (err.response) {\n            toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n        onCloseResetAgent();\n    }\n  }\n\n  return (\n    <Box pt={{ base: \"130px\", md: \"80px\", xl: \"80px\" }}>\n      <ModalCustomGeneral\n        size={\"lg\"}\n        isOpen={isOpenNewAgentServer}\n        onClose={onCloseNewAgentServer}\n        title=\"Tạo mới Server\"\n        content={\n          <CreateAgentServer\n            dataGeneral={selectedAgentServer}\n            handleFetchResource={handleFetchAgentServerOfUserOriginal}\n            onClose={onCloseNewAgentServer}\n          />\n        }\n      />\n      <ModalCustomGeneral\n        size={\"lg\"}\n        isOpen={isOpenDetailAgentServer}\n        onClose={onCloseDetailAgentServer}\n        title=\"Chi tiết Server\"\n        content={\n          <DetailAgentServer\n            dataGeneral={selectedAgentServer}\n            handleFetchResource={handleFetchAgentServerOfUserOriginal}\n            onClose={onCloseDetailAgentServer}\n          />\n        }\n      />\n      <ModalCustomGeneral\n        size={\"lg\"}\n        isOpen={isOpenEditAgentServer}\n        onClose={onCloseEditAgentServer}\n        title=\"Chỉnh sửa Server Livestream\"\n        content={\n          <EditAgentServer\n            dataGeneral={selectedAgentServer}\n            handleFetchResource={handleFetchAgentServerOfUserOriginal}\n            onClose={onCloseEditAgentServer}\n          />\n        }\n      />\n      <ModalCustomGeneral\n        size={\"lg\"}\n        isOpen={isOpenAssignAgentServer}\n        onClose={onCloseAssignAgentServer}\n        title=\"Gán người dùng\"\n        content={\n          <AssignAgentFor\n            dataGeneral={selectedAgentServer}\n            handleFetchResource={handleFetchAgentServerOfUserOriginal}\n            onClose={onCloseAssignAgentServer}\n          />\n        }\n      />\n      <ModalCustomGeneral\n        size={\"lg\"}\n        isOpen={isOpenAssignAgentResellerServer}\n        onClose={onCloseAssignAgentResellerServer}\n        title=\"Gán Reseller\"\n        content={\n          <AssignResellerFor\n            dataGeneral={selectedAgentServer}\n            handleFetchResource={handleFetchAgentServerOfUserOriginal}\n            onClose={onCloseAssignAgentResellerServer}\n          />\n        }\n      />\n      <ModalCustomGeneral\n        size=\"xl\"\n        isOpen={isOpenResetAgent}\n        onClose={onCloseResetAgent}\n        title=\"Khởi động lại server\"\n        content=\"Server và các luồng livestream sẽ khởi động lại. Tiếp tục ?\"\n        footer={true}\n        handleConfirm={handleConfirmResetAgent}\n      />\n      <ModalCustomGeneral\n        size=\"xl\"\n        isOpen={isOpenDelAgentServer}\n        onClose={onCloseDelAgentServer}\n        title=\"Xóa server\"\n        content=\"Xóa toàn bộ thông tin server. Tiếp tục ?\"\n        footer={true}\n        handleConfirm={handleConfirmDelAgent}\n      />\n      <ModalCustomGeneral\n        size=\"md\"\n        isOpen={isOpenFilterModal}\n        onClose={onCloseFilterModal}\n        title=\"Bộ lọc tìm kiếm\"\n        content={\n          <FormFilterCustom\n            filter={filter}\n            onSearch={onSearchServer}\n            handleChangeStateFilter={handleChangeStateFilter}\n            listOptionServerAgent={listOptionServerAgent}\n            statusFieldVideo={statusFieldVideo}\n            setFilter={setFilter}\n          />\n        }\n        handleConfirm={handleConfirmFilter}\n        footer={true}\n        addButton={\n          <Button rightIcon={<RxReset fontSize=\"md\" />} \n              colorScheme='blue' variant='ghost' \n              size=\"md\" borderRadius=\"5px\" mr=\"5px\"\n              fontWeight=\"500\"\n              onClick={handleResetFilter}\n              _hover={{\n                  bg: \"#e2e8f0\"\n              }}>\n              Reset bộ lọc\n          </Button>\n        }\n      />\n      {\n        tableServerLivestream.length === 0 ? (\n          <TableEmpty\n            columnsData={columnsServerAgent}\n            filterHeader={\n              <FilterHeader\n                title=\"Danh sách Server Livestream\"\n                onModalCreate={handleOpenModalCreateAgent}\n                handleOpenFilterModal={handleOpenFilterModal}\n              />\n            }\n            tableData={[]}\n          />\n        ) : (\n          <TableManageServerLivestream\n            paginationData={paginationData}\n            filterHeader={\n              <FilterHeader\n                title=\"Danh sách Server Livestream\"\n                onModalCreate={handleOpenModalCreateAgent}\n                handleOpenFilterModal={handleOpenFilterModal}\n              />\n            }\n            columnsData={\n              (checkRoleUser(profile, ROLE_USER.ADMIN) || checkRoleUser(profile, ROLE_USER.RESELLER))\n                ? [...columnsAdminServerAgent, ...columnAction]\n                : [...columnsServerAgent, ...columnAction]\n            }\n            tableData={tableServerLivestream || []}\n            handleFetchResource={handleFetchAgentServerOfUserOriginal}\n          />\n        )\n      }\n    </Box>\n  );\n}","/* eslint-disable */\n// Chakra imports\nimport React from \"react\";\nimport { Box, Flex, Icon, Text } from \"@chakra-ui/react\";\nimport PropTypes from \"prop-types\";\nimport FixedPlugin from \"../../components/fixedPlugin/FixedPlugin\";\n// Custom components\n\nfunction BlankIllustration(props) {\n  const { children, illustrationBackground } = props;\n  // Chakra color mode\n  return (\n    <Flex position='relative' h='max-content'>\n      <Flex\n        h={{\n          sm: \"initial\",\n          md: \"unset\",\n          lg: \"100vh\",\n          xl: \"97vh\",\n        }}\n        w='100%'\n        maxW={{ md: \"66%\", lg: \"1313px\" }}\n        mx='auto'\n        pt={{ sm: \"50px\", md: \"0px\" }}\n        px={{ lg: \"30px\", xl: \"0px\" }}\n        ps={{ xl: \"70px\" }}\n        justifyContent='flex-start'\n        direction='column'>\n        {children}\n        <Box\n          display={{ base: \"none\", md: \"block\" }}\n          h='100%'\n          minH='100vh'\n          w={{ lg: \"40vw\", \"2xl\": \"34vw\" }}\n          position='absolute'\n          left='0px'>\n          <Flex\n            bg={`url(${illustrationBackground})`}\n            justify='center'\n            align='end'\n            w='100%'\n            h='100%'\n            bgSize='cover'\n            bgPosition='50%'\n            position='absolute'\n            borderBottomRightRadius={{ lg: \"120px\", xl: \"200px\" }}></Flex>\n        </Box>\n      </Flex>\n      <FixedPlugin />\n    </Flex>\n  );\n}\n// PROPS\n\nBlankIllustration.propTypes = {\n  illustrationBackground: PropTypes.string,\n  image: PropTypes.any,\n};\n\nexport default BlankIllustration;\n","/* eslint-disable */\nimport {\n    Flex,\n    Table,\n    Checkbox,\n    Tbody,\n    Td,\n    Text,\n    Th,\n    Thead,\n    Tr,\n    useColorModeValue,\n    Badge,\n    SimpleGrid,\n    Button,\n    Icon,\n    FormControl,\n    Spinner,\n    Grid,\n    GridItem,\n    Avatar,\n    AvatarGroup,\n    FormLabel,\n    Select\n} from \"@chakra-ui/react\";\n\nimport React from \"react\"\nimport { IoAddCircleOutline } from \"react-icons/io5\";\n\nexport default function FilterHeader(props) {\n    const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\n\n    const {\n        title,\n        onModalCreate\n    } = props;\n\n    return (\n        <Grid\n            templateRows='repeat(1, 1fr)'\n            templateColumns='repeat(8, 1fr)'\n            gap={4}\n        >\n            <GridItem colSpan={6} margin=\"auto 0\">\n                <FormControl>\n                    <Text\n                        color={textColor}\n                        fontSize='lg'\n                        fontWeight='700'\n                        mb=\"5px\"\n                        ml=\"20px\"\n                        lineHeight='100%'>\n                        {title}\n                    </Text>\n                </FormControl>\n            </GridItem>\n            <GridItem colSpan={2} align=\"right\" mr=\"20px\">\n                <FormControl>\n                    <Button\n                        _hover={{ bg: \"gray.100\" }}\n                        size=\"md\"\n                        variant='outline'\n                        borderRadius='10px'\n                        px='10px'\n                        w=\"fit-content\"\n                        onClick={() => onModalCreate()}\n                        py='20px'>\n                        <Icon\n                            transition='0.2s linear'\n                            w='32px'\n                            h='32px'\n                            pr='10px'\n                            as={IoAddCircleOutline}\n                            color={\"facebook\"}\n                        />\n                        Thêm mới\n                    </Button>\n                </FormControl>\n            </GridItem>\n        </Grid>\n    );\n}\n","/* eslint-disable */\nimport {\n    Flex,\n    Table,\n    Checkbox,\n    Tbody,\n    Td,\n    Text,\n    Th,\n    Thead,\n    Tr,\n    useColorModeValue,\n    FormControl,\n    Image\n  } from \"@chakra-ui/react\";\n  \n  import React, { useEffect, useMemo, useState } from \"react\";\n  \n  import {\n    useGlobalFilter,\n    usePagination,\n    useSortBy,\n    useTable,\n    useBlockLayout\n  } from \"react-table\";\n  \n  // Custom components\n  import Card from \"../../../../components/card/Card\";\n  import Pagination from '../../../../components/paginationCustom/Pagination';\n\n  import emptyBackgroundImage from '../../../../assets/img/empty_bg_2.png';\n\n  export default function TableUserManager(props) {\n    const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\n  \n    const { \n      columnsData,\n      tableData,\n      filterHeader,\n      paginationData,\n      handleFetchResource } = props;\n  \n    const [currentPage, setCurrentPage] = useState(1);\n  \n    const columns = useMemo(() => columnsData, [columnsData]);\n    const data = useMemo(() => tableData, [tableData]);\n  \n    const tableInstance = useTable(\n      {\n        columns,\n        data,\n      },\n      useGlobalFilter,\n      useSortBy,\n      usePagination\n    );\n  \n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      page,\n      prepareRow,\n      initialState,\n      setPageSize\n    } = tableInstance;\n  \n    useEffect(() => {\n      setPageSize(paginationData.per_page)\n    }, []);\n  \n    const handleChangePage = async (page, limit) => {\n      setCurrentPage(page);\n      await handleFetchResource({ page, limit });\n    }\n  \n    const bodyWithoutData = () => {\n      return (\n        <Tr>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n          <Td colSpan={columns?.length} style={{ textAlign: 'center', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n            <Image src={emptyBackgroundImage} alt=\"No Video Stream\" />\n            <Text>Không có dữ liệu</Text>\n          </Td>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n          <Td></Td>\n        </Tr>\n      )\n    };\n  \n    const bodyWithData = () => {\n      return (\n        page.map((row, index) => {\n          prepareRow(row);\n          return (\n            <Tr\n              {...row.getRowProps()}\n            >\n              {row.cells.map((cell, index) => {\n                return (\n                  <Td {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                  </Td>\n                );\n              })}\n            </Tr>\n          );\n        })\n      )\n    }\n  \n    return (\n      <Card\n        direction='column'\n        w='100%'\n        px='0px'>\n        {filterHeader}\n        <Card\n          direction='column'\n          w='100%'\n          px='0px'\n          overflowX={{ base: \"scroll\"}}>\n          <Table \n            {...getTableProps()} \n            className=\"-striped -highlight\" \n            variant='simple' mb='24px'\n          >\n            <Thead bgColor=\"#f5f5f5\">\n              {headerGroups.map((headerGroup, index) => (\n                <Tr \n                  {...headerGroup.getHeaderGroupProps()}\n                  key={index}\n                >\n                  {headerGroup.headers.map((column, index) => (\n                    <Th\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                      pe='10px'\n                      key={index}\n                      borderColor={borderColor}>\n                      <Flex\n                        justify='space-between'\n                        align='center'\n                        fontSize={{ sm: \"10px\", lg: \"12px\" }}\n                        color='black'>\n                        {column.render(\"Header\")}\n                      </Flex>\n                    </Th>\n                  ))}\n                </Tr>\n              ))}\n            </Thead>\n            <Tbody {...getTableBodyProps()}>\n              {data.length == 0 ? bodyWithoutData() : bodyWithData()}\n            </Tbody>\n          </Table>\n        </Card>\n        <Pagination\n          color=\"blue\"\n          typeName=\"gói\"\n          currentPage={currentPage}\n          totalCount={paginationData.total}\n          pageSize={paginationData.per_page}\n          onPageChange={handleChangePage}\n        />\n      </Card>\n    );\n  }\n  ","/* eslint-disable */\nexport const GOOGLE_KEY_MANAGEMENT_ENDPOINT = 'api/v1/admin/google-api/keys';\nexport const UPDATE_GOOGLE_KEY_MANAGEMENT_ENDPOINT = 'api/v1/admin/google-api/keys/id';","/* eslint-disable */\nimport {\n    GOOGLE_KEY_MANAGEMENT_ENDPOINT,\n    UPDATE_GOOGLE_KEY_MANAGEMENT_ENDPOINT\n} from './endpoints';\nimport ApiFactory from '../ApiFactory';\n\nconst GoogleKeyAPI = new ApiFactory({ url: process.env.REACT_APP_API_ENDPOINT });\n\nGoogleKeyAPI.createEntities([\n    { name: GOOGLE_KEY_MANAGEMENT_ENDPOINT},\n    { name: UPDATE_GOOGLE_KEY_MANAGEMENT_ENDPOINT},\n]);\n\nconst fetchListAllGoogleKeyAPI = (params) => GoogleKeyAPI.createBasicCRUDEndpoints({ name: GOOGLE_KEY_MANAGEMENT_ENDPOINT }).get(params);\n const createGoogleKeyAPI = (params) => GoogleKeyAPI.createBasicCRUDEndpoints({ name: GOOGLE_KEY_MANAGEMENT_ENDPOINT }).post(params);\n const detailGoogleKeyAPI = (id) => GoogleKeyAPI.createBasicCRUDEndpoints({ name: GOOGLE_KEY_MANAGEMENT_ENDPOINT }).getOne(id);\n const updateGoogleKeyAPI = (params) => GoogleKeyAPI.createBasicCRUDEndpoints({ name: UPDATE_GOOGLE_KEY_MANAGEMENT_ENDPOINT }).submitPut(params);\n const deleteGoogleKeyAPI = (id) => GoogleKeyAPI.createBasicCRUDEndpoints({ name: GOOGLE_KEY_MANAGEMENT_ENDPOINT }).delete(id);\n\nexport {\n    fetchListAllGoogleKeyAPI,\n    createGoogleKeyAPI,\n    detailGoogleKeyAPI,\n    updateGoogleKeyAPI,\n    deleteGoogleKeyAPI\n}\n","/* eslint-disable */\nimport React, { useState, useCallback, useEffect } from 'react';\nimport {\n    Button,\n    useColorModeValue,\n    FormLabel,\n    Input,\n    FormControl,\n    Switch,\n    Grid,\n    GridItem,\n    InputGroup,\n    InputLeftElement,\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { EmailIcon, LockIcon } from '@chakra-ui/icons';\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\nimport { MESSSAGE_STATUS_CODE } from '../../../../variables';\nimport { createGoogleKeyAPI } from '../../../../api/GoogleKey';\n\nexport default function CreateGoogleKey(props) {\n    const { handleFetchResource, onClose } = props;\n    const [loading, setLoading] = useState(false);\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n    const { t } = useTranslation();\n\n    const initialValues = {\n        email: \"\",\n        key: \"\",\n        status: true\n    };\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string().email(t('content.invalid_email')).required(t('content.required_field')),\n        key: Yup.string().required(t('content.required_field')),\n        status: Yup.bool().required(t('content.required_field')),\n    });\n\n    const handleOnSubmitFormCreate = async (values, { resetForm }) => {\n        setLoading(true);\n        try {\n            const responseNewKey = await createGoogleKeyAPI(values);\n            if (responseNewKey?.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n\n                setLoading(false);\n                resetForm();\n                onClose();\n                await handleFetchResource({});\n            }\n        } catch (err) {\n            setLoading(false);\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit: handleOnSubmitFormCreate,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setFieldValue(key, value);\n        },\n        [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <Card align='left'>\n                <Grid\n                    margin=\"auto 0\"\n                    templateRows='1fr'\n                    templateColumns='repeat(8, 1fr)'\n                    gap={4}\n                    mb={4}>\n                    <GridItem colSpan={6}>\n                        <FormControl mb=\"15px\" isInvalid={formik.errors.email && formik.touched.email}>\n                            <FormLabel\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}\n                                mb='8px'>\n                                Email\n                            </FormLabel>\n                            <InputGroup>\n                                <InputLeftElement pointerEvents=\"none\" style={{ fontSize: '20px', top: '4px' }} children={<EmailIcon color=\"gray.300\" />} />\n                                <Input\n                                    name=\"email\"\n                                    placeholder=\"Nhập vào email\"\n                                    value={formik.values.email}\n                                    onChange={(e) => setInputValue(\"email\", e.target.value)}\n                                    fontSize='sm'\n                                    size='lg'\n                                />\n                            </InputGroup>\n                            {formik.errors.email && formik.touched.email && (\n                                <p className=\"text-error\">{formik.errors.email}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={2}>\n                        <FormControl mb=\"15px\" isInvalid={formik.errors.status && formik.touched.status}>\n                            <FormLabel\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Trạng thái\n                            </FormLabel>\n                            <Switch\n                                isChecked={formik.values.status}\n                                size=\"lg\"\n                                onChange={(e) => setInputValue(\"status\", e.target.checked)}\n                            />\n                            {formik.errors.status && formik.touched.status && (\n                                <p className=\"text-error\">{formik.errors.status}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                </Grid>\n                <FormControl mb=\"15px\" isInvalid={formik.errors.key && formik.touched.key}>\n                    <FormLabel\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Google Key\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftElement pointerEvents=\"none\" style={{ fontSize: '20px', top: '3px' }} children={<LockIcon color=\"gray.300\" />} />\n                        <Input\n                            name=\"key\"\n                            placeholder=\"Nhập vào google key\"\n                            value={formik.values.key}\n                            onChange={(e) => setInputValue(\"key\", e.target.value)}\n                            fontSize='sm'\n                            size='lg'\n                        />\n                    </InputGroup>\n                    {formik.errors.key && formik.touched.key && (\n                        <p className=\"text-error\">{formik.errors.key}</p>\n                    )}\n                </FormControl>\n                <Button\n                    isLoading={loading}\n                    loadingText=\"Đang chờ\"\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    type=\"submit\"\n                    fontWeight='500'>\n                    Xác nhận\n                </Button>\n            </Card>\n        </form>\n    );\n}\n","/* eslint-disable */\nimport React from \"react\";\n\nimport {\n  Icon,\n  Flex,\n  Text,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  useDisclosure,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Assets\nimport {\n  MdOutlineMoreHoriz,\n} from \"react-icons/md\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { LuEye } from \"react-icons/lu\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\n\nexport default function MenuAgent(props) {\n  const {\n    detailGoogleKey,\n    editGoogleKey,\n    deleteGoogleKey,\n    setMenuSelected,\n    originalData,\n    ...rest\n  } = props;\n  \n  const groupVideoMenu = [\n    {\n      title: 'Chi tiết',\n      icons: LuEye,\n      action: detailGoogleKey\n    },\n    {\n      title: 'Chỉnh sửa',\n      icons: FaRegEdit,\n      action: editGoogleKey\n    },\n    {\n      title: 'Xóa',\n      icons: AiOutlineDelete,\n      action: deleteGoogleKey\n    },\n  ]\n\n  const textColor = useColorModeValue(\"secondaryGray.800\", \"white\");\n  const textHover = useColorModeValue(\"secondaryGray.900\", \"secondaryGray.500\");\n  const iconColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgButton = useColorModeValue(\"secondaryGray.400\", \"whiteAlpha.100\");\n  const bgHover = useColorModeValue(\"secondaryGray.400\", \"whiteAlpha.50\");\n  const bgFocus = useColorModeValue(\"secondaryGray.300\", \"whiteAlpha.100\");\n  const bgList = useColorModeValue(\"transparent\", \"whiteAlpha.100\");\n  const bgShadow = useColorModeValue(\"14px 17px 40px 4px rgba(112, 144, 176, 0.08)\", \"unset\");\n\n  const {\n    isopen: isOpen1,\n    onOpen: onOpen1,\n    onClose: onClose1,\n  } = useDisclosure();\n\n  return (\n    <Menu isopen={isOpen1} onClose={onClose1} placement=\"auto-start\">\n      <MenuButton\n        align='center'\n        justifyContent='center'\n        _hover={bgHover}\n        _focus={bgFocus}\n        _active={bgFocus}\n        w='37px' h='37px'\n        lineHeight='100%'\n        onClick={onOpen1}\n        borderRadius='10px'\n        {...rest}>\n        <Icon as={MdOutlineMoreHoriz} color={iconColor} w='24px' h='24px' />\n      </MenuButton>\n      <MenuList\n        w='fit-content'\n        minW='unset'\n        backdropFilter='blur(63px)'\n        bg={bgList}\n        boxShadow={bgShadow}\n        borderRadius='10px'\n        p='5px'>\n        {\n          groupVideoMenu?.map((item, index) => {\n            return (\n              <MenuItem\n                key={index}\n                transition='0.2s linear'\n                my=\"15px\" p='0px'\n                color={textColor}\n                _hover={textHover}\n                bg=\"transparent\"\n                borderRadius='8px'\n                _active={{\n                  bg: \"transparent\",\n                }}\n                _focus={{\n                  bg: \"transparent\",\n                }}\n                onClick={() => {\n                  item.action()\n                  setMenuSelected(originalData)\n                }}\n                mx=\"15px\">\n                <Flex align='center'>\n                  <Icon as={item.icons} h='16px' w='16px' mr='8px' />\n                  <Text fontSize='md' color=\"black\" fontWeight='400'>\n                    {item?.title}\n                  </Text>\n                </Flex>\n              </MenuItem>\n            )\n          })\n        }\n      </MenuList>\n    </Menu>\n  );\n}\n","/* eslint-disable */\nimport React, { useState, useCallback } from 'react'\nimport {\n    useColorModeValue,\n    FormLabel,\n    Input,\n    FormControl,\n    InputGroup,\n    Switch,\n    Grid,\n    GridItem,\n    InputLeftElement\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport Card from \"../../../../components/card/Card\";\nimport { EmailIcon, LockIcon } from '@chakra-ui/icons';\n\nexport default function DetailGoogleKey(props) {\n    const { dataGeneral } = props;\n\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n\n    const initialValues = {\n        email: dataGeneral?.email,\n        key: dataGeneral?.key,\n        status: dataGeneral?.status\n    };\n\n    const { t } = useTranslation();\n\n    const validateSchema = Yup.object().shape({\n        email: Yup.string().email(t('content.invalid_email')).required(t('content.required_field')),\n        key: Yup.string().required(t('content.required_field')),\n        status: Yup.bool().required(t('content.required_field')),\n    });\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card>\n                <Grid\n                    margin=\"auto 0\"\n                    templateRows='1fr'\n                    templateColumns='repeat(8, 1fr)'\n                    gap={4}\n                    mb={4}>\n                    <GridItem colSpan={6}>\n                        <FormControl mb=\"15px\" isInvalid={formik.errors.email && formik.touched.email}>\n                            <FormLabel\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}\n                                mb='8px'>\n                                Email\n                            </FormLabel>\n                            <InputGroup>\n                                <InputLeftElement pointerEvents=\"none\" style={{ fontSize: '20px', top: '4px' }} children={<EmailIcon color=\"gray.300\" />} />\n                                <Input\n                                    name=\"email\"\n                                    placeholder=\"Nhập vào email\"\n                                    value={formik.values.email}\n                                    onChange={(e) => setInputValue(\"email\", e.target.value)}\n                                    fontSize='sm'\n                                    size='lg'\n                                />\n                            </InputGroup>\n                            {formik.errors.email && formik.touched.email && (\n                                <p className=\"text-error\">{formik.errors.email}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={2}>\n                        <FormControl mb=\"15px\" isInvalid={formik.errors.status && formik.touched.status}>\n                            <FormLabel\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Trạng thái\n                            </FormLabel>\n                            <Switch\n                                isChecked={formik.values.status}\n                                size=\"lg\"\n                                onChange={(e) => setInputValue(\"status\", e.target.checked)}\n                            />\n                            {formik.errors.status && formik.touched.status && (\n                                <p className=\"text-error\">{formik.errors.status}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                </Grid>\n                <FormControl mb=\"15px\" isInvalid={formik.errors.key && formik.touched.key}>\n                    <FormLabel\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Google Key\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftElement pointerEvents=\"none\" style={{ fontSize: '20px', top: '3px' }} children={<LockIcon color=\"gray.300\" />} />\n                        <Input\n                            name=\"key\"\n                            placeholder=\"Nhập vào google key\"\n                            value={formik.values.key}\n                            onChange={(e) => setInputValue(\"key\", e.target.value)}\n                            fontSize='sm'\n                            size='lg'\n                        />\n                    </InputGroup>\n                    {formik.errors.key && formik.touched.key && (\n                        <p className=\"text-error\">{formik.errors.key}</p>\n                    )}\n                </FormControl>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\nimport React, { useCallback } from 'react'\nimport {\n    Button,\n    useColorModeValue,\n    FormLabel,\n    Input,\n    FormControl,\n    InputGroup,\n    Switch,\n    Grid,\n    GridItem,\n    InputLeftElement\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { toast } from 'react-toastify';\n\nimport Card from \"../../../../components/card/Card\";\n\nimport {\n    updateAgentServerStream,\n} from '../../../../api/Stream';\nimport { MESSSAGE_STATUS_CODE } from '../../../../variables';\nimport { EmailIcon, LockIcon } from '@chakra-ui/icons';\nimport { updateGoogleKeyAPI } from '../../../../api/GoogleKey';\n\nexport default function EditGoogleKey(props) {\n    const { dataGeneral, handleFetchResource, onClose } = props;\n    const textColor = useColorModeValue(\"navy.700\", \"white\");\n\n    const initialValues = {\n        email: dataGeneral?.email,\n        key: dataGeneral?.key,\n        status: dataGeneral?.status\n    };\n\n    const { t } = useTranslation();\n\n    const validateSchema = Yup.object().shape({\n        email: Yup.string().email(t('content.invalid_email')).required(t('content.required_field')),\n        key: Yup.string().required(t('content.required_field')),\n        status: Yup.bool().required(t('content.required_field')),\n    });\n\n    const handleOnSubmitFormEdit = async (values, { resetForm }) => {\n        try {\n            const responseEdit = await updateGoogleKeyAPI({ ...values, id: dataGeneral.id });\n            if (responseEdit?.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                await handleFetchResource({});\n                resetForm();\n                onClose();\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validateSchema,\n        onSubmit: handleOnSubmitFormEdit,\n    });\n\n    const setInputValue = useCallback(\n        (key, value) => {\n            formik.setValues({ ...formik.values, [key]: value });\n        }, [formik]\n    );\n\n    return (\n        <form onSubmit={formik.handleSubmit} >\n            <Card>\n                <Grid\n                    margin=\"auto 0\"\n                    templateRows='1fr'\n                    templateColumns='repeat(8, 1fr)'\n                    gap={4}\n                    mb={4}>\n                    <GridItem colSpan={6}>\n                        <FormControl mb=\"15px\" isInvalid={formik.errors.email && formik.touched.email}>\n                            <FormLabel\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}\n                                mb='8px'>\n                                Email\n                            </FormLabel>\n                            <InputGroup>\n                                <InputLeftElement pointerEvents=\"none\" style={{ fontSize: '20px', top: '4px' }} children={<EmailIcon color=\"gray.300\" />} />\n                                <Input\n                                    name=\"email\"\n                                    placeholder=\"Nhập vào email\"\n                                    value={formik.values.email}\n                                    onChange={(e) => setInputValue(\"email\", e.target.value)}\n                                    fontSize='sm'\n                                    size='lg'\n                                />\n                            </InputGroup>\n                            {formik.errors.email && formik.touched.email && (\n                                <p className=\"text-error\">{formik.errors.email}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                    <GridItem colSpan={2}>\n                        <FormControl mb=\"15px\" isInvalid={formik.errors.status && formik.touched.status}>\n                            <FormLabel\n                                fontSize='sm'\n                                fontWeight='500'\n                                color={textColor}>\n                                Trạng thái\n                            </FormLabel>\n                            <Switch\n                                isChecked={formik.values.status}\n                                size=\"lg\"\n                                onChange={(e) => setInputValue(\"status\", e.target.checked)}\n                            />\n                            {formik.errors.status && formik.touched.status && (\n                                <p className=\"text-error\">{formik.errors.status}</p>\n                            )}\n                        </FormControl>\n                    </GridItem>\n                </Grid>\n                <FormControl mb=\"15px\" isInvalid={formik.errors.key && formik.touched.key}>\n                    <FormLabel\n                        fontSize='sm'\n                        fontWeight='500'\n                        color={textColor}\n                        mb='8px'>\n                        Google Key\n                    </FormLabel>\n                    <InputGroup>\n                        <InputLeftElement pointerEvents=\"none\" style={{ fontSize: '20px', top: '3px' }} children={<LockIcon color=\"gray.300\" />} />\n                        <Input\n                            name=\"key\"\n                            placeholder=\"Nhập vào google key\"\n                            value={formik.values.key}\n                            onChange={(e) => setInputValue(\"key\", e.target.value)}\n                            fontSize='sm'\n                            size='lg'\n                        />\n                    </InputGroup>\n                    {formik.errors.key && formik.touched.key && (\n                        <p className=\"text-error\">{formik.errors.key}</p>\n                    )}\n                </FormControl>\n                <Button\n                    mt={{ base: \"20px\", \"2xl\": \"auto\" }}\n                    variant='brand'\n                    type=\"submit\"\n                    fontWeight='500'>\n                    Cập nhật\n                </Button>\n            </Card>\n        </form>\n    )\n}\n","/* eslint-disable */\nimport React from \"react\";\n\nimport { Icon } from \"@chakra-ui/react\";\nimport {\n  MdPerson,\n  MdHome,\n  MdLock,\n  MdConnectedTv,\n  MdVerifiedUser,\n  MdAllInbox,\n} from \"react-icons/md\";\nimport { FcGoogle } from \"react-icons/fc\";\n\n// Admin Imports\nimport MainDashboard from \"./views/admin/default/index\";\nimport Profile from \"./views/admin/profile/index\";\nimport CreateLivestream from \"./views/admin/create-livestream/index\";\nimport ListUserLivestream from \"./views/admin/list-user-livestream/index\";\nimport ManageAdminLivestream from \"./views/admin/manage-admin-livestream/index\";\nimport ListAccountUser from \"./views/admin/list-account-user/index\";\nimport PackagePlanInfo from \"./views/admin/package-plan/index\";\n\n// Auth Imports\nimport SignInCentered from \"./views/auth/signIn\";\nimport Register from \"./views/auth/register\";\nimport ForgotPassword from \"./views/auth/forgotPassword\";\nimport PurchasePackage from \"./views/admin/package-plan/PurchasePackage\";\nimport { ROLE_USER } from \"./variables/index\";\nimport ServerLiveStreamAgent from \"./views/admin/server-livestream/index\";\n\n// Blank\nimport Policy from \"./views/blank/policy\"\nimport ManageGoogleKey from \"./views/admin/manage-google-key\";\n\nconst routesForAuthenticated = [\n  {\n    name: \"Thống kê\",\n    layout: \"/admin\",\n    path: \"/home-page\",\n    icon: <Icon as={MdHome} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: MainDashboard,\n    role: [ROLE_USER.SUPER_ADMIN, ROLE_USER.USER_DEFAULT],\n    children: [\n      {\n        name: \"Cá nhân\",\n        path: \"/profile\",\n        component: Profile,\n        role: [ROLE_USER.USER_DEFAULT, ROLE_USER.ADMIN, ROLE_USER.SUPER_ADMIN, ROLE_USER.RESELLER]\n      },\n    ]\n  },\n  {\n    name: \"Quản lý người dùng\",\n    layout: \"/admin\",\n    path: \"/list-account\",\n    icon: <Icon as={MdVerifiedUser} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }} />,\n    component: ListAccountUser,\n    role: [ROLE_USER.ADMIN, ROLE_USER.RESELLER],\n    children: []\n  },\n  {\n    name: \"Quản lý luồng\",\n    layout: \"/admin\",\n    path: \"/list-livestream\",\n    icon: <Icon as={MdPerson} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: ListUserLivestream,\n    role: [ROLE_USER.USER_DEFAULT]\n  },\n  {\n    name: \"Quản lý livestream\",\n    layout: \"/admin\",\n    path: \"/create-livestream\",\n    icon: <Icon as={MdHome} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: CreateLivestream,\n    role: [ROLE_USER.USER_DEFAULT]\n  },\n  {\n    name: \"Server livestream\",\n    layout: \"/admin\",\n    path: \"/server-livestream\",\n    icon: <Icon as={MdConnectedTv} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: ServerLiveStreamAgent,\n    role: [ROLE_USER.USER_DEFAULT, ROLE_USER.ADMIN, ROLE_USER.RESELLER]\n  },\n  {\n    name: \"Quản lý gói livestream\",\n    layout: \"/admin\",\n    path: \"/manage-admin-livestream\",\n    icon: <Icon as={MdAllInbox} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: ManageAdminLivestream,\n    role: [ROLE_USER.ADMIN, ROLE_USER.SUPER_ADMIN, ROLE_USER.RESELLER]\n  },\n  {\n    name: \"Quản lý Google Key\",\n    layout: \"/admin\",\n    path: \"/manage-google-key\",\n    icon: <Icon as={FcGoogle} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: ManageGoogleKey,\n    role: [ROLE_USER.ADMIN, ROLE_USER.SUPER_ADMIN]\n  },\n];\n\nconst routePublic = [\n  {\n    name: \"Cá nhân\",\n    layout: \"/admin\",\n    path: \"/profile\",\n    icon: <Icon as={MdPerson} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: Profile,\n    role: [ROLE_USER.USER_DEFAULT, ROLE_USER.ADMIN, ROLE_USER.SUPER_ADMIN, ROLE_USER.RESELLER]\n  },\n]\n\nconst routeBlank = [\n  {\n    name: \"Chính sách\",\n    layout: \"/general\",\n    path: \"/policy\",\n    icon: <Icon as={MdPerson} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: Policy,\n    role: [ROLE_USER.USER_DEFAULT, ROLE_USER.ADMIN, ROLE_USER.SUPER_ADMIN, ROLE_USER.RESELLER]\n  },\n]\n\nconst routePayments = [\n    {\n      name: \"Gói cước\",\n      layout: \"/admin\",\n      path: \"/plan\",\n      icon: <Icon as={MdPerson} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n      component: PackagePlanInfo,\n      role: [ROLE_USER.USER_DEFAULT],\n      children: [\n        {\n          name: \"Normal\",\n          path: \"/plan/:id\",\n          component: PurchasePackage,\n          role: [ROLE_USER.USER_DEFAULT, ROLE_USER.RESELLER]\n        },\n      ]\n    },\n]\n\nconst routesForNotAuthenticated = [\n  {\n    name: \"Đăng Nhập\",\n    layout: \"/auth\",\n    path: \"/sign-in\",\n    icon: <Icon as={MdLock} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: SignInCentered\n  },\n  {\n    name: \"Đăng ký\",\n    layout: \"/auth\",\n    path: \"/register\",\n    icon: <Icon as={MdLock} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: Register\n  },\n  {\n    name: \"Forgot Password\",\n    layout: \"/auth\",\n    path: \"/forgot-password\",\n    icon: <Icon as={MdLock} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: ForgotPassword\n  },\n  {\n    name: \"Underconstruction\",\n    layout: \"/under-construction\",\n    path: \"/forgot-password\",\n    icon: <Icon as={MdLock} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: ForgotPassword\n  },\n  {\n    name: \"Underconstruction\",\n    layout: \"/under-construction\",\n    path: \"/forgot-password\",\n    icon: <Icon as={MdLock} width='27px' height='27px' color='inherit' style={{ marginTop: '6px' }}/>,\n    component: ForgotPassword\n  }\n];\n\nconst routes = routesForAuthenticated.concat(routesForNotAuthenticated);\n\nexport {\n  routes,\n  routesForNotAuthenticated,\n  routesForAuthenticated,\n  routePublic,\n  routePayments,\n  routeBlank\n}\n","/* eslint-disable */\n// Chakra imports\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Box\n} from \"@chakra-ui/react\";\n\nimport StaticStream from \"../list-user-livestream/components/StaticStream\";\nimport { fetchDashboardAdminStatisticsStreaming, fetchDashboardStatisticsStreaming } from \"../../../api/Stream\";\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { MESSSAGE_STATUS_CODE, ROLE_USER } from \"../../../variables\";\nimport { getCurrRoleUser } from \"../../../utils/handleValidate\";\nimport { useAuth } from \"../../../contexts/authenContext\";\n\nexport default function UserReports() {\n  const { t } = useTranslation();\n\n  const { profile } = useAuth();\n\n  const [statisticsData, setStatisticsData] = useState([]);\n\n  const handleFetchDashboardStatisticsStreaming = async () => {\n    try {\n      if (getCurrRoleUser(profile) === ROLE_USER.ADMIN) {\n        const response = await fetchDashboardAdminStatisticsStreaming();\n        if (response.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            setStatisticsData(response.data.data);\n        }\n      } else {\n        const response = await fetchDashboardStatisticsStreaming();\n        if (response.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            setStatisticsData(response.data.data);\n        }\n      }\n    } catch (err) {\n      if (err.response) {\n          toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  }\n\n  useEffect(() => {\n    handleFetchDashboardStatisticsStreaming();\n  }, []);\n\n  return (\n    <Box pt={{ base: \"130px\", md: \"80px\", xl: \"80px\" }}>\n      {\n        statisticsData.length > 0 ? (\n          <StaticStream \n            listStatistics={statisticsData}\n          />\n        ): null\n      }\n    </Box>\n  );\n}\n","/* eslint-disable */\n// Chakra imports\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Grid, Card, List, GridItem } from \"@chakra-ui/react\";\n\n// Custom components\nimport LeftMenu from \"./components/LeftMenu\";\nimport RightContent from \"./components/RightContent\";\nimport { MESSSAGE_STATUS_CODE, MK_AGENCY_PROVIDER, resumeData } from \"../../../variables/\";\nimport { fetchProfileDetail } from \"../../../api/Auth\";\nimport { fetchListUserPackageApi } from \"../../../api/UserPackage\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\n\nexport default function Overview() {\n  const [activeTabId, setActiveTabId] = useState(0);\n  const [currentProfile, setCurrentProfile] = useState();\n\n  const { t } = useTranslation();\n\n  const [planDetail, setPlanDetail] = useState([]);\n\n  const handleFetchProfile = async () => {\n    try {\n      const responseProfile = await fetchProfileDetail({}, {\n        headers: {\n          Agency: MK_AGENCY_PROVIDER\n        }\n      });\n      if (responseProfile.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n        setCurrentProfile(responseProfile.data.data);\n        return responseProfile.data.data;\n      }\n    } catch (err) {\n      console.log(err);\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  }\n\n  const fetchUserPackage = async () => {\n      try {\n          const responseListUserPackage = await fetchListUserPackageApi();\n          if (responseListUserPackage.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            let allUserPackage = responseListUserPackage.data.data.items;\n            let currentUser = await handleFetchProfile();\n            let currUserPackage = []\n            await allUserPackage.map((pack) => {\n              if (pack.user_id == currentUser.id) {\n                currUserPackage.push(pack);\n              }\n            })\n            \n            setPlanDetail(currUserPackage);\n          }\n      } catch (err) {\n        console.log(err);\n        if (err.response) {\n          toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n      }\n  }\n\n  const handleChangeVerticalTabs = (id) => {\n    setActiveTabId(id);\n  }\n\n  useEffect(() => {\n    handleFetchProfile();\n    fetchUserPackage();\n  }, []);\n\n  return (\n    <Box pt={{ base: \"130px\", md: \"80px\", xl: \"80px\" }}>\n      <Grid\n        templateRows='repeat(1, 1fr)'\n        gridTemplateColumns={{ base: \"repeat(4, 1fr)\", xl: \"repeat(5, 1fr)\", \"2xl\": \"repeat(6, 1fr)\" }}\n        gap={5}\n        >\n        <GridItem colSpan={1}>\n          <LeftMenu\n            handleChangeVerticalTabs={handleChangeVerticalTabs}\n            setActiveTabId={setActiveTabId}\n            activeTabId={activeTabId}\n            resumeData={resumeData}\n          />\n        \n        </GridItem>\n        <GridItem colSpan={3}>\n          <RightContent\n            currentProfile={currentProfile}\n            planDetail={planDetail}\n            resumeData={resumeData}\n            activeTabId={activeTabId}\n          />\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n","/* eslint-disable */\n// Chakra imports\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Text,\n  useDisclosure,\n  Grid,\n  GridItem,\n} from \"@chakra-ui/react\";\n\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HiOutlineMail } from \"react-icons/hi\";\n\nimport {\n  MESSSAGE_STATUS_CODE,\n  ROLE_USER,\n} from \"../../../variables/index\";\n\nimport TableEmpty from \"../list-user-livestream/components/TableEmpty\";\nimport MenuAgent from \"./components/MenuAgent\";\nimport ModalCustomGeneral from \"../../../components/modal/ModalCustomGeneral\";\nimport FilterHeader from \"./components/FilterHeader\";\nimport TableUserManager from \"./components/TableUserManager\";\nimport { deleteUserAPI, fetchAdminListUser } from \"../../../api/Auth\";\nimport CreateNewUser from \"./components/CreateNewPackage\";\nimport AvatarText from \"../../../components/AvatarText\";\n\nexport default function ListAccountUser() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [paginationData, setPaginationData] = useState({});\n  const [selectedAgentServer, setSelectedAgentServer] = useState({});\n  const [menuSelected, setMenuSelected] = useState();\n\n  const [listAdminUser, setListAdminUser] = useState([]);\n\n  const {\n    isOpen: isOpenNewAgentServer,\n    onOpen: onOpenNewAgentServer,\n    onClose: onCloseNewAgentServer,\n  } = useDisclosure();\n\n  const { t } = useTranslation();\n\n  const handleFetchListUserDetail = async (params) => {\n    setIsLoading(true);\n    try {\n      const responseLisUser = await fetchAdminListUser(params || {});\n      if (\n        responseLisUser.status === MESSSAGE_STATUS_CODE.SUCCESS.code\n      ) {\n        setListAdminUser(responseLisUser?.data?.data?.users);\n        setPaginationData(responseLisUser?.data?.data?.meta);\n      }\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      if (err.response) {\n        toast.error(t(`error_code.${err?.response?.data?.error_code}`));\n      }\n    }\n  };\n\n  const deleteUserRequest = async (userObj) => {\n    setIsLoading(true);\n    try {\n      const responseDelete = await deleteUserAPI({ id: userObj?.id });\n      if (\n        responseDelete.status === MESSSAGE_STATUS_CODE.SUCCESS.code\n      ) {\n        handleFetchListUserDetail();\n        toast.success(\"Xóa người dùng thành công!\");\n      }\n    } catch (err) {\n      setIsLoading(false);\n      if (err.response) {\n        toast.error(\n          t(`error_code.${err?.response?.data?.error_code}`)\n        );\n      }\n    }\n  };\n\n  useEffect(() => {\n    handleFetchListUserDetail();\n  }, []);\n\n  const columnsListUser = [\n    {\n      Header: \"Người dùng\",\n      accessor: \"fullname\",\n      sticky: \"left\",\n      Cell: ({ value, row }) => {\n        return (\n          <Flex\n            style={{\n              display: \"flex\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <AvatarText name={value} inputSize=\"md\"/>\n            <Text fontSize=\"sm\" fontWeight={\"500\"} color={\"black\"}>\n              {value}\n            </Text>\n          </Flex>\n        );\n      },\n    },\n    {\n      Header: \"Email\",\n      accessor: \"email\",\n      sticky: \"left\",\n      Cell: ({ value, row }) => {\n        return (\n          <Flex>\n            <HiOutlineMail\n              color=\"#80808080\"\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                marginRight: \"7px\",\n              }}\n            />\n            <Text fontSize=\"sm\" fontWeight={\"500\"} color={\"gray.500\"}>\n              {value}\n            </Text>\n          </Flex>\n        );\n      },\n    },\n  ];\n\n  const columnAction = [\n    {\n      Header: \"Hành động\",\n      accessor: \"\",\n      role: [ROLE_USER.ADMIN],\n      Cell: ({ value, row }) => {\n        return (\n          <MenuAgent\n            originalData={row.original}\n            setMenuSelected={setMenuSelected}\n            deleteUserRequest={() => {\n              deleteUserRequest(row.original);\n            }}\n          />\n        );\n      },\n    },\n  ];\n\n  const handleOpenModalCreateAgent = () => {\n    onOpenNewAgentServer();\n  };\n\n  return (\n    <Box pt={{ base: \"130px\", md: \"80px\", xl: \"80px\" }}>\n      <ModalCustomGeneral\n        size={\"lg\"}\n        isOpen={isOpenNewAgentServer}\n        onClose={onCloseNewAgentServer}\n        title=\"Tạo người dùng\"\n        content={\n          <CreateNewUser\n            dataGeneral={selectedAgentServer}\n            listAdmin={listAdminUser}\n            handleFetchResource={handleFetchListUserDetail}\n            onClose={onCloseNewAgentServer}\n          />\n        }\n      />\n      <Grid\n        templateRows=\"repeat(1, 1fr)\"\n        templateColumns=\"repeat(2, 1fr)\"\n        gap={2}\n      >\n        <GridItem colSpan={1} margin=\"auto 0\">\n          {listAdminUser?.length === 0 ? (\n            <TableEmpty\n              columnsData={[...columnsListUser, ...columnAction]}\n              tableData={[]}\n            />\n          ) : (\n            <TableUserManager\n              paginationData={paginationData}\n              filterHeader={\n                <FilterHeader\n                  title=\"Danh sách người dùng\"\n                  onModalCreate={handleOpenModalCreateAgent}\n                />\n              }\n              columnsData={[...columnsListUser, ...columnAction]}\n              tableData={listAdminUser}\n              handleFetchResource={handleFetchListUserDetail}\n            />\n          )}\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n","/* eslint-disable */\n// Chakra imports\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Icon,\n  Text,\n  Badge,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { MdOutlineDateRange } from \"react-icons/md\";\nimport { MESSSAGE_STATUS_CODE, ROLE_USER } from \"../../../variables/index\";\nimport { reverseTimeDate } from \"../../../utils/handleValidate\";\n\nimport TableEmpty from \"../list-user-livestream/components/TableEmpty\";\nimport MenuAgent from \"./components/MenuAgent\";\nimport { useAuth } from \"../../../contexts/authenContext\";\nimport ModalCustomGeneral from \"../../../components/modal/ModalCustomGeneral\";\nimport FilterHeader from \"./components/FilterHeader\";\nimport CreateNewPackage from \"./components/CreateNewPackage\";\nimport { MdAccessTime, MdCancel, MdCheckCircle, MdOutlineHub } from \"react-icons/md\";\nimport TableUserManager from \"./components/TableUserManager\";\nimport { adminConfirmUserPackageApi, fetchAdminListApi } from \"../../../api/UserPackage\";\nimport { fetchAdminListUser } from \"../../../api/Auth\";\nimport { FaRegUserCircle } from \"react-icons/fa\";\nimport AvatarText from \"../../../components/AvatarText\";\n\nexport default function ManageAdminLivestream() {\n  const [tableList, setTableList] = useState([]);\n  const [paginationData, setPaginationData] = useState({});\n  const [selectedAgentServer, setSelectedAgentServer] = useState({});\n  const [menuSelected, setMenuSelected] = useState();\n\n  const [listAdmin, setListAdmin] = useState([]);\n\n  const { profile } = useAuth();\n\n  const showPayment = JSON.parse(profile) \n        && Object.keys(JSON.parse(profile)).length != 0 && JSON.parse(profile)?.other_info?.show_payment || false;\n\n  const {\n    isOpen: isOpenNewAgentServer,\n    onOpen: onOpenNewAgentServer,\n    onClose: onCloseNewAgentServer\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenConfirmPayment,\n    onOpen: onOpenConfirmPayment,\n    onClose: onCloseConfirmPayment\n  } = useDisclosure();\n\n  const { t } = useTranslation();\n\n  const fetchAdminListUserFunc = async () => {\n    try {\n        const responseEdit = await fetchAdminListUser({\n            limit: 1000\n        });\n        if (responseEdit.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            setListAdmin(responseEdit.data.data.users.map(item => {\n                return {\n                    label: item.fullname,\n                    value: item.id\n                }\n            }));\n        }\n    } catch (err) {\n        if (err.response) {\n            toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n    }\n  }\n\n  const handleFetchListUserPack = async (params) => {\n    try {\n      const responseListUserPack = await fetchAdminListApi(params || {});\n      if (responseListUserPack.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n        let adminList = responseListUserPack.data.data;\n        setPaginationData(adminList.meta);\n        setTableList(adminList.items);\n      }\n    } catch (err) {\n      console.log(err);\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  }\n\n  useEffect(() => {\n    handleFetchListUserPack({});\n    fetchAdminListUserFunc();\n  }, []);\n\n  const col1 = [\n    {\n      Header: \"Người dùng\",\n      accessor: \"user_obj\",\n      role: [ROLE_USER.USER_DEFAULT],\n      sticky: \"left\",\n      Cell: ({ value, row }) => {\n        const truncateName = (name) => (name.length > 25 ? `${name.substring(0, 22)}...` : name);\n\n        return (\n          <Flex style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n            <AvatarText name={value?.fullname} inputSize=\"md\" />\n            <Text fontWeight={\"500\"} color={\"black\"}>\n              {truncateName(value?.fullname)}\n            </Text>\n          </Flex>\n        )\n      }\n    },\n    {\n      Header: \"Loại gói\",\n      accessor: \"package_name\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        let badgeStyle;\n    \n        switch (value) {\n          case \"premium\":\n            badgeStyle = { background: 'linear-gradient(45deg, orange 0%, rgb(250, 82, 82) 100%)', color: 'white' };\n            break;\n          case \"vip\":\n            badgeStyle = { background: 'linear-gradient(45deg, rgb(0, 128, 255) 0%, rgb(250, 82, 82) 100%)', color: 'white' };\n            break;\n          default: // 'normal' case\n            badgeStyle = { background: 'green', color: 'white' };\n        }\n\n        // Add gray text shadow\n        badgeStyle.textShadow = '1px 1px 6px gray';\n    \n        return (\n          <Flex align=\"center\">\n            <Badge\n              style={{ ...badgeStyle, fontWeight: 500, borderRadius: '6px' }}\n              justifyContent=\"center\"\n              alignContent=\"center\"\n            >\n              {value}\n            </Badge>\n          </Flex>\n        );\n      }\n    },\n    {\n      Header: \"Số luồng\",\n      accessor: \"stream_number\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <span style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n            <MdOutlineHub style={{ color: 'gray', marginRight: '7px', width: '18px', height: '18px' }} />\n            <Text\n              colorScheme=\"black\" \n              fontSize={{ base: \"sm\", }}\n              me='8px'>{value} luồng\n            </Text>\n          </span>\n        )\n      }\n    },\n    {\n      Header: \"Thời hạn\",\n      accessor: \"package_days\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <span style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n            <MdOutlineDateRange style={{ color: '#80808080', marginRight: '7px', width: '22px', height: '22px' }}/>\n            <Text\n              colorScheme=\"black\" \n              fontSize={{ base: \"sm\", }}>{value} ngày\n            </Text>\n          </span>\n        )\n      }\n    },\n  ];\n\n  const colPayment = [\n    {\n      Header: \"Giá ban đầu\",\n      accessor: \"price\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <Text\n            colorScheme=\"green\"\n            textColor=\"green\"\n            fontWeight={600}\n            textDecoration=\"line-through\"\n            fontSize={{ base: \"sm\", }}\n            me='8px'>{value?.toLocaleString()} VNĐ\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"khuyến mãi\",\n      accessor: \"discount\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <Text\n            colorScheme=\"black\" \n            fontSize={{ base: \"sm\", }}\n            me='8px'>{value} %\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Tổng cộng\",\n      accessor: \"final_price\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <Text\n            textColor=\"green\"\n            fontWeight=\"600\" \n            fontSize={{ base: \"sm\", }}\n            me='8px'>{value?.toLocaleString()} VNĐ\n          </Text>\n        )\n      }\n    },\n  ]\n\n  const col3 = [\n    {\n      Header: \"Từ ngày\",\n      accessor: \"\",\n      Cell: ({ value, row }) =>  {\n        return (\n          <>\n            {row.original?.started_at ? (\n              <Text fontSize={\"sm\"} fontWeight=\"bold\" style={{ display: 'flex', alignContent: 'center', alignItems: 'center', fontStyle: 'italic', color: 'gray' }}>\n                  <MdAccessTime color=\"#80808080\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n                  {reverseTimeDate(row?.original?.started_at)}\n                </Text>\n              ) : \"...\"}\n          </>\n        )\n      }\n    },\n    {\n      Header: \"Đến ngày\",\n      accessor: \"\",\n      Cell: ({ value, row }) =>  {\n        return (\n          <>\n            {row?.original?.expired_at ? (\n              <Text fontSize={\"sm\"} fontWeight=\"bold\" style={{ display: 'flex', alignContent: 'center', alignItems: 'center', fontStyle: 'italic', color: 'gray' }}>\n                <MdAccessTime color=\"#80808080\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n                {reverseTimeDate(row?.original?.expired_at)}\n              </Text>\n            ) : \"...\"}\n          </>\n        )\n      }\n    },\n    {\n      Header: \"Xác nhận\",\n      accessor: \"confirmed\",\n      role: [ROLE_USER.ADMIN, ROLE_USER.RESELLER],\n      Cell: ({ value, row }) => {\n        return (\n          <Flex align='center'>\n            <Icon\n              w='24px'\n              h='24px'\n              me='5px'\n              color={\n                value === true\n                  ? \"green.500\"\n                  : value === false\n                  ? \"red.500\"\n                  : null\n              }\n              as={\n                value === true\n                  ? MdCheckCircle\n                  : value === false\n                  ? MdCancel\n                  : null\n              }\n            />\n            <Text color=\"black\" fontSize='sm' fontWeight='500' style={{ color: value === true ? 'green' : 'red' }}>\n              {value === true ? 'Đã xác nhận' : 'Chưa xác nhận'}\n            </Text>\n          </Flex>\n        )\n      }\n    },\n    {\n      Header: \"Hành động\",\n      accessor: \"\",\n      role: [ROLE_USER.ADMIN, ROLE_USER.RESELLER],\n      Cell: ({ value, row }) => {\n        if (!row?.original?.confirmed) {\n          return (\n            <MenuAgent\n              originalData={row?.original}\n              setMenuSelected={setMenuSelected}\n              confirmActivePackage={() => {\n                confirmActivePackage(row.original)\n              }}\n            />\n          )\n        } else {\n          return '...';\n        }\n      }\n    },\n  ]\n\n  const columnsServerAgent = [...col1, ...colPayment, ...col3];\n  const columnsServerAgentNoPayment = [...col1, ...col3];\n\n  const handleOpenModalCreateAgent = () => {\n    onOpenNewAgentServer();\n  }\n\n  const confirmActivePackage = (item) => {\n    setSelectedAgentServer(item);\n    onOpenConfirmPayment();\n  }\n\n  const handleConfirmConfirmActivePackage= async () => {\n    try {\n        const responseConfirmReset = await adminConfirmUserPackageApi({ id: menuSelected?.id });\n        if (responseConfirmReset.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n            onCloseConfirmPayment();\n            window.location.reload();\n            await handleFetchListUserPack();\n        }\n    } catch (err) {\n        if (err?.response) {\n            toast.error(t(`error_code.${err?.response?.data.error_code}`));\n        }\n        onCloseConfirmPayment();\n    }\n  }\n\n  return (\n    <Box pt={{ base: \"130px\", md: \"80px\", xl: \"80px\" }}>\n      <ModalCustomGeneral\n        size={\"lg\"}\n        isOpen={isOpenNewAgentServer}\n        onClose={onCloseNewAgentServer}\n        title=\"Tạo luồng livestream\"\n        content={\n          <CreateNewPackage\n            dataGeneral={selectedAgentServer}\n            listAdmin={listAdmin}\n            handleFetchResource={handleFetchListUserPack}\n            onClose={onCloseNewAgentServer}\n          />\n        }\n      />\n      <ModalCustomGeneral\n        size=\"xl\"\n        isOpen={isOpenConfirmPayment}\n        onClose={onCloseConfirmPayment}\n        title=\"Xác nhận luồng\"\n        content=\"Xác nhận thông tin luồng chính xác. Tiếp tục ?\"\n        footer={true}\n        handleConfirm={handleConfirmConfirmActivePackage}\n      />\n      {\n        tableList?.length === 0 ? (\n          <TableEmpty\n            columnsData={columnsServerAgent}\n            tableData={[]}\n            filterHeader={\n              <FilterHeader\n                title=\"Danh sách đăng ký gói \"\n                onModalCreate={handleOpenModalCreateAgent}\n              />\n            }\n          />\n        ) : (\n          <TableUserManager\n            paginationData={paginationData}\n            filterHeader={\n              <FilterHeader\n                title=\"Danh sách đăng ký gói \"\n                onModalCreate={handleOpenModalCreateAgent}\n              />\n            }\n            columnsData={ showPayment === true ? columnsServerAgent : columnsServerAgentNoPayment}\n            tableData={tableList}\n            handleFetchResource={handleFetchListUserPack}\n          />\n        )\n      }\n    </Box>\n  );\n}","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Switch,\n  Text,\n  Icon,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { HiCheck, HiX } from \"react-icons/hi\"\n\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { DEFAULT_PERPAGE, MESSSAGE_STATUS_CODE, ROLE_USER } from \"../../../variables/index\";\n\nimport TableEmpty from \"../list-user-livestream/components/TableEmpty\";\nimport FilterHeader from \"./components/FilterHeader\";\nimport TableUserManager from \"./components/TableUserManager\";\nimport { deleteGoogleKeyAPI, fetchListAllGoogleKeyAPI } from \"../../../api/GoogleKey\";\nimport CreateGoogleKey from \"./components/CreateGoogleKey\";\nimport AvatarText from '../../../components/AvatarText';\nimport ModalCustomGeneral from \"../../../components/modal/ModalCustomGeneral\";\nimport { MdAccessTime } from \"react-icons/md\";\nimport { reverseTimeDate } from \"../../../utils/handleValidate\";\nimport MenuAgent from \"./components/MenuAgent\";\nimport DetailGoogleKey from \"./components/DetailGoogleKey\";\nimport EditGoogleKey from \"./components/EditGoogleKey\";\n\nexport default function ManageGoogleKey() {\n  const [tableList, setTableList] = useState([]);\n  const [paginationData, setPaginationData] = useState({});\n  const [menuSelected, setMenuSelected] = useState();\n  const [selectedRow, setSelectedRow] = useState({});\n\n  const {\n    isOpen: isOpenNewGoogleKey,\n    onOpen: onOpenNewGoogleKey,\n    onClose: onCloseNewGoogleKey\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenDetailGoogleKey,\n    onOpen: onOpenDetailGoogleKey,\n    onClose: onCloseDetailGoogleKey\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenEditGoogleKey,\n    onOpen: onOpenEditGoogleKey,\n    onClose: onCloseEditGoogleKey\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenDeleteGoogleKey,\n    onOpen: onOpenDeleteGoogleKey,\n    onClose: onCloseDeleteGoogleKey\n  } = useDisclosure();\n\n  const { t } = useTranslation();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [limitPage, setLimitPage] = useState(DEFAULT_PERPAGE);\n\n  const handleFetchListUserPack = async (page, limit) => {\n    try {\n      const respListGoogleKey = await fetchListAllGoogleKeyAPI({ page, limit });\n      if (respListGoogleKey?.data?.error_code === 0) {\n        setPaginationData(respListGoogleKey.data.data?.meta);\n        setTableList(respListGoogleKey.data.data?.google_keys);\n      }\n    } catch (err) {\n      console.log(err);\n      if (err.response) {\n        toast.error(t(`error_code.${err.response.data.error_code}`));\n      }\n    }\n  }\n\n  useEffect(() => {\n    handleFetchListUserPack(currentPage, limitPage);\n  }, [currentPage, limitPage]);\n\n  const detailGoogleKey = (item) => {\n    setSelectedRow(item);\n    onOpenDetailGoogleKey();\n  }\n  const editGoogleKey = (item) => {\n    setSelectedRow(item);\n    onOpenEditGoogleKey();\n  }\n  const deleteGoogleKey = (item) => {\n    setSelectedRow(item);\n    onOpenDeleteGoogleKey();\n  }\n\n  const col1 = [\n    {\n      Header: \"Email\",\n      accessor: \"email\",\n      role: [ROLE_USER.USER_DEFAULT],\n      sticky: \"left\",\n      Cell: ({ value, row }) => {\n        const truncateName = (value) => (value.length > 25 ? `${value.substring(0, 22)}...` : value);\n        return (\n          <Flex style={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}>\n            <AvatarText name={value} inputSize=\"md\" />\n            <Text fontWeight={\"500\"} color={\"black\"}>\n              {truncateName(value)}\n            </Text>\n          </Flex>\n        )\n      }\n    },\n    {\n      Header: \"Key\",\n      accessor: \"key\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return <code>{value}</code>\n      }\n    },\n    {\n      Header: \"Trạng thái\",\n      accessor: \"status\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <Switch\n            colorPalette=\"blue\"\n            size=\"lg\"\n            isChecked={value}\n            thumbLabel={{ on: <><HiCheck />Hoạt động</>, off: <><HiX />Không hoạt động</> }}\n          />\n        )\n      }\n    },\n    {\n      Header: \"Khởi tạo\",\n      accessor: \"created_at\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <Text fontSize={\"sm\"} fontWeight=\"600\" style={{ display: 'flex', alignContent: 'center', alignItems: 'center', color: 'gray' }}>\n            <MdAccessTime color=\"#80808080\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n            {reverseTimeDate(value)}\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Cập nhật\",\n      accessor: \"updated_at\",\n      role: [ROLE_USER.USER_DEFAULT],\n      Cell: ({ value, row }) => {\n        return (\n          <Text fontSize={\"sm\"} fontWeight=\"600\" style={{ display: 'flex', alignContent: 'center', alignItems: 'center', color: 'gray' }}>\n            <MdAccessTime color=\"#80808080\" style={{ width:'20px', height: '20px', marginRight: '7px' }} />\n            {reverseTimeDate(value)}\n          </Text>\n        )\n      }\n    },\n    {\n      Header: \"Hành động\",\n      accessor: \"\",\n      role: [ROLE_USER.ADMIN, ROLE_USER.RESELLER],\n      Cell: ({ value, row }) => {\n        return (\n          <MenuAgent\n            originalData={row?.original}\n            setMenuSelected={setMenuSelected}\n            detailGoogleKey={() => {detailGoogleKey(row.original)}}\n            editGoogleKey={() => {editGoogleKey(row.original)}}\n            deleteGoogleKey={() => {deleteGoogleKey(row.original)}}\n          />\n        )\n      }\n    },\n  ];\n\n  const handleOpenModalCreateAgent = () => {\n    onOpenNewGoogleKey();\n  }\n\n  const handleConfirmDeleteGoogleKey = async () => {\n    try {\n        const responseConfirmReset = await deleteGoogleKeyAPI({id: menuSelected.id});\n        console.log('--- resp =dee==', responseConfirmReset)\n        if (responseConfirmReset.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n            onCloseDeleteGoogleKey();\n\n            window.location.reload();\n            await handleFetchAgentServerOfUserOriginal();\n        }\n    } catch (err) {\n        if (err.response) {\n            toast.error(t(`error_code.${err.response.data.error_code}`));\n        }\n        onCloseDeleteGoogleKey();\n    }\n  }\n\n  return (\n    <Box pt={{ base: \"130px\", md: \"80px\", xl: \"80px\" }}>\n      <ModalCustomGeneral\n        size=\"lg\"\n        isOpen={isOpenNewGoogleKey}\n        onClose={onCloseNewGoogleKey}\n        title=\"Tạo mới Google Key\"\n        content={\n          <CreateGoogleKey\n            handleFetchResource={handleFetchListUserPack}\n            onClose={onCloseNewGoogleKey}\n          />\n        }\n      />\n      <ModalCustomGeneral\n        size=\"lg\"\n        isOpen={isOpenDetailGoogleKey}\n        onClose={onCloseDetailGoogleKey}\n        title=\"Chi tiết Google Key\"\n        content={\n          <DetailGoogleKey\n            dataGeneral={selectedRow}\n            handleFetchResource={handleFetchListUserPack}\n            onClose={onCloseDetailGoogleKey}\n          />\n        }\n      />\n      <ModalCustomGeneral\n        size=\"lg\"\n        isOpen={isOpenEditGoogleKey}\n        onClose={onCloseEditGoogleKey}\n        title=\"Cập nhật Google Key\"\n        content={\n          <EditGoogleKey\n            dataGeneral={selectedRow}\n            handleFetchResource={handleFetchListUserPack}\n            onClose={onCloseEditGoogleKey}\n          />\n        }\n      />\n      <ModalCustomGeneral\n        size=\"xl\"\n        isOpen={isOpenDeleteGoogleKey}\n        onClose={onCloseDeleteGoogleKey}\n        title=\"Xóa google key\"\n        content=\"Xóa google key đã chọn. Tiếp tục ?\"\n        footer={true}\n        handleConfirm={handleConfirmDeleteGoogleKey}\n      />\n      {\n        tableList?.length === 0 ? (\n          <TableEmpty\n            columnsData={col1}\n            tableData={[]}\n            filterHeader={\n              <FilterHeader\n                title=\"Danh sách google keys \"\n                onModalCreate={handleOpenModalCreateAgent}\n              />\n            }\n          />\n        ) : (\n          <TableUserManager\n            paginationData={paginationData}\n            filterHeader={\n              <FilterHeader\n                title=\"Danh sách google keys \"\n                onModalCreate={handleOpenModalCreateAgent}\n              />\n            }\n            columnsData={ col1}\n            tableData={tableList}\n            handleFetchResource={handleFetchListUserPack}\n          />\n        )\n      }\n    </Box>\n  );\n}","/* eslint-disable */\nimport { \n  SimpleGrid, Text, Center, Flex,\n  Grid, GridItem,\n  ListItem, Icon,\n  Button, Image,\n  UnorderedList,\n} from \"@chakra-ui/react\";\nimport history from '../../utils/history';\nimport React from \"react\";\nimport BlankIllustration from '../../layouts/blank/Default';\nimport illustration from \"../../assets/img/auth/auth.png\";\nimport { IoArrowBack } from \"react-icons/io5\";\nimport logo from '../../assets/img/logo.svg';\n\nexport default function Policy() {\n  // Chakra Color Mode\n  const handleGoBackStep = () => {\n    history.push('#/admin/create-livestream');\n    window.location.reload();\n  }\n\n  return (\n    <BlankIllustration illustrationBackground={illustration} image={illustration}>\n      <Flex\n        maxW={{ base: \"max-content\" }}\n        w='100%'\n        mx={{ base: \"auto\", lg: \"0px\" }}\n        pl={{ base: \"45%\" }}\n        me='auto'\n        h='100%'\n        alignItems='start'\n        justifyContent='center'\n        flexDirection='column'>\n        <Grid\n          templateColumns='repeat(5, 1fr)'\n          gap={2}\n          mb=\"80px\"\n        >\n          <GridItem colSpan={1}>\n            <Button\n              onClick={handleGoBackStep}\n              variant=\"ghost\"\n              mt=\"10px\"\n              fontWeight=\"400\"\n              mr=\"1%\">\n              <Icon\n                transition='0.2s linear'\n                w='20px'\n                h='20px'\n                mr='10px'\n                fontWeight=\"100\"\n                as={IoArrowBack}\n                color='gray.400'\n              />\n              Quay lại\n            </Button>\n          </GridItem>\n          <GridItem colStart={5} colEnd={8} alignContent=\"right\">\n            <Image src={logo} h='70px' w='100px' mb='18%' />\n          </GridItem>\n        </Grid>\n        <Center mb=\"25px\" textAlign=\"center\">\n          <Text fontSize='3xl' fontWeight='bold'>Chính sách bảo mật và miễn trừ trách nhiệm MKStream</Text>\n        </Center>\n\n        <SimpleGrid mb=\"25px\">\n          <Text fontSize='xl' fontWeight='bold' >1. Chính sách bảo mật</Text>\n          <UnorderedList>\n            <ListItem>Toàn bộ các thông tin MKStream yêu cầu khách hàng cung cấp như:</ListItem>\n              <Text fontSize='md'> - Số điện thoại</Text>\n              <Text fontSize='md'> - Đường link tài khoản facebook</Text>\n              <Text fontSize='md'>Chỉ để phục vụ một mục đích duy nhất là chăm sóc khách hàng dễ hơn, chúng tôi cam kết không chia sẻ các thông tin này với bất kỳ bên thứ 3 nào.</Text>\n            <ListItem>MKStream không lưu trữ thông tin tài khoản của khách hàng sử dụng dịch vụ, tất cả nghiệp vụ Livestream đều được thực hiện qua Key Stream (Khóa Luồng) đây là Key Stream do bên khách hàng cung cấp.</ListItem>\n            <ListItem>MKStream không can thiệp cũng không biết được nội dung livestream của khách hàng.</ListItem>\n          </UnorderedList>\n        </SimpleGrid>\n\n        <SimpleGrid mb=\"10px\">\n          <Text fontSize='xl' fontWeight='bold'>2. Miễn trừ trách nhiệm</Text>\n          <UnorderedList>\n            <ListItem fontSize='md'>Phần mềm MKStream là một phần mềm trung gian giúp khách hàng có thể livestream được nội dung video lên nền tảng mong muốn, chính vì thế chúng tôi hoàn toàn không kiểm soát, không tác động, không biết nội dung Livestream của khách hàng là gì.</ListItem>\n            <ListItem fontSize='md'>Khách hàng phải toàn toàn chịu trách nhiệm đối với nội dung mà mình Livestream qua MKStream.</ListItem>\n            <ListItem fontSize='md'>MKStream không chiu trách nhiệm pháp lý đối với bất kỳ nội dung livestream nào của khách hàng.</ListItem>\n          </UnorderedList>\n        </SimpleGrid>\n      </Flex>\n    </BlankIllustration>\n  );\n}\n","/* eslint-disable */\nimport { \n    Box,\n    SimpleGrid,\n    Text,\n    Grid,\n    Flex,\n    Select,\n    Card,\n    Tabs,\n    Tab,\n    TabList,\n    TabPanel,\n    GridItem,\n    TabPanels,\n    Tooltip,\n    Button,\n    Badge,\n    Icon,\n    Image,\n    Spinner,\n    useDisclosure\n} from '@chakra-ui/react';\n\nimport React, { useEffect, useState } from 'react';\n\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { IoInformationCircleSharp } from 'react-icons/io5';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\n\nimport { MESSSAGE_STATUS_CODE, MK_AGENCY_PROVIDER, listPricingMonthly, listStreamThread } from '../../../variables/index';\nimport { useAuth } from '../../../contexts/authenContext';\nimport PaymentQRCode from '../../../assets/img/PaymentQRCode.jpg'\nimport { fetchInfoUserPackageApi, fetchListUserPackageApi, preOrderUserPackageApi } from '../../../api/UserPackage/index';\nimport { fetchProfileDetail } from '../../../api/Auth';\nimport ModalPackageConfirm from './components/ModalPackageConfirm';\nimport { useTranslation } from 'react-i18next';\nimport history from '../../../utils/history';\n\nfunction PurchasePackage() {\n    const location = useLocation();\n\n    const packageName = location.pathname.split('/').slice(-1).pop();\n    \n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const [loading, setLoading] = useState(false);\n    const [selectMonth, setSelectMonth] = useState(1);\n    const [selectThread, setSelectThread] = useState(100);\n\n    const [currentUserPackage, setCurrentUserPackage] = useState({});\n    const [ infoPackage, setInfoPackage] = useState({});\n\n    const { t } = useTranslation();\n\n    const fetchCurrentUser = async () => {\n        try {\n            const responseProfile = await fetchProfileDetail({}, {\n                headers: {\n                    Agency: MK_AGENCY_PROVIDER\n                }\n            });\n            if (responseProfile.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                return responseProfile.data.data.id;\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    const handleFetchInfoUserPackageApi = async () => {\n        try {\n          const responseInfoPackage = await fetchInfoUserPackageApi();\n          if (responseInfoPackage.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n            let arrInfoPackage = [];\n    \n            let arrColor = [\"orange\", \"green\", \"blue\", \"purple\", \"teal\"]\n            Object.entries(responseInfoPackage.data.data).map(([plan, value], index) => {\n                if (plan == packageName) {\n                    arrInfoPackage = {\n                        packageColor: arrColor[index],\n                        packageCode: plan,\n                        textColor: \"black\",\n                        total: (100 - value.discount)*value.price_per_month,\n                        pricePerMonth: value.price_per_month*100,\n                        packageDetail: [\n                        'Số lượng: 100 luồng livestream',\n                        'Băng thông: không giới hạn',\n                        `Giảm giá: ${value.discount} %`,\n                        `Giá gốc: ${(value.price_per_month*100).toLocaleString()} VNĐ`\n                        ]\n                    }\n                }\n            });\n    \n            setInfoPackage(arrInfoPackage);\n          }\n        } catch (err) {\n          if (err.response) {\n              toast.error(t(`error_code.${err.response.data.error_code}`));\n          }\n        }\n    }\n\n    const fetchUserPackage = async () => {\n        try {\n            const responseListUserPackage = await fetchListUserPackageApi();\n            if (responseListUserPackage.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                let allUserPackage = responseListUserPackage.data.data.items;\n                let currUser = await fetchCurrentUser();\n                let currUserPackage = await allUserPackage.find(item => item.user_id == currUser);\n                setCurrentUserPackage(currUserPackage);\n            }\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n    useEffect(() => {\n        handleFetchInfoUserPackageApi();\n        fetchUserPackage();\n    }, []);\n\n    const handleSubmitPurchase = async () => {\n        setLoading(true);\n        let currUser = await fetchCurrentUser();\n        try {\n            const data = {\n                package_name: packageName,\n                user_id: currUser,\n                package_days: selectMonth*30,\n                stream_number: parseInt(selectThread),\n            }\n\n            const responseOrder = await preOrderUserPackageApi(data);\n            if (responseOrder.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n                toast.success(t(`error_code.${MESSSAGE_STATUS_CODE.SUCCESS.code}`));\n                setTimeout(() =>{ \n                    history.push('#/admin/plan');\n                    window.location.reload();\n                },2000)\n            }\n            setLoading(false);\n        } catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n            setLoading(false);\n            console.log(err);\n        }\n    }\n\n    const checkCurrPackage = (currentUserPackage.package_name == packageName);\n\n    let TabPanelPurchaseNew = () => {\n        return (\n            <TabPanel>\n                <SimpleGrid columns='6' gap='20px' my=\"30px\" alignContent=\"center\">\n                    <Text fontSize='sm'>Gói cước mới</Text>\n                    <Text fontSize='l' fontWeight=\"600\" textTransform=\"uppercase\">\n                        <Badge borderRadius=\"4px\" variant='solid' color={infoPackage.textColor} colorScheme={infoPackage.packageColor}>\n                            {infoPackage.packageCode}\n                        </Badge>\n                    </Text>\n                    <Text fontSize='sm'>{\n                        checkCurrPackage  ? '(Đang sử dụng)' : ''\n                    }</Text>\n                </SimpleGrid>\n                {/* <SimpleGrid columns='6' gap='20px' my=\"30px\">\n                    <Text fontSize='sm'>Email của bạn</Text>\n                    <Text fontSize='md' fontWeight=\"600\">dddd</Text>\n                </SimpleGrid> */}\n                <SimpleGrid columns='6' gap='20px' my=\"30px\">\n                    <Text fontSize='sm'>Mô tả gói cước</Text>\n                    <Text fontSize='md' fontWeight=\"600\">{infoPackage.packageDetail && infoPackage.packageDetail[0]}</Text>\n                </SimpleGrid>\n                <SimpleGrid columns='6' gap='20px' my=\"30px\">\n                    <Text fontSize='sm'>Thời hạn</Text>\n                    <Select\n                        id=\"package_duration\"\n                        name=\"package_duration\"\n                        value={selectMonth}\n                        onChange={(e) => setSelectMonth(e.target.value)}\n                        autoComplete=\"package_duration\"\n                        focusBorderColor=\"brand.400\"\n                        shadow=\"sm\"\n                        size=\"md\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        { listPricingMonthly.map((item, id) => {\n                            return ( <option my=\"5px\" id={item.value} value={item.value}>{item.label}</option> )\n                        })}\n                    </Select>\n                </SimpleGrid>\n                <SimpleGrid columns='6' gap='20px' my=\"30px\">\n                    <Text fontSize='sm'>Số luồng livestream</Text>\n                    <Select\n                        id=\"thread\"\n                        name=\"thread\"\n                        value={selectThread}\n                        onChange={(e) => setSelectThread(e.target.value)}\n                        autoComplete=\"thread\"\n                        focusBorderColor=\"brand.400\"\n                        shadow=\"sm\"\n                        size=\"md\"\n                        w=\"full\"\n                        rounded=\"md\">\n                        { listStreamThread.map((item, id) => {\n                            return ( <option my=\"5px\" id={item.value} value={item.value}>{item.label}</option> )\n                        })}\n                    </Select>\n                </SimpleGrid>\n                <Grid\n                    my=\"30px\"\n                    templateRows='repeat(1, 1fr)'\n                    templateColumns='repeat(6, 1fr)'\n                    gap={4}\n                    >\n                    <GridItem colSpan={1}><Text fontSize='sm'>Thanh toán</Text></GridItem>\n                    <GridItem colSpan={5}>\n                        <Text fontSize='md' textDecoration=\"line-through\" color=\"gray\"fontWeight=\"600\">{infoPackage.pricePerMonth && infoPackage.pricePerMonth.toLocaleString()} VND</Text>\n                        <Text fontSize='md' color=\"blue\" fontWeight=\"600\" display=\"flex\">\n                            {infoPackage.total && (selectThread*selectMonth*infoPackage.total/100).toLocaleString()} VND\n                            <Tooltip label='Giảm giá 15%' hasArrow>\n                                <Icon as={IoInformationCircleSharp} w='24px' h='24px' color=\"blue\" />\n                            </Tooltip>\n                        </Text>\n                    </GridItem>\n                </Grid>\n                <Grid\n                    my=\"30px\"\n                    templateRows='repeat(1, 1fr)'\n                    templateColumns='repeat(6, 1fr)'\n                    gap={4}>\n                    <GridItem colSpan={1}><Text fontSize='sm'>Phương thức thanh toán</Text></GridItem>\n                    <GridItem colSpan={5} borderWidth=\"1px\" borderRadius=\"5px\" borderColor=\"gray.200\" px=\"15px\" py=\"15px\">\n                        <Grid\n                            templateRows='repeat(1, 1fr)'\n                            templateColumns='repeat(2, 1fr)'\n                            gap={4}>\n                            <GridItem colSpan={1}>\n                                <Text fontSize='sm' color=\"black\" fontWeight=\"200\" mb=\"5px\">\n                                    <Icon as={FaCheckCircle} w='12px' h='auto' color=\"green.500\" mr=\"5px\">1</Icon>\n                                    Đăng nhập vào <strong>Internet banking</strong> ( ngân hàng điện tử )\n                                </Text>\n                                <Text fontSize='sm' color=\"black\" fontWeight=\"200\">\n                                    <Icon as={FaCheckCircle} w='12px' h='auto' color=\"green.500\" mr=\"5px\">2</Icon> \n                                    Tạo giao dịch chuyển tiền tới tài khoản sau\n                                </Text>\n                                <Card my=\"10px\" p=\"20px\" bgColor=\"gray.200\"> \n                                    <Text fontSize='md' color=\"black\" fontWeight=\"700\">\n                                        Tran Thi Thuy Trang\n                                    </Text>\n                                    <Text fontSize='md' color=\"black\" fontWeight=\"700\">\n                                        1031154635\n                                    </Text>\n                                    <Text fontSize='md' color=\"black\" fontWeight=\"700\">\n                                        Vietcombank - Trụ sở CN Bảo Lộc\n                                    </Text>\n                                </Card>\n                                \n                                <Text fontSize='sm' color=\"red\" fontWeight=\"200\" mt=\"50px\">\n                                    ** Chú ý: Gói cước sẽ được nâng cấp sau khi khách hàng thanh toán thành công.\n                                </Text>\n                                <Text fontSize='sm' color=\"red\" fontWeight=\"200\">\n                                    ** Chuyển khoản thiếu không được nâng cấp, chuyển khoản thừa bị mất 10% phí xử lý\n                                </Text>\n                                <Text fontSize='sm' color=\"red\" fontWeight=\"200\">\n                                    ** Các giao dịch quá 15 ngày không báo kiểm tra sẽ không được xử lý\n                                </Text>\n                            </GridItem>\n                            <GridItem colSpan={1}>\n                                <Text fontSize='sm' color=\"black\" fontWeight=\"200\">\n                                    <Icon as={FaCheckCircle} w='12px' h='auto' color=\"green.500\" mr=\"5px\">3</Icon>\n                                        Hoặc quét <strong>Mã QR</strong>\n                                </Text>\n                                <Card display=\"flex\" justifyContent=\"center\" alignContent=\"center\" flexDirection=\"row\" boxShadow=\"none\">\n                                    <Image src={PaymentQRCode} h='316px'/>\n                                </Card>\n                            </GridItem>\n                        </Grid>\n                    </GridItem>\n                </Grid>\n                <SimpleGrid column={1} display=\"flex\" justifyContent=\"flex-end\">\n                    <Button \n                        width=\"20%\" h='44px' mr='20px' \n                        px=\"20px\" variant='brand' size='md'\n                        _active={{ bg: \"black\" }}\n                        _hover={{ bg: \"black\" }}\n                        onClick={handleSubmitPurchase}>           \n                        { loading ? <Spinner size='sm' color=\"white\"/> : !checkCurrPackage ? 'Mua gói' : 'Gia hạn' }\n                    </Button>\n                </SimpleGrid>\n            </TabPanel>\n        )\n    }\n    \n    let TabPanelExtendPackage = () => {\n        return (\n            <TabPanel>\n                <Grid\n                    my=\"30px\"\n                    templateRows='repeat(1, 1fr)'\n                    templateColumns='repeat(6, 1fr)'\n                    gap={4}>\n                    <GridItem colSpan={1}>\n                        <Text fontSize='lg'fontWeight='extrabold'>\n                            Tính năng đang phát triển\n                        </Text>\n                    </GridItem>\n                    <GridItem colSpan={1}>\n                        <Text fontSize='lg'>\n                            Tính năng đang phát triển\n                        </Text>\n                    </GridItem>\n                </Grid>\n            </TabPanel>\n        )\n    }\n    \n    return (\n        <>\n            <ModalPackageConfirm\n                isOpen={isOpen}\n                onClose={onClose}\n                // handleAddURLVideo={handleAddURLVideo}\n                // setInputValue={setInputValue}\n                // formik={formik}\n            />\n            <Box pt={{ base: \"130px\", md: \"80px\", xl: \"80px\" }}>\n                <Tabs size='md' variant='enclosed'>\n                    <TabList>\n                        <Tab\n                            _selected={{ color: 'white', bg: 'blue.500' }}\n                            >{ checkCurrPackage ? 'Gia hạn' : 'Mua gói' }</Tab>\n                        <Tab\n                            isDisabled={!checkCurrPackage}\n                            _selected={{ color: 'white', bg: 'blue.500' }}\n                            _active={{ color: 'white', bg: 'blue.500' }}\n                            _disabled={{ color: 'gray.400', bg: 'white' }}>Đổi gói</Tab>\n                    </TabList>\n                    <Card mb={{ base: \"0px\", \"2xl\": \"20px\" }} py={{ base: \"10px\" }} px={{ base: \"15px\" }}>\n                        <TabPanels>\n                            {TabPanelPurchaseNew()}\n                            {TabPanelExtendPackage()}\n                        </TabPanels>\n                    </Card>\n                </Tabs>\n            </Box>\n        </>\n    )\n};\n\nexport default PurchasePackage;","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\n// Chakra imports\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\n\n// Layout components\nimport SidebarContext from \"../../contexts\";\n\nimport { routesForNotAuthenticated } from \"../../routes.js\";\n\n// Custom Chakra theme\nexport default function Auth() {\n  // states and functions\n  const [toggleSidebar, setToggleSidebar] = useState(false);\n  const getRoute = () => {\n    return window.location.pathname !== \"/auth/full-screen-maps\";\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      if (prop.collapse) {\n        return getRoutes(prop.items);\n      }\n      if (prop.category) {\n        return getRoutes(prop.items);\n      } else {\n        return null;\n      }\n    });\n  };\n  const authBg = useColorModeValue(\"white\", \"navy.900\");\n  document.documentElement.dir = \"ltr\";\n  return (\n    <Box>\n      <SidebarContext.Provider\n        value={{\n          toggleSidebar,\n          setToggleSidebar,\n        }}>\n        <Box\n          bg={authBg}\n          float='right'\n          minHeight='100vh'\n          height='100%'\n          position='relative'\n          w='100%'\n          transition='all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)'\n          transitionDuration='.2s, .2s, .35s'\n          transitionProperty='top, bottom, width'\n          transitionTimingFunction='linear, linear, ease'>\n          { getRoute() ? (\n            <Box mx='auto' minH='100vh'>\n              <Switch>\n                {getRoutes(routesForNotAuthenticated)}\n                <Redirect from='/auth' to='/auth/sign-in' />\n              </Switch>\n            </Box>\n          ) : null}\n        </Box>\n      </SidebarContext.Provider>\n    </Box>\n  );\n}\n","/* eslint-disable */\n// Chakra imports\nimport { Portal, Box, useDisclosure, Stack, useColorModeValue } from '@chakra-ui/react';\n// Layout components\nimport { routeBlank } from '../../routes';\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useAuth } from '../../contexts/authenContext';\nimport history from '../../utils/history';\nimport { MESSSAGE_STATUS_CODE, MK_AGENCY_PROVIDER } from '../../variables';\nimport { useTranslation } from 'react-i18next';\nimport { fetchProfileDetail } from '../../api/Auth';\nimport { toast } from 'react-toastify';\n\n// Custom Chakra theme\nexport default function Blank(props) {\n\tconst { t } = useTranslation();\n\tconst {\n\t\tprofile,\n\t\tsetProfile\n\t} = useAuth();\n\n    const fetchCurrentUser = async () => {\n\t\ttry {\n\t\t\tconst responseProfile = await fetchProfileDetail({}, {\n\t\t\t\theaders: {\n\t\t\t\t\tAgency: MK_AGENCY_PROVIDER\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (responseProfile.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n\t\t\t\tsetProfile(JSON.stringify(responseProfile.data.data));\n\t\t\t}\n\t\t} catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n\tuseEffect(() => {\n\t\tfetchCurrentUser();\n\t}, []);\n\n\tdocument.documentElement.dir = 'ltr';\n\tconst mappingRouteByRole = [];\n\n\t// Handle thêm trường hợp token hết hạn, không sử dụng được.\n\trouteBlank.map((object) => {\n\t\tif (profile !== null && object.role.includes(JSON.parse(profile).group.role)) {\n\t\t\treturn mappingRouteByRole.push(object);\n\t\t}\n\t\treturn;\n\t});\n\n\tconst getRoutes = (routes) => {\n\t\tlet routesFinal = []\n\t\troutes.map((prop, key) => {\n\t\t\tif (prop.layout === '/general') {\n\t\t\t\tif (prop.children && prop.children.length != 0) {\n\t\t\t\t\troutesFinal.push(prop.children.map((child, key_child) => {\n\t\t\t\t\t\treturn <Route path={prop.layout + child.path} exact component={child.component} key={key_child} />;\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\troutesFinal.push(<Route path={prop.layout + prop.path} exact component={prop.component} key={key} />);\n\t\t\t}\n\t\t\tif (prop.collapse) {\n\t\t\t\troutesFinal.push(getRoutes(prop.items));\n\t\t\t}\n\t\t\tif (prop.children) {\n\t\t\t\troutesFinal.push(<Route path={prop.layout + prop.children.path} component={prop.children.component} key={`${key}-children`} />);\n\t\t\t}\n\t\t\tif (prop.category) {\n\t\t\t\troutesFinal.push(getRoutes(prop.items));\n\t\t\t}\n\t\t});\n\t\treturn routesFinal;\n\t};\n\n\tconst handleRenderRoutes = () => {\n\t\treturn (\n\t\t\t<Box minH='100vh'>\n\t\t\t\t<Switch>\n\t\t\t\t\t{getRoutes([...mappingRouteByRole] || [])}\n\t\t\t\t</Switch>\n\t\t\t</Box>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tbg=\"white\"\n\t\t\tm=\"0px\" p=\"0px\"\n\t\t\tfloat='right'\n\t\t\tminHeight='100vh'\n\t\t\theight='100%'\n\t\t\tposition='relative'\n\t\t\tw='100%'\n\t\t\ttransition='all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)'\n\t\t\ttransitionDuration='.2s, .2s, .35s'\n\t\t\ttransitionProperty='top, bottom, width'\n\t\t\ttransitionTimingFunction='linear, linear, ease'>\n\t\t\t{ handleRenderRoutes() }\n\t\t</Box>\n\t);\n}\n","/* eslint-disable */\nimport {\n\tFlex,\n\tMenu,\n\tMenuButton,\n\tMenuItem,\n\tMenuList,\n\tTooltip,\n\tText,\n\tuseColorModeValue,\n\tIcon\n} from '@chakra-ui/react';\n\n// Custom Components\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport history from '../../utils/history';\nimport { useAuth } from '../../contexts/authenContext';\nimport { MESSSAGE_STATUS_CODE, MK_AGENCY_PROVIDER } from '../../variables';\nimport { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons';\n\n// import avatar from \"../../assets/img/avatars/avatar.png\"\nimport { fetchProfileDetail } from '../../api/Auth';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport AvatarText from '../../components/AvatarText';\n\nexport default function AdminNavbarLinks(props) {\n\tconst { secondary } = props;\n\t// Chakra Color Mode\n\tconst textColor = useColorModeValue('secondaryGray.900', 'white');\n\tconst borderColor = useColorModeValue('#E6ECFA', 'rgba(135, 140, 189, 0.3)');\n\tconst shadow = useColorModeValue(\n\t\t'14px 17px 40px 4px rgba(112, 144, 176, 0.18)',\n\t\t'14px 17px 40px 4px rgba(112, 144, 176, 0.06)'\n\t);\n\n\tconst [profile_, setProfile_] = useState({});\n\n\tconst { t } = useTranslation();\n\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tconst toggleMenu = () => {\n\t\tsetIsOpen((prev) => !prev);\n\t};\n\n\tconst fetchCurrentUser = async () => {\n\t\ttry {\n\t\t\tconst responseProfile = await fetchProfileDetail({}, {\n\t\t\t\theaders: {\n\t\t\t\t\tAgency: MK_AGENCY_PROVIDER\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (responseProfile.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n\t\t\t\tsetProfile_(responseProfile?.data?.data);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (err?.response) {\n\t\t\t\ttoast.error(t(`error_code.${err?.response?.data?.error_code}`));\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tfetchCurrentUser();\n\t}, []);\n\n\tconst { setToken } = useAuth();\n\n\tconst handleLogoutEvent = () => {\n\t\tsetToken();\n\t\thistory.push('#/auth/sign-in');\n\t};\n\n\tconst handleRedirectPersonalProfile = () => {\n\t\thistory.push('#/admin/profile');\n\t\twindow.location.reload();\n\t}\n\n\treturn (\n\t\t<Flex\n\t\t\talignItems=\"center\"\n\t\t\tflexDirection=\"row\"\n\t\t\tflexWrap={secondary ? { base: 'wrap', md: 'nowrap' } : 'unset'}\n\t\t\tp=\"1px\"\n\t\t\tbg=\"transparent\"\n\t\t>\n\t\t\t<Menu isOpen={isOpen}>\n\t\t\t\t<MenuButton\n\t\t\t\t\tborderRadius=\"full\"\n\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\tonClick={toggleMenu}\n\t\t\t\t\t_hover={{ bg: 'gray.200' }}\n\t\t\t\t\tstyle={{ outline: '1px solid #b7caa1bf', marginLeft: '-20px', backgroundColor: 'white' }}\n\t\t\t\t>\n\t\t\t\t\t<Flex alignItems=\"center\">\n\t\t\t\t\t\t<AvatarText name={profile_?.fullname} inputSize=\"md\" />\n\t\t\t\t\t\t<span style={{ fontWeight: '400', color: 'black', margin: 'auto 6px' }}>{profile_?.fullname}</span>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tas={isOpen ? ChevronUpIcon : ChevronDownIcon}\n\t\t\t\t\t\t\tw={5}\n\t\t\t\t\t\t\th={5}\n\t\t\t\t\t\t\tcolor={'secondaryGray.700'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Flex>\n\t\t\t\t</MenuButton>\n\t\t\t\t<MenuList\n\t\t\t\t\tboxShadow={shadow}\n\t\t\t\t\tp=\"0px\"\n\t\t\t\t\tmt=\"10px\"\n\t\t\t\t\tborderRadius=\"8px\"\n\t\t\t\t\tborder=\"none\"\n\t\t\t\t>\n\t\t\t\t\t<Flex w=\"100%\" mb=\"0px\" flexDirection=\"row\" alignItems=\"center\" style={{ margin: 'auto 20px' }}>\n\t\t\t\t\t\t<AvatarText name={profile_?.fullname} inputSize=\"lg\" />\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tps=\"5px\"\n\t\t\t\t\t\t\tpt=\"10px\"\n\t\t\t\t\t\t\tpb=\"7px\"\n\t\t\t\t\t\t\tw=\"auto\"\n\t\t\t\t\t\t\tborderColor={borderColor}\n\t\t\t\t\t\t\tfontSize=\"sm\"\n\t\t\t\t\t\t\tfontWeight=\"400\"\n\t\t\t\t\t\t\tcolor={textColor}\n\t\t\t\t\t\t\ttextAlign=\"left\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{profile_ ? (\n\t\t\t\t\t\t\t<span style={{ fontWeight: 700 }}>{profile_?.fullname}</span>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>'Chào bạn'</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<p style={{ textAlign: 'left' }}>\n\t\t\t\t\t\t\t{profile_?.email}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Flex>\n\n\n\t\t\t\t\t<Flex flexDirection=\"column\" p=\"10px\">\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tborderRadius=\"8px\"\n\t\t\t\t\t\t\tpx=\"14px\"\n\t\t\t\t\t\t\tfontSize=\"md\"\n\t\t\t\t\t\t\tonClick={handleRedirectPersonalProfile}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text fontSize=\"sm\">Thông tin cá nhân</Text>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t_hover={{ bg: 'red.100' }}\n\t\t\t\t\t\t\t_focus={{ bg: 'red.100' }}\n\t\t\t\t\t\t\tonClick={handleLogoutEvent}\n\t\t\t\t\t\t\tcolor=\"red.400\"\n\t\t\t\t\t\t\tborderRadius=\"8px\"\n\t\t\t\t\t\t\tfontSize=\"md\"\n\t\t\t\t\t\t\tpx=\"14px\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text fontSize=\"sm\">Đăng xuất</Text>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</Flex>\n\t\t\t\t</MenuList>\n\t\t\t</Menu>\n\t\t</Flex>\n\t);\n}\n\nAdminNavbarLinks.propTypes = {\n\tvariant: PropTypes.string,\n\tfixed: PropTypes.bool,\n\tsecondary: PropTypes.bool\n};\n","/* eslint-disable */\nimport {\n\tBox,\n\tFlex, Icon, Link, Text, useColorModeValue,\n\tGrid, GridItem, useMediaQuery\n} from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport AdminNavbarLinks from './NavbarLinksAdmin';\nimport { IoMenuOutline } from 'react-icons/io5';\n\nexport default function AdminNavbar(props) {\n\tconst [scrolled, setScrolled] = useState(false);\n\tconst [isSmallThan1200] = useMediaQuery('(max-width: 1200px)')\n\tconst changeNavbar = () => {\n\t\tif (window.scrollY > 1) {\n\t\t\tsetScrolled(true);\n\t\t} else {\n\t\t\tsetScrolled(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('scroll', changeNavbar);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', changeNavbar);\n\t\t};\n\t});\n\n\tconst { secondary, message, brandText, btnRef, onOpenLeftMenu } = props;\n\n\t// Here are all the props that may change depending on navbar's type or state.(secondary, variant, scrolled)\n\tconst mainText = useColorModeValue('navy.700', 'white');\n\tconst navbarPosition = 'fixed';\n\tconst navbarFilter = 'none';\n\tconst navbarBackdrop = 'blur(20px)';\n\tconst navbarShadow = 'none';\n\tconst navbarBg = useColorModeValue('rgba(244, 247, 254, 0.2)', 'rgba(11,20,55,0.5)');\n\tconst navbarBorder = 'transparent';\n\tconst secondaryMargin = '0px';\n\tlet menuColor = useColorModeValue(\"gray.600\", \"white\");\n\tconst gap = '0px';\n\n\treturn (\n\t\t<Box\n\t\t\tposition={navbarPosition}\n\t\t\tboxShadow={navbarShadow}\n\t\t\tbg={navbarBg}\n\t\t\tborderColor={navbarBorder}\n\t\t\tfilter={navbarFilter}\n\t\t\tbackdropFilter={navbarBackdrop}\n\t\t\tbackgroundPosition='center'\n\t\t\tbackgroundSize='cover'\n\t\t\tborderRadius='16px'\n\t\t\tborderWidth='1.5px'\n\t\t\tborderStyle='solid'\n\t\t\ttransitionDelay='0s, 0s, 0s, 0s'\n\t\t\ttransitionDuration=' 0.25s, 0.25s, 0.25s, 0s'\n\t\t\ttransition-property='box-shadow, background-color, filter, border'\n\t\t\ttransitionTimingFunction='linear, linear, linear, linear'\n\t\t\talignItems={{ xl: 'center' }}\n\t\t\tdisplay={secondary ? 'block' : 'flex'}\n\t\t\tminH='75px'\n\t\t\tjustifyContent={{ xl: 'center' }}\n\t\t\tlineHeight='25.6px'\n\t\t\tmx='auto'\n\t\t\tmt={secondaryMargin}\n\t\t\tpb='8px'\n\t\t\tright={{ base: '12px', md: '30px', lg: '30px', xl: '30px' }}\n\t\t\tpt='8px'\n\t\t\ttop={{ base: '12px', md: '16px', lg: '20px', xl: '20px' }}\n\t\t\tw={{\n\t\t\t\tbase: 'calc(100vw - 6%)',\n\t\t\t\tmd: 'calc(100vw - 8%)',\n\t\t\t\tlg: 'calc(100vw - 6%)',\n\t\t\t\txl: 'calc(100vw - 350px)',\n\t\t\t\t'2xl': 'calc(100vw - 365px)'\n\t\t\t}}>\n\t\t\t<Flex\n\t\t\t\tw='100%'\n\t\t\t\tflexDirection={{\n\t\t\t\t\tsm: 'column',\n\t\t\t\t\tmd: 'row'\n\t\t\t\t}}\n\t\t\t\talignItems={{ xl: 'center' }}\n\t\t\t\tmb={gap}>\n\t\t\t\t<Box mb={{ sm: '8px', md: '0px' }}>\n\t\t\t\t\t{ isSmallThan1200 ? (\t\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\ttemplateRows='repeat(1, 1fr)'\n\t\t\t\t\t\t\ttemplateColumns='repeat(2, 1fr)'\n\t\t\t\t\t\t\tgap={2}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<GridItem colSpan={1} margin=\"auto 0\">\n\t\t\t\t\t\t\t\t<Flex ref={btnRef} onClick={onOpenLeftMenu} >\n\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\tas={IoMenuOutline}\n\t\t\t\t\t\t\t\t\t\tcolor={menuColor}\n\t\t\t\t\t\t\t\t\t\tw='30px'\n\t\t\t\t\t\t\t\t\t\th='30px'\n\t\t\t\t\t\t\t\t\t\t_hover={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t\t<GridItem colSpan={1} margin=\"auto 0\">\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcolor={mainText}\n\t\t\t\t\t\t\t\t\thref=''\n\t\t\t\t\t\t\t\t\tbg='inherit'\n\t\t\t\t\t\t\t\t\tborderRadius='inherit'\n\t\t\t\t\t\t\t\t\tfontWeight='bold'\n\t\t\t\t\t\t\t\t\tfontSize='18px'\n\t\t\t\t\t\t\t\t\t_hover={{ color: { mainText } }}\n\t\t\t\t\t\t\t\t\t_active={{\n\t\t\t\t\t\t\t\t\t\tbg: 'inherit',\n\t\t\t\t\t\t\t\t\t\ttransform: 'none',\n\t\t\t\t\t\t\t\t\t\tborderColor: 'transparent'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t_focus={{\n\t\t\t\t\t\t\t\t\t\tboxShadow: 'none'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{brandText}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t) : (\t\t\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tcolor={mainText}\n\t\t\t\t\t\t\t\thref=''\n\t\t\t\t\t\t\t\tbg='inherit'\n\t\t\t\t\t\t\t\tborderRadius='inherit'\n\t\t\t\t\t\t\t\tfontWeight='bold'\n\t\t\t\t\t\t\t\tfontSize='18px'\n\t\t\t\t\t\t\t\t_hover={{ color: { mainText } }}\n\t\t\t\t\t\t\t\t_active={{\n\t\t\t\t\t\t\t\t\tbg: 'inherit',\n\t\t\t\t\t\t\t\t\ttransform: 'none',\n\t\t\t\t\t\t\t\t\tborderColor: 'transparent'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t_focus={{\n\t\t\t\t\t\t\t\t\tboxShadow: 'none'\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{brandText}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t) }\n\t\t\t\t</Box>\n\t\t\t\t<Box\n\t\t\t\t\tms=\"auto\"\n\t\t\t\t\th=\"45px\"\n\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\tborderRadius=\"full\"\n\t\t\t\t>\n\t\t\t\t\t<AdminNavbarLinks\n\t\t\t\t\t\tonOpen={props.onOpen}\n\t\t\t\t\t\tlogoText={props.logoText}\n\t\t\t\t\t\tsecondary={props.secondary}\n\t\t\t\t\t\tfixed={props.fixed}\n\t\t\t\t\t\tscrolled={scrolled}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\n\t\t\t</Flex>\n\t\t\t{secondary ? <Text color='white'>{message}</Text> : null}\n\t\t</Box>\n\t);\n}\n\nAdminNavbar.propTypes = {\n\tbrandText: PropTypes.string,\n\tvariant: PropTypes.string,\n\tsecondary: PropTypes.bool,\n\tfixed: PropTypes.bool,\n\tonOpen: PropTypes.func\n};\n","/* eslint-disable */\nimport { Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst HSeparator = (props) => {\n  const { variant, children, ...rest } = props;\n  return <Flex h='1px' w='100%' bg='rgba(135, 140, 189, 0.3)' {...rest}></Flex>;\n};\n\nconst VSeparator = (props) => {\n  const { variant, children, ...rest } = props;\n  return <Flex w='1px' bg='rgba(135, 140, 189, 0.3)' {...rest}></Flex>;\n};\n\nexport { HSeparator, VSeparator };\n","/* eslint-disable */\nimport React from \"react\";\n\n// Chakra imports\nimport { Flex, Image, useColorModeValue } from \"@chakra-ui/react\";\n\n// Custom components\nimport logo from \"../../../assets/img/logo.svg\"\nimport { HSeparator } from \"../../../components/separator/Separator\";\n\nexport function SidebarBrand() {\n  //   Chakra color mode\n  let logoColor = useColorModeValue(\"navy.700\", \"white\");\n\n  return (\n    <Flex align='center' direction='column'>\n      {/* <HorizonLogo h='50px' w='175px' my='32px' color={logoColor} /> */}\n      <Image src={logo} h='70px' w='175px' my='32px' />\n      <HSeparator mb='20px' />\n    </Flex>\n  );\n}\n\nexport default SidebarBrand;\n","/* eslint-disable */\nimport React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n// chakra imports\nimport { Box, Flex, HStack, Text, useColorModeValue } from \"@chakra-ui/react\";\n\nexport function SidebarLinks(props) {\n  //   Chakra color mode\n  let location = useLocation();\n  let activeColor = useColorModeValue(\"gray.700\", \"white\");\n  let inactiveColor = useColorModeValue(\n    \"secondaryGray.600\",\n    \"secondaryGray.600\"\n  );\n  let activeIcon = useColorModeValue(\"brand.500\", \"white\");\n  let textColor = useColorModeValue(\"secondaryGray.500\", \"white\");\n  let brandColor = useColorModeValue(\"brand.500\", \"brand.400\");\n\n  const { routes } = props;\n\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname.includes(routeName);\n  };\n\n  // this function creates the links from the secondary accordions (for example auth -> sign-in -> default)\n  const createLinks = (routes) => {\n    return routes.map((route, index) => {\n      if (route.category) {\n        return (\n          <>\n            <Text\n              fontSize={\"md\"}\n              color={activeColor}\n              fontWeight='bold'\n              mx='auto'\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              pt='18px'\n              pb='12px'\n              key={index}>\n              {route.name}\n            </Text>\n            {createLinks(route.items)}\n          </>\n        );\n      } else if (\n        route.layout === \"/admin\" ||\n        route.layout === \"/auth\" ||\n        route.layout === \"/rtl\"\n      ) {\n        return (\n          <NavLink key={index} to={route.layout + route.path}>\n            {route.icon ? (\n              <Box>\n                <HStack\n                  spacing={\n                    activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\"\n                  }\n                  py='5px'\n                  ps='10px'>\n                  <Flex w='100%' alignItems='center' justifyContent='center'>\n                    <Box\n                      color={ activeRoute(route.path.toLowerCase()) ? activeIcon : textColor }\n                      me='18px'>\n                      {route.icon}\n                    </Box>\n                    <Text\n                      me='auto'\n                      color={\n                        activeRoute(route.path.toLowerCase())\n                          ? activeColor\n                          : textColor\n                      }\n                      fontWeight={\n                        activeRoute(route.path.toLowerCase())\n                          ? \"600\"\n                          : \"normal\"\n                      }>\n                      {route.name}\n                    </Text>\n                  </Flex>\n                  <Box\n                    h='36px'\n                    w='4px'\n                    bg={\n                      activeRoute(route.path.toLowerCase())\n                        ? brandColor\n                        : \"transparent\"\n                    }\n                    borderRadius='5px'\n                  />\n                </HStack>\n              </Box>\n            ) : (\n              <Box>\n                <HStack\n                  spacing={\n                    activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\"\n                  }\n                  py='5px'\n                  ps='10px'>\n                  <Text\n                    me='auto'\n                    color={\n                      activeRoute(route.path.toLowerCase())\n                        ? activeColor\n                        : inactiveColor\n                    }\n                    fontWeight={\n                      activeRoute(route.path.toLowerCase()) ? \"600\" : \"normal\"\n                    }>\n                    {route.name}\n                  </Text>\n                  <Box h='36px' w='4px' bg='brand.400' borderRadius='5px' />\n                </HStack>\n              </Box>\n            )}\n          </NavLink>\n        );\n      }\n    });\n  };\n  //  BRAND\n  return createLinks(routes);\n}\n\nexport default SidebarLinks;\n","/* eslint-disable */\nimport React from \"react\";\n\nexport default function SidebarDocs() {\n  return (\n    <></>\n  );\n}\n","/* eslint-disable */\n// chakra imports\nimport { Box, Flex, Stack } from \"@chakra-ui/react\";\n//   Custom components\nimport Brand from \"../../../components/sidebar/components/Brand\";\nimport Links from \"../../../components/sidebar/components/Links\";\nimport React from \"react\";\nimport SidebarCard from \"../../../components/sidebar/components/SidebarCard\";\n\n// FUNCTIONS\n\nfunction SidebarContent(props) {\n  const { routes } = props;\n  // SIDEBAR\n  return (\n    <Flex direction='column' height='100%' pt='25px' px=\"16px\" borderRadius='30px'>\n      <Brand />\n      <Stack direction='column' mb='auto' mt='8px'>\n        <Box ps='20px' pe={{ md: \"16px\", \"2xl\": \"1px\" }}>\n          <Links routes={routes} />\n        </Box>\n      </Stack>\n      <Box\n        mt='60px'\n        mb='40px'\n        borderRadius='30px'>\n        <SidebarCard />\n      </Box>\n    </Flex>\n  );\n}\n\nexport default SidebarContent;\n","/* eslint-disable */\nimport { Box } from \"@chakra-ui/react\";\n\nimport React from \"react\";\n\nexport const renderTrack = ({ style, ...props }) => {\n  const trackStyle = {\n    position: \"absolute\",\n    maxWidth: \"100%\",\n    width: 10,\n    transition: \"opacity 200ms ease 0s\",\n    opacity: 0,\n    background: \"transparent\",\n    bottom: 2,\n    top: 2,\n    borderRadius: 3,\n    right: 0,\n  };\n  return <div style={{ ...style, ...trackStyle }} {...props} />;\n};\nexport const renderThumb = ({ style, ...props }) => {\n  const thumbStyle = {\n    borderRadius: 15,\n    background: \"rgba(222, 222, 222, .1)\",\n  };\n\n  return <div style={{ ...style, ...thumbStyle }} {...props} />;\n};\nexport const renderView = ({ style, ...props }) => {\n  const viewStyle = {\n    marginBottom: -22,\n  };\n  return (\n    <Box\n      me={{ base: \"0px !important\", lg: \"-16px !important\" }}\n      style={{ ...style, ...viewStyle }}\n      {...props}\n    />\n  );\n};","/* eslint-disable */\nimport React, { useRef } from \"react\";\n\n// chakra imports\nimport {\n  Box,\n  Flex,\n  Drawer,\n  DrawerBody,\n  Icon,\n  useColorModeValue,\n  DrawerOverlay,\n  useDisclosure,\n  DrawerContent,\n  DrawerCloseButton,\n} from \"@chakra-ui/react\";\nimport Content from \"../../components/sidebar/components/Content\";\nimport {\n  renderThumb,\n  renderTrack,\n  renderView,\n} from \"../../components/scrollbar/Scrollbar\";\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\nimport PropTypes from \"prop-types\";\n\n// Assets\nimport { IoMenuOutline } from \"react-icons/io5\";\n\nfunction Sidebar(props) {\n  const { routes, btnRef, isOpen, onClose } = props;\n\n  let variantChange = \"0.2s linear\";\n  let shadow = useColorModeValue(\n    \"14px 17px 40px 4px rgba(112, 144, 176, 0.08)\",\n    \"unset\"\n  );\n  // Chakra Color Mode\n  let sidebarBg = useColorModeValue(\"white\", \"navy.800\");\n  let sidebarMargins = \"0px\";\n\n  // SIDEBAR\n  return (\n    <>\n      <Box display={{ sm: \"none\", xl: \"block\" }} w=\"100%\" position='fixed' minH='100%'>\n        <Box\n          bg={sidebarBg}\n          transition={variantChange}\n          w='300px'\n          h='100vh'\n          m={sidebarMargins}\n          minH='100%'\n          overflowX='hidden'\n          boxShadow={shadow}>\n          <Scrollbars\n            autoHide\n            renderTrackVertical={renderTrack}\n            renderThumbVertical={renderThumb}\n            renderView={renderView}>\n            <Content routes={routes} />\n          </Scrollbars>\n        </Box>\n      </Box>\n      <Flex display={{ sm: \"flex\", xl: \"none\" }} alignItems='center' borderRadius={3} bgColor={\"blackAlpha.100\"}>\n        <Drawer\n          isOpen={isOpen}\n          placement='left'\n          onClose={onClose}\n          finalFocusRef={btnRef}\n        >\n          <DrawerOverlay />\n          <DrawerContent w='285px' maxW='285px'>\n            <DrawerCloseButton\n              zIndex='13'\n              onClose={onClose}\n              _focus={{ boxShadow: \"none\" }}\n              _hover={{ boxShadow: \"none\" }}\n            />\n            <DrawerBody maxW='285px' px='0rem' pb='0'>\n              <Scrollbars\n                // autoHide\n                renderTrackVertical={renderTrack}\n                renderThumbVertical={renderThumb}\n                renderView={renderView}>\n                <Content routes={routes} />\n              </Scrollbars>\n            </DrawerBody>\n          </DrawerContent>\n        </Drawer>\n      </Flex>\n    </>\n  );\n}\n\n// FUNCTIONS\nexport function SidebarResponsive(props) {\n  let sidebarBackgroundColor = useColorModeValue(\"white\", \"navy.800\");\n  let menuColor = useColorModeValue(\"gray.600\", \"white\");\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n\n  const { routes } = props;\n  return (\n    <Flex display={{ sm: \"flex\", xl: \"none\" }} alignItems='center' borderRadius={3} bgColor={\"blackAlpha.100\"}>\n      <Flex ref={btnRef} onClick={onOpen}>\n        <Icon\n          as={IoMenuOutline}\n          color={menuColor}\n          my='auto'\n          _hover={{ cursor: \"pointer\" }}\n        />\n      </Flex>\n      <Drawer\n        isopen={isOpen}\n        onClose={onClose}\n        placement={document.documentElement.dir === \"rtl\" ? \"right\" : \"left\"}\n        finalFocusRef={btnRef}>\n        <DrawerOverlay />\n        <DrawerContent w='285px' maxW='285px' bg={sidebarBackgroundColor}>\n          <DrawerCloseButton\n            zIndex='3'\n            onClose={onClose}\n            _focus={{ boxShadow: \"none\" }}\n            _hover={{ boxShadow: \"none\" }}\n          />\n          <DrawerBody maxW='285px' px='0rem' pb='0'>\n            <Scrollbars\n              autoHide\n              renderTrackVertical={renderTrack}\n              renderThumbVertical={renderThumb}\n              renderView={renderView}>\n              <Content routes={routes} />\n            </Scrollbars>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </Flex>\n  );\n}\n\nSidebar.propTypes = {\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  variant: PropTypes.string,\n};\n\nexport default Sidebar;\n","/* eslint-disable */\n// Chakra imports\nimport { Portal, Box, useDisclosure } from '@chakra-ui/react';\n// Layout components\nimport Navbar from '../../components/navbar/NavbarAdmin';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport SidebarContext from '../../contexts/index';\nimport { routesForAuthenticated, routePayments } from '../../routes';\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { useAuth } from '../../contexts/authenContext';\nimport { MESSSAGE_STATUS_CODE, MK_AGENCY_PROVIDER } from '../../variables';\nimport { useTranslation } from 'react-i18next';\nimport { fetchProfileDetail } from '../../api/Auth';\nimport { toast } from 'react-toastify';\n\n// Custom Chakra theme\nexport default function Dashboard(props) {\n\tconst { ...rest } = props;\n\tconst { t } = useTranslation();\n\n\tconst [ fixed ] = useState(false);\n\tconst btnRef = React.useRef();\n\tconst [ toggleSidebar, setToggleSidebar ] = useState(false);\n\n\tconst { \n\t\tisOpen: isOpenLeftMenu,\n\t\tonOpen: onOpenLeftMenu,\n\t\tonClose: onCloseLeftMenu\n\t  } = useDisclosure();\n\n\tconst {\n\t\tprofile,\n\t\tsetProfile\n\t} = useAuth();\n\n    const fetchCurrentUser = async () => {\n\t\ttry {\n\t\t\tconst responseProfile = await fetchProfileDetail({}, {\n\t\t\t\theaders: {\n\t\t\t\t\tAgency: MK_AGENCY_PROVIDER\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (responseProfile.status === MESSSAGE_STATUS_CODE.SUCCESS.code) {\n\t\t\t\tsetProfile(JSON.stringify(responseProfile.data.data));\n\t\t\t}\n\t\t} catch (err) {\n            if (err.response) {\n                toast.error(t(`error_code.${err.response.data.error_code}`));\n            }\n        }\n    }\n\n\tuseEffect(() => {\n\t\tfetchCurrentUser();\n\t}, []);\n\n\tdocument.documentElement.dir = 'ltr';\n\tconst { onOpen } = useDisclosure();\n\t\n\t\n\tconst mappingRouteByRole = [];\n\n\tlet routeForRender = [...routesForAuthenticated];\n\n\tif (profile !== null && JSON.parse(profile).other_info?.show_payment === true) {\n\t\trouteForRender = [...routesForAuthenticated, ...routePayments];\n\t}\n\n\t// Handle thêm trường hợp token hết hạn, không sử dụng được.\n\trouteForRender.map((object) => {\n\t\tif (profile !== null && object.role.includes(JSON.parse(profile).group.role)) {\n\t\t\treturn mappingRouteByRole.push(object);\n\t\t}\n\t\treturn;\n\t});\n\n\t// functions for changing the states from components\n\tconst getRoute = () => {\n\t\treturn window.location.pathname !== '/admin/full-screen-maps';\n\t};\n\tconst getActiveRoute = (routes) => {\n\t\tlet activeRoute = 'MKStream';\n\t\tfor (let i = 0; i < routes.length; i++) {\n\t\t\tif (routes[i].collapse) {\n\t\t\t\tlet collapseActiveRoute = getActiveRoute(routes[i].items);\n\t\t\t\tif (collapseActiveRoute !== activeRoute) {\n\t\t\t\t\treturn collapseActiveRoute;\n\t\t\t\t}\n\t\t\t} else if (routes[i].category) {\n\t\t\t\tlet categoryActiveRoute = getActiveRoute(routes[i].items);\n\t\t\t\tif (categoryActiveRoute !== activeRoute) {\n\t\t\t\t\treturn categoryActiveRoute;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1) {\n\t\t\t\t\treturn routes[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn activeRoute;\n\t};\n\n\tconst getActiveNavbar = (routes) => {\n\t\tlet activeNavbar = false;\n\t\tfor (let i = 0; i < routes.length; i++) {\n\t\t\tif (routes[i].collapse) {\n\t\t\t\tlet collapseActiveNavbar = getActiveNavbar(routes[i].items);\n\t\t\t\tif (collapseActiveNavbar !== activeNavbar) {\n\t\t\t\t\treturn collapseActiveNavbar;\n\t\t\t\t}\n\t\t\t} else if (routes[i].category) {\n\t\t\t\tlet categoryActiveNavbar = getActiveNavbar(routes[i].items);\n\t\t\t\tif (categoryActiveNavbar !== activeNavbar) {\n\t\t\t\t\treturn categoryActiveNavbar;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1) {\n\t\t\t\t\treturn routes[i].secondary;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn activeNavbar;\n\t};\n\n\tconst getActiveNavbarText = (routes) => {\n\t\tlet activeNavbar = false;\n\t\tfor (let i = 0; i < routes.length; i++) {\n\t\t\tif (routes[i].collapse) {\n\t\t\t\tlet collapseActiveNavbar = getActiveNavbarText(routes[i].items);\n\t\t\t\tif (collapseActiveNavbar !== activeNavbar) {\n\t\t\t\t\treturn collapseActiveNavbar;\n\t\t\t\t}\n\t\t\t} else if (routes[i].category) {\n\t\t\t\tlet categoryActiveNavbar = getActiveNavbarText(routes[i].items);\n\t\t\t\tif (categoryActiveNavbar !== activeNavbar) {\n\t\t\t\t\treturn categoryActiveNavbar;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1) {\n\t\t\t\t\treturn routes[i].messageNavbar;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn activeNavbar;\n\t};\n\n\tconst getRoutes = (routes) => {\n\t\tlet routesFinal = []\n\t\troutes.map((prop, key) => {\n\t\t\tif (prop.layout === '/admin') {\n\t\t\t\tif (prop.children && prop.children.length != 0) {\n\t\t\t\t\troutesFinal.push(prop.children.map((child, key_child) => {\n\t\t\t\t\t\treturn <Route path={prop.layout + child.path} exact component={child.component} key={key_child} />;\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\troutesFinal.push(<Route path={prop.layout + prop.path} exact component={prop.component} key={key} />);\n\t\t\t}\n\t\t\tif (prop.collapse) {\n\t\t\t\troutesFinal.push(getRoutes(prop.items));\n\t\t\t}\n\t\t\tif (prop.children) {\n\t\t\t\troutesFinal.push(<Route path={prop.layout + prop.children.path} component={prop.children.component} key={`${key}-children`} />);\n\t\t\t}\n\t\t\tif (prop.category) {\n\t\t\t\troutesFinal.push(getRoutes(prop.items));\n\t\t\t}\n\t\t});\n\t\treturn routesFinal;\n\t};\n\n\tconst handleRenderRoutes = () => {\n\t\treturn (\n\t\t\t<Box mx='auto' p={{ base: '20px', md: '30px' }} pe='20px' minH='100vh' pt='30px'>\n\t\t\t\t<Switch>\n\t\t\t\t\t{getRoutes([...mappingRouteByRole] || [])}\n\t\t\t\t\t<Redirect from='/' to='/admin/home-page' />\n\t\t\t\t\t\n\t\t\t\t</Switch>\n\t\t\t</Box>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Box>\n\t\t\t\t<SidebarContext.Provider\n\t\t\t\t\tvalue={{\n\t\t\t\t\t\ttoggleSidebar,\n\t\t\t\t\t\tsetToggleSidebar\n\t\t\t\t\t}}>\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\tisOpen={isOpenLeftMenu}\n\t\t\t\t\t\tonOpen={onOpenLeftMenu}\n\t\t\t\t\t\tonClose={onCloseLeftMenu}\n\t\t\t\t\t\troutes={mappingRouteByRole || []}\n\t\t\t\t\t\tbtnRef={btnRef}\n\t\t\t\t\t\tdisplay='none'\n\t\t\t\t\t\t{...rest} \n\t\t\t\t\t/>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tfloat='right'\n\t\t\t\t\t\tminHeight='100vh'\n\t\t\t\t\t\theight='100%'\n\t\t\t\t\t\toverflow='auto'\n\t\t\t\t\t\tposition='relative'\n\t\t\t\t\t\tmaxHeight='100%'\n\t\t\t\t\t\tw={{ base: '100%', xl: 'calc( 100% - 290px )' }}\n\t\t\t\t\t\tmaxWidth={{ base: '100%', xl: 'calc( 100% - 290px )' }}\n\t\t\t\t\t\ttransition='all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)'\n\t\t\t\t\t\ttransitionDuration='.2s, .2s, .35s'\n\t\t\t\t\t\ttransitionProperty='top, bottom, width'\n\t\t\t\t\t\ttransitionTimingFunction='linear, linear, ease'>\n\t\t\t\t\t\t<Portal>\n\t\t\t\t\t\t\t<Navbar\n\t\t\t\t\t\t\t\tonOpen={onOpen}\n\t\t\t\t\t\t\t\tonOpenLeftMenu={onOpenLeftMenu}\n\t\t\t\t\t\t\t\tbtnRef={btnRef}\n\t\t\t\t\t\t\t\tlogoText={'MKStream Dashboard'}\n\t\t\t\t\t\t\t\tbrandText={getActiveRoute(mappingRouteByRole || [])}\n\t\t\t\t\t\t\t\tsecondary={getActiveNavbar(mappingRouteByRole || [])}\n\t\t\t\t\t\t\t\tmessage={getActiveNavbarText(mappingRouteByRole || [])}\n\t\t\t\t\t\t\t\tfixed={false}\n\t\t\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Portal>\n\t\t\t\t\t\t{ getRoute() ?  handleRenderRoutes() : null }\n\t\t\t\t\t</Box>\n\t\t\t\t</SidebarContext.Provider>\n\t\t</Box>\n\t);\n}\n","/* eslint-disable */\nimport React from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nconst NotFound = () => {\n    const { t } = useTranslation();\n    return (\n        <section className=\"page_404\">\n            <div className=\"container\">\n                <div className=\"four_zero_four_bg\">\n                    \n                </div>\n\n                <div className=\"contant_box_404\">\n                    <h1 className=\"text_404\">404</h1>\n                    <h3 className=\"h2\">{t('content.title_404')}</h3>\n                    <p>{t('content.description_404')}</p>\n                    <a href=\"\" className=\"link_404\">{t('content.go_to_home')}</a>\n                </div>\n            </div>\n        </section>\n\n    );\n}\nexport default NotFound;\n","/* eslint-disable */\nimport React, { useEffect } from 'react';\nimport { Center, Spinner } from '@chakra-ui/react';\nimport { \n\tHashRouter, Router,\n\tRoute, Switch, Redirect\n} from 'react-router-dom';\n\nimport { useAuth } from '../contexts/authenContext';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\n\nconst PrivateRoute = (props) => {\n    const { token, profile, setProfile } = useAuth();\n    const { t } = useAuth();\n\n    if (token === null || profile === null) {\n      localStorage.clear();\n      return <Redirect from='/' to='/auth/sign-in' />;\n    } else {\n      try {\n        let decodedToken = jwtDecode(token);\n        let currentDate = new Date();\n      \n        // JWT exp is in seconds\n        if (decodedToken?.expired_at*1000 < currentDate.getTime()) {\n          toast.error('Token người dùng đã hết hạn');\n          localStorage.clear();\n          return <Redirect from='/' to='/auth/sign-in' />;\n        } else {\n          console.log(\"Valid token\");\n        }\n      } catch (err) {\n        console.log(err);\n        localStorage.clear();\n        return <Redirect from='/' to='/auth/sign-in' />;\n      }\n\n      return <Route {...props} />;\n    }\n  };\n\nexport default PrivateRoute;\n","/* eslint-disable */\nimport React from 'react';\nimport { ChakraProvider } from '@chakra-ui/react';\n// import { ThemeEditorProvider } from '@hypertheme-editor/chakra-ui';\nimport { ToastContainer } from 'react-toastify';\n// import { Router } from 'react-router';\nimport {\n\tHashRouter, Router,\n\tRoute, Switch, Redirect\n} from 'react-router-dom';\n\nimport history from './utils/history';\nimport theme from \"./theme/theme\";\n\n// Translation\nimport i18n from './translation/i18n';\nimport { I18nextProvider } from 'react-i18next';\n\nimport AuthLayout from './layouts/auth';\nimport BlankLayout from './layouts/blank';\nimport AdminLayout from './layouts/admin';\nimport NotFound from './layouts/notfound/index';\nimport AuthProvider from './contexts/authenContext';\nimport PrivateRoute from './hook/protectedRoutes';\n\nconst App = () => {\n\treturn (\n\t\t<ChakraProvider theme={theme}>\n\t\t\t<I18nextProvider i18n={i18n}>\n\t\t\t\t<ToastContainer\n\t\t\t\t\tposition=\"bottom-center\"\n\t\t\t\t\tautoClose={3000}\n\t\t\t\t\thideProgressBar=\"true\"\n\t\t\t\t\tlimit={2}\n\t\t\t\t\ttheme='light'\n\t\t\t\t\ti18nIsDynamicList={I18nextProvider}\n\t\t\t\t/>\n\t\t\t\t<AuthProvider>\n\t\t\t\t\t<Router history={history}>\n\t\t\t\t\t\t<HashRouter>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<PrivateRoute path=\"/admin\" component={AdminLayout} />\n\t\t\t\t\t\t\t\t<PrivateRoute path=\"/general\" component={BlankLayout} />\n\t\t\t\t\t\t\t\t<Route path='/auth' component={\n\t\t\t\t\t\t\t\t\tAuthLayout\n\t\t\t\t\t\t\t\t} />\n\t\t\t\t\t\t\t\t<Redirect from='/' exact to='/admin' />\n\t\t\t\t\t\t\t\t<Route path=\"*\" component={NotFound} />\n\t\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</HashRouter>\n\t\t\t\t\t</Router>\n\t\t\t\t</AuthProvider>\n\t\t\t</I18nextProvider>\n\t\t</ChakraProvider>\n\t)\n}\n\nexport default App;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./App.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./App.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./Notfound.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./Notfound.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./Spinner.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./Spinner.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./Pagination.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./Pagination.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/* eslint-disable */\nimport React from \"react\";\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App'\nimport \"./assets/css/App.css\";\nimport \"./assets/css/Notfound.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./assets/css/Spinner.css\";\nimport \"./assets/css/Pagination.css\";\n\nconst container = document.getElementById('app-root');\nconst root = createRoot(container);\n\nroot.render(\n  <App />\n);","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n  font-family: 'Inter', sans-serif !important;\n}\n\noption {\n  color: black;\n}\n\n.text-error {\n  font-size: small;\n  margin-top: 5px;\n  color: red;\n}\n\n.toast-position {\n  top: 20rem !important;\n}\n\n.Toastify__toast-container--top-right {\n  top: em !important;\n}\n\ninput.largerCheckbox {\n  width: 40px;\n  height: 40px;\n}\n\n::-webkit-scrollbar {\n  width: 7px;\n  height: 7px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  background-color: #fafafa;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background-image: linear-gradient(-45deg, #1900ff1e, #1b1b1b28);\n  border-radius: 50px;\n}\n\n.animation-icon {\n  margin-right: 4px;\n}\n\n.Toastify__toast--error {\n  color: #EB5757;\n  border-radius: 4px !important;\n  background: white !important;\n}\n\n.Toastify__toast--error::after {\n  position: absolute;\n  color: #333333;\n  font-size: 15px;\n  left: 265px;\n  padding-top: 14px !important;\n}\n\n.Toastify__toast--error::before {\n  position: relative;\n  z-index: 100000;\n  left: 12px;\n  top: 6px;\n}\n\n.Toastify__toast--success {\n  color: '#3A9EA5' !important;\n  border-radius: 4px !important;\n  background: white !important;\n}\n\n.Toastify__toast--success::before {\n  position: relative;\n  color: '#3A9EA5' !important;\n  z-index: 100000;\n  left: 12px;\n  top: 6px;\n}\n\n.Toastify__toast--success::after {\n  position: absolute;\n  color: #333333;\n  font-size: 15px;\n  left: 265px;\n  padding-top: 14px !important;\n}\n\n.Toastify__toast--warning {\n  color: '#E78326' !important;\n  border-radius: 4px !important;\n  background: white !important;\n}\n\n.Toastify__toast--warning::before {\n  position: relative;\n  z-index: 100000;\n  left: 12px;\n  top: 6px;\n}\n\n.Toastify__toast--warning::after {\n  position: absolute;\n  color: #E78326;\n  font-size: 15px;\n  left: 265px;\n  padding-top: 14px !important;\n}\n\n.Toastify__toast-body {\n  color: #444C63;\n  font-size: 18px;\n  padding-left: 10px;\n  line-height: 20px;\n  padding: 0px;\n  padding-top: 20px;\n  margin-left: 20px !important;\n  box-shadow: none;\n}\n\n.Toastify__toast>button>svg {\n  display: none;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/assets/css/App.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,2CAA2C;AAC7C;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,UAAU;AACZ;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,UAAU;EACV,WAAW;AACb;;AAEA,UAAU;AACV;EACE,yBAAyB;AAC3B;;AAEA,WAAW;AACX;EACE,+DAA+D;EAC/D,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,cAAc;EACd,6BAA6B;EAC7B,4BAA4B;AAC9B;;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,eAAe;EACf,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,UAAU;EACV,QAAQ;AACV;;AAEA;EACE,2BAA2B;EAC3B,6BAA6B;EAC7B,4BAA4B;AAC9B;;AAEA;EACE,kBAAkB;EAClB,2BAA2B;EAC3B,eAAe;EACf,UAAU;EACV,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,eAAe;EACf,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,2BAA2B;EAC3B,6BAA6B;EAC7B,4BAA4B;AAC9B;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,UAAU;EACV,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,eAAe;EACf,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,iBAAiB;EACjB,YAAY;EACZ,iBAAiB;EACjB,4BAA4B;EAC5B,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf\",\"sourcesContent\":[\"body {\\n  font-family: 'Inter', sans-serif !important;\\n}\\n\\noption {\\n  color: black;\\n}\\n\\n.text-error {\\n  font-size: small;\\n  margin-top: 5px;\\n  color: red;\\n}\\n\\n.toast-position {\\n  top: 20rem !important;\\n}\\n\\n.Toastify__toast-container--top-right {\\n  top: em !important;\\n}\\n\\ninput.largerCheckbox {\\n  width: 40px;\\n  height: 40px;\\n}\\n\\n::-webkit-scrollbar {\\n  width: 7px;\\n  height: 7px;\\n}\\n\\n/* Track */\\n::-webkit-scrollbar-track {\\n  background-color: #fafafa;\\n}\\n\\n/* Handle */\\n::-webkit-scrollbar-thumb {\\n  background-image: linear-gradient(-45deg, #1900ff1e, #1b1b1b28);\\n  border-radius: 50px;\\n}\\n\\n.animation-icon {\\n  margin-right: 4px;\\n}\\n\\n.Toastify__toast--error {\\n  color: #EB5757;\\n  border-radius: 4px !important;\\n  background: white !important;\\n}\\n\\n.Toastify__toast--error::after {\\n  position: absolute;\\n  color: #333333;\\n  font-size: 15px;\\n  left: 265px;\\n  padding-top: 14px !important;\\n}\\n\\n.Toastify__toast--error::before {\\n  position: relative;\\n  z-index: 100000;\\n  left: 12px;\\n  top: 6px;\\n}\\n\\n.Toastify__toast--success {\\n  color: '#3A9EA5' !important;\\n  border-radius: 4px !important;\\n  background: white !important;\\n}\\n\\n.Toastify__toast--success::before {\\n  position: relative;\\n  color: '#3A9EA5' !important;\\n  z-index: 100000;\\n  left: 12px;\\n  top: 6px;\\n}\\n\\n.Toastify__toast--success::after {\\n  position: absolute;\\n  color: #333333;\\n  font-size: 15px;\\n  left: 265px;\\n  padding-top: 14px !important;\\n}\\n\\n.Toastify__toast--warning {\\n  color: '#E78326' !important;\\n  border-radius: 4px !important;\\n  background: white !important;\\n}\\n\\n.Toastify__toast--warning::before {\\n  position: relative;\\n  z-index: 100000;\\n  left: 12px;\\n  top: 6px;\\n}\\n\\n.Toastify__toast--warning::after {\\n  position: absolute;\\n  color: #E78326;\\n  font-size: 15px;\\n  left: 265px;\\n  padding-top: 14px !important;\\n}\\n\\n.Toastify__toast-body {\\n  color: #444C63;\\n  font-size: 18px;\\n  padding-left: 10px;\\n  line-height: 20px;\\n  padding: 0px;\\n  padding-top: 20px;\\n  margin-left: 20px !important;\\n  box-shadow: none;\\n}\\n\\n.Toastify__toast>button>svg {\\n  display: none;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*======================\n    404 page\n=======================*/\n\n\n.page_404 {\n    min-width: 100%;\n    min-height: 100%;\n    position: fixed;\n    background: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.page_404 img {\n    background-repeat: no-repeat;\n}\n\n.four_zero_four_bg {\n    text-align: center;\n    background-image: url(https://cdn.dribbble.com/users/285475/screenshots/2083086/dribbble_1.gif);\n    height: 500px;\n    width: 700px;\n    background-position: center;\n    \n}\n\n.contant_box_404 {\n    text-align: center;\n    margin-top: -70px;\n}\n\n.contant_box_404 h1 {\n    font-size: 80px;\n}\n\n.four_zero_four_bg h3 {\n    font-size: 80px;\n}\n\n.link_404 {\n    color: #fff !important;\n    padding: 10px 20px;\n    background: #39ac31;\n    border-radius: 5px;\n    margin: 20px 0;\n    display: inline-block;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/assets/css/Notfound.css\"],\"names\":[],\"mappings\":\"AAAA;;wBAEwB;;;AAGxB;IACI,eAAe;IACf,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,kBAAkB;IAClB,+FAA+F;IAC/F,aAAa;IACb,YAAY;IACZ,2BAA2B;;AAE/B;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,sBAAsB;IACtB,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,cAAc;IACd,qBAAqB;AACzB\",\"sourcesContent\":[\"/*======================\\n    404 page\\n=======================*/\\n\\n\\n.page_404 {\\n    min-width: 100%;\\n    min-height: 100%;\\n    position: fixed;\\n    background: #fff;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.page_404 img {\\n    background-repeat: no-repeat;\\n}\\n\\n.four_zero_four_bg {\\n    text-align: center;\\n    background-image: url(https://cdn.dribbble.com/users/285475/screenshots/2083086/dribbble_1.gif);\\n    height: 500px;\\n    width: 700px;\\n    background-position: center;\\n    \\n}\\n\\n.contant_box_404 {\\n    text-align: center;\\n    margin-top: -70px;\\n}\\n\\n.contant_box_404 h1 {\\n    font-size: 80px;\\n}\\n\\n.four_zero_four_bg h3 {\\n    font-size: 80px;\\n}\\n\\n.link_404 {\\n    color: #fff !important;\\n    padding: 10px 20px;\\n    background: #39ac31;\\n    border-radius: 5px;\\n    margin: 20px 0;\\n    display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.pagination-container {\n    display: flex;\n    justify-content: center;\n    list-style-type: none;\n  \n    .pagination-item-blue {\n      padding: 0 12px;\n      height: 32px;\n      text-align: center;\n      margin: auto 4px;\n      color: rgba(0, 0, 0, 0.87);\n      display: flex;\n      box-sizing: border-box;\n      align-items: center;\n      letter-spacing: 0.01071em;\n      border-radius: 16px;\n      line-height: 1.43;\n      font-size: 13px;\n      min-width: 32px;\n  \n      &.dots:hover {\n        background-color: transparent;\n        cursor: default;\n      }\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.04);\n        cursor: pointer;\n      }\n  \n      &.selected {\n        background-color: rgba(4, 0, 255, 0.788);\n        color: white;\n      }\n  \n      .arrow {\n        &::before {\n          position: relative;\n          /* top: 3pt; Uncomment this to lower the icons as requested in comments*/\n          content: '';\n          /* By using an em scale, the arrows will size with the font */\n          display: inline-block;\n          width: 0.4em;\n          height: 0.4em;\n          border-right: 0.12em solid rgba(0, 0, 0, 0.87);\n          border-top: 0.12em solid rgba(0, 0, 0, 0.87);\n        }\n  \n        &.left {\n          transform: rotate(-135deg) translate(-50%);\n        }\n  \n        &.right {\n          transform: rotate(45deg);\n        }\n      }\n  \n      &.disabled {\n        pointer-events: none;\n  \n        .arrow::before {\n          border-right: 0.12em solid rgba(0, 0, 0, 0.43);\n          border-top: 0.12em solid rgba(0, 0, 0, 0.43);\n        }\n  \n        &:hover {\n          background-color: transparent;\n          cursor: default;\n        }\n      }\n    }\n  }\n  \n.pagination-container {\n    display: flex;\n    justify-content: center;\n    list-style-type: none;\n    margin-top: 5px;\n\n    .pagination-item-orange {\n      padding: 0 12px;\n      height: 25px;\n      text-align: center;\n      margin: auto 4px;\n      color: rgba(0, 0, 0, 0.87);\n      display: flex;\n      box-sizing: border-box;\n      align-items: center;\n      letter-spacing: 0.01071em;\n      border-radius: 4px;\n      line-height: 1.43;\n      font-size: 13px;\n      min-width: 32px;\n  \n      &.dots:hover {\n        background-color: transparent;\n        cursor: default;\n      }\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.04);\n        cursor: pointer;\n      }\n  \n      &.selected {\n        background-color: rgb(70, 69, 67);\n        color: white;\n      }\n  \n      .arrow {\n        &::before {\n          position: relative;\n          /* top: 3pt; Uncomment this to lower the icons as requested in comments*/\n          content: '';\n          /* By using an em scale, the arrows will size with the font */\n          display: inline-block;\n          width: 0.4em;\n          height: 0.4em;\n          border-right: 0.12em solid rgba(0, 0, 0, 0.87);\n          border-top: 0.12em solid rgba(0, 0, 0, 0.87);\n        }\n  \n        &.left {\n          transform: rotate(-135deg) translate(-50%);\n          \n        }\n  \n        &.right {\n          transform: rotate(45deg);\n        }\n      }\n  \n      &.disabled {\n        pointer-events: none;\n  \n        .arrow::before {\n          border-right: 0.12em solid rgba(0, 0, 0, 0.43);\n          border-top: 0.12em solid rgba(0, 0, 0, 0.43);\n        }\n  \n        &:hover {\n          background-color: transparent;\n          cursor: default;\n        }\n      }\n    }\n  }\n  \n\n  .pagination-info {\n    display: flex;\n    align-items: center;\n    margin-right: 3%;\n}\n\n.items-per-page-select {\n    margin-left: 8px;\n    padding: 4px;\n    font-size: 14px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/assets/css/Pagination.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,uBAAuB;IACvB,qBAAqB;;IAErB;MACE,eAAe;MACf,YAAY;MACZ,kBAAkB;MAClB,gBAAgB;MAChB,0BAA0B;MAC1B,aAAa;MACb,sBAAsB;MACtB,mBAAmB;MACnB,yBAAyB;MACzB,mBAAmB;MACnB,iBAAiB;MACjB,eAAe;MACf,eAAe;;MAEf;QACE,6BAA6B;QAC7B,eAAe;MACjB;MACA;QACE,qCAAqC;QACrC,eAAe;MACjB;;MAEA;QACE,wCAAwC;QACxC,YAAY;MACd;;MAEA;QACE;UACE,kBAAkB;UAClB,wEAAwE;UACxE,WAAW;UACX,6DAA6D;UAC7D,qBAAqB;UACrB,YAAY;UACZ,aAAa;UACb,8CAA8C;UAC9C,4CAA4C;QAC9C;;QAEA;UACE,0CAA0C;QAC5C;;QAEA;UACE,wBAAwB;QAC1B;MACF;;MAEA;QACE,oBAAoB;;QAEpB;UACE,8CAA8C;UAC9C,4CAA4C;QAC9C;;QAEA;UACE,6BAA6B;UAC7B,eAAe;QACjB;MACF;IACF;EACF;;AAEF;IACI,aAAa;IACb,uBAAuB;IACvB,qBAAqB;IACrB,eAAe;;IAEf;MACE,eAAe;MACf,YAAY;MACZ,kBAAkB;MAClB,gBAAgB;MAChB,0BAA0B;MAC1B,aAAa;MACb,sBAAsB;MACtB,mBAAmB;MACnB,yBAAyB;MACzB,kBAAkB;MAClB,iBAAiB;MACjB,eAAe;MACf,eAAe;;MAEf;QACE,6BAA6B;QAC7B,eAAe;MACjB;MACA;QACE,qCAAqC;QACrC,eAAe;MACjB;;MAEA;QACE,iCAAiC;QACjC,YAAY;MACd;;MAEA;QACE;UACE,kBAAkB;UAClB,wEAAwE;UACxE,WAAW;UACX,6DAA6D;UAC7D,qBAAqB;UACrB,YAAY;UACZ,aAAa;UACb,8CAA8C;UAC9C,4CAA4C;QAC9C;;QAEA;UACE,0CAA0C;;QAE5C;;QAEA;UACE,wBAAwB;QAC1B;MACF;;MAEA;QACE,oBAAoB;;QAEpB;UACE,8CAA8C;UAC9C,4CAA4C;QAC9C;;QAEA;UACE,6BAA6B;UAC7B,eAAe;QACjB;MACF;IACF;EACF;;;EAGA;IACE,aAAa;IACb,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB\",\"sourcesContent\":[\".pagination-container {\\n    display: flex;\\n    justify-content: center;\\n    list-style-type: none;\\n  \\n    .pagination-item-blue {\\n      padding: 0 12px;\\n      height: 32px;\\n      text-align: center;\\n      margin: auto 4px;\\n      color: rgba(0, 0, 0, 0.87);\\n      display: flex;\\n      box-sizing: border-box;\\n      align-items: center;\\n      letter-spacing: 0.01071em;\\n      border-radius: 16px;\\n      line-height: 1.43;\\n      font-size: 13px;\\n      min-width: 32px;\\n  \\n      &.dots:hover {\\n        background-color: transparent;\\n        cursor: default;\\n      }\\n      &:hover {\\n        background-color: rgba(0, 0, 0, 0.04);\\n        cursor: pointer;\\n      }\\n  \\n      &.selected {\\n        background-color: rgba(4, 0, 255, 0.788);\\n        color: white;\\n      }\\n  \\n      .arrow {\\n        &::before {\\n          position: relative;\\n          /* top: 3pt; Uncomment this to lower the icons as requested in comments*/\\n          content: '';\\n          /* By using an em scale, the arrows will size with the font */\\n          display: inline-block;\\n          width: 0.4em;\\n          height: 0.4em;\\n          border-right: 0.12em solid rgba(0, 0, 0, 0.87);\\n          border-top: 0.12em solid rgba(0, 0, 0, 0.87);\\n        }\\n  \\n        &.left {\\n          transform: rotate(-135deg) translate(-50%);\\n        }\\n  \\n        &.right {\\n          transform: rotate(45deg);\\n        }\\n      }\\n  \\n      &.disabled {\\n        pointer-events: none;\\n  \\n        .arrow::before {\\n          border-right: 0.12em solid rgba(0, 0, 0, 0.43);\\n          border-top: 0.12em solid rgba(0, 0, 0, 0.43);\\n        }\\n  \\n        &:hover {\\n          background-color: transparent;\\n          cursor: default;\\n        }\\n      }\\n    }\\n  }\\n  \\n.pagination-container {\\n    display: flex;\\n    justify-content: center;\\n    list-style-type: none;\\n    margin-top: 5px;\\n\\n    .pagination-item-orange {\\n      padding: 0 12px;\\n      height: 25px;\\n      text-align: center;\\n      margin: auto 4px;\\n      color: rgba(0, 0, 0, 0.87);\\n      display: flex;\\n      box-sizing: border-box;\\n      align-items: center;\\n      letter-spacing: 0.01071em;\\n      border-radius: 4px;\\n      line-height: 1.43;\\n      font-size: 13px;\\n      min-width: 32px;\\n  \\n      &.dots:hover {\\n        background-color: transparent;\\n        cursor: default;\\n      }\\n      &:hover {\\n        background-color: rgba(0, 0, 0, 0.04);\\n        cursor: pointer;\\n      }\\n  \\n      &.selected {\\n        background-color: rgb(70, 69, 67);\\n        color: white;\\n      }\\n  \\n      .arrow {\\n        &::before {\\n          position: relative;\\n          /* top: 3pt; Uncomment this to lower the icons as requested in comments*/\\n          content: '';\\n          /* By using an em scale, the arrows will size with the font */\\n          display: inline-block;\\n          width: 0.4em;\\n          height: 0.4em;\\n          border-right: 0.12em solid rgba(0, 0, 0, 0.87);\\n          border-top: 0.12em solid rgba(0, 0, 0, 0.87);\\n        }\\n  \\n        &.left {\\n          transform: rotate(-135deg) translate(-50%);\\n          \\n        }\\n  \\n        &.right {\\n          transform: rotate(45deg);\\n        }\\n      }\\n  \\n      &.disabled {\\n        pointer-events: none;\\n  \\n        .arrow::before {\\n          border-right: 0.12em solid rgba(0, 0, 0, 0.43);\\n          border-top: 0.12em solid rgba(0, 0, 0, 0.43);\\n        }\\n  \\n        &:hover {\\n          background-color: transparent;\\n          cursor: default;\\n        }\\n      }\\n    }\\n  }\\n  \\n\\n  .pagination-info {\\n    display: flex;\\n    align-items: center;\\n    margin-right: 3%;\\n}\\n\\n.items-per-page-select {\\n    margin-left: 8px;\\n    padding: 4px;\\n    font-size: 14px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@keyframes spinner {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  .loading-spinner {\n    width: 50px;\n    height: 50px;\n    border: 10px solid #f3f3f3; /* Light grey */\n    border-top: 10px solid #01227e; /* Black */\n    border-radius: 50%;\n    animation: spinner 1.5s linear infinite;\n  }\n  `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/assets/css/Spinner.css\"],\"names\":[],\"mappings\":\"AAAA;IACI;MACE,uBAAuB;IACzB;IACA;MACE,yBAAyB;IAC3B;EACF;EACA;IACE,WAAW;IACX,YAAY;IACZ,0BAA0B,EAAE,eAAe;IAC3C,8BAA8B,EAAE,UAAU;IAC1C,kBAAkB;IAClB,uCAAuC;EACzC\",\"sourcesContent\":[\"@keyframes spinner {\\n    0% {\\n      transform: rotate(0deg);\\n    }\\n    100% {\\n      transform: rotate(360deg);\\n    }\\n  }\\n  .loading-spinner {\\n    width: 50px;\\n    height: 50px;\\n    border: 10px solid #f3f3f3; /* Light grey */\\n    border-top: 10px solid #01227e; /* Black */\\n    border-radius: 50%;\\n    animation: spinner 1.5s linear infinite;\\n  }\\n  \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var map = {\n\t\"./af\": 5177,\n\t\"./af.js\": 5177,\n\t\"./ar\": 1509,\n\t\"./ar-dz\": 1488,\n\t\"./ar-dz.js\": 1488,\n\t\"./ar-kw\": 8676,\n\t\"./ar-kw.js\": 8676,\n\t\"./ar-ly\": 2353,\n\t\"./ar-ly.js\": 2353,\n\t\"./ar-ma\": 4496,\n\t\"./ar-ma.js\": 4496,\n\t\"./ar-ps\": 6947,\n\t\"./ar-ps.js\": 6947,\n\t\"./ar-sa\": 2682,\n\t\"./ar-sa.js\": 2682,\n\t\"./ar-tn\": 9756,\n\t\"./ar-tn.js\": 9756,\n\t\"./ar.js\": 1509,\n\t\"./az\": 5533,\n\t\"./az.js\": 5533,\n\t\"./be\": 8959,\n\t\"./be.js\": 8959,\n\t\"./bg\": 7777,\n\t\"./bg.js\": 7777,\n\t\"./bm\": 4903,\n\t\"./bm.js\": 4903,\n\t\"./bn\": 1290,\n\t\"./bn-bd\": 7357,\n\t\"./bn-bd.js\": 7357,\n\t\"./bn.js\": 1290,\n\t\"./bo\": 1545,\n\t\"./bo.js\": 1545,\n\t\"./br\": 1470,\n\t\"./br.js\": 1470,\n\t\"./bs\": 4429,\n\t\"./bs.js\": 4429,\n\t\"./ca\": 7306,\n\t\"./ca.js\": 7306,\n\t\"./cs\": 6464,\n\t\"./cs.js\": 6464,\n\t\"./cv\": 6016,\n\t\"./cv.js\": 6016,\n\t\"./cy\": 4226,\n\t\"./cy.js\": 4226,\n\t\"./da\": 3601,\n\t\"./da.js\": 3601,\n\t\"./de\": 7853,\n\t\"./de-at\": 6111,\n\t\"./de-at.js\": 6111,\n\t\"./de-ch\": 4697,\n\t\"./de-ch.js\": 4697,\n\t\"./de.js\": 7853,\n\t\"./dv\": 708,\n\t\"./dv.js\": 708,\n\t\"./el\": 4691,\n\t\"./el.js\": 4691,\n\t\"./en-au\": 3872,\n\t\"./en-au.js\": 3872,\n\t\"./en-ca\": 8298,\n\t\"./en-ca.js\": 8298,\n\t\"./en-gb\": 6195,\n\t\"./en-gb.js\": 6195,\n\t\"./en-ie\": 6584,\n\t\"./en-ie.js\": 6584,\n\t\"./en-il\": 5543,\n\t\"./en-il.js\": 5543,\n\t\"./en-in\": 9033,\n\t\"./en-in.js\": 9033,\n\t\"./en-nz\": 9402,\n\t\"./en-nz.js\": 9402,\n\t\"./en-sg\": 3004,\n\t\"./en-sg.js\": 3004,\n\t\"./eo\": 2934,\n\t\"./eo.js\": 2934,\n\t\"./es\": 7650,\n\t\"./es-do\": 838,\n\t\"./es-do.js\": 838,\n\t\"./es-mx\": 7730,\n\t\"./es-mx.js\": 7730,\n\t\"./es-us\": 6575,\n\t\"./es-us.js\": 6575,\n\t\"./es.js\": 7650,\n\t\"./et\": 3035,\n\t\"./et.js\": 3035,\n\t\"./eu\": 3508,\n\t\"./eu.js\": 3508,\n\t\"./fa\": 119,\n\t\"./fa.js\": 119,\n\t\"./fi\": 527,\n\t\"./fi.js\": 527,\n\t\"./fil\": 5995,\n\t\"./fil.js\": 5995,\n\t\"./fo\": 2477,\n\t\"./fo.js\": 2477,\n\t\"./fr\": 5498,\n\t\"./fr-ca\": 6435,\n\t\"./fr-ca.js\": 6435,\n\t\"./fr-ch\": 7892,\n\t\"./fr-ch.js\": 7892,\n\t\"./fr.js\": 5498,\n\t\"./fy\": 7071,\n\t\"./fy.js\": 7071,\n\t\"./ga\": 1734,\n\t\"./ga.js\": 1734,\n\t\"./gd\": 217,\n\t\"./gd.js\": 217,\n\t\"./gl\": 7329,\n\t\"./gl.js\": 7329,\n\t\"./gom-deva\": 2124,\n\t\"./gom-deva.js\": 2124,\n\t\"./gom-latn\": 3383,\n\t\"./gom-latn.js\": 3383,\n\t\"./gu\": 5050,\n\t\"./gu.js\": 5050,\n\t\"./he\": 1713,\n\t\"./he.js\": 1713,\n\t\"./hi\": 3861,\n\t\"./hi.js\": 3861,\n\t\"./hr\": 6308,\n\t\"./hr.js\": 6308,\n\t\"./hu\": 609,\n\t\"./hu.js\": 609,\n\t\"./hy-am\": 7160,\n\t\"./hy-am.js\": 7160,\n\t\"./id\": 4063,\n\t\"./id.js\": 4063,\n\t\"./is\": 9374,\n\t\"./is.js\": 9374,\n\t\"./it\": 8383,\n\t\"./it-ch\": 1827,\n\t\"./it-ch.js\": 1827,\n\t\"./it.js\": 8383,\n\t\"./ja\": 3827,\n\t\"./ja.js\": 3827,\n\t\"./jv\": 9722,\n\t\"./jv.js\": 9722,\n\t\"./ka\": 1794,\n\t\"./ka.js\": 1794,\n\t\"./kk\": 7088,\n\t\"./kk.js\": 7088,\n\t\"./km\": 6870,\n\t\"./km.js\": 6870,\n\t\"./kn\": 4451,\n\t\"./kn.js\": 4451,\n\t\"./ko\": 3164,\n\t\"./ko.js\": 3164,\n\t\"./ku\": 8174,\n\t\"./ku-kmr\": 6181,\n\t\"./ku-kmr.js\": 6181,\n\t\"./ku.js\": 8174,\n\t\"./ky\": 8474,\n\t\"./ky.js\": 8474,\n\t\"./lb\": 9680,\n\t\"./lb.js\": 9680,\n\t\"./lo\": 5867,\n\t\"./lo.js\": 5867,\n\t\"./lt\": 5766,\n\t\"./lt.js\": 5766,\n\t\"./lv\": 9532,\n\t\"./lv.js\": 9532,\n\t\"./me\": 8076,\n\t\"./me.js\": 8076,\n\t\"./mi\": 1848,\n\t\"./mi.js\": 1848,\n\t\"./mk\": 306,\n\t\"./mk.js\": 306,\n\t\"./ml\": 3739,\n\t\"./ml.js\": 3739,\n\t\"./mn\": 9053,\n\t\"./mn.js\": 9053,\n\t\"./mr\": 6169,\n\t\"./mr.js\": 6169,\n\t\"./ms\": 3386,\n\t\"./ms-my\": 2297,\n\t\"./ms-my.js\": 2297,\n\t\"./ms.js\": 3386,\n\t\"./mt\": 7075,\n\t\"./mt.js\": 7075,\n\t\"./my\": 2264,\n\t\"./my.js\": 2264,\n\t\"./nb\": 2274,\n\t\"./nb.js\": 2274,\n\t\"./ne\": 8235,\n\t\"./ne.js\": 8235,\n\t\"./nl\": 2572,\n\t\"./nl-be\": 3784,\n\t\"./nl-be.js\": 3784,\n\t\"./nl.js\": 2572,\n\t\"./nn\": 4566,\n\t\"./nn.js\": 4566,\n\t\"./oc-lnc\": 9330,\n\t\"./oc-lnc.js\": 9330,\n\t\"./pa-in\": 9849,\n\t\"./pa-in.js\": 9849,\n\t\"./pl\": 4418,\n\t\"./pl.js\": 4418,\n\t\"./pt\": 9834,\n\t\"./pt-br\": 8303,\n\t\"./pt-br.js\": 8303,\n\t\"./pt.js\": 9834,\n\t\"./ro\": 4457,\n\t\"./ro.js\": 4457,\n\t\"./ru\": 2271,\n\t\"./ru.js\": 2271,\n\t\"./sd\": 1221,\n\t\"./sd.js\": 1221,\n\t\"./se\": 3478,\n\t\"./se.js\": 3478,\n\t\"./si\": 7538,\n\t\"./si.js\": 7538,\n\t\"./sk\": 5784,\n\t\"./sk.js\": 5784,\n\t\"./sl\": 6637,\n\t\"./sl.js\": 6637,\n\t\"./sq\": 6794,\n\t\"./sq.js\": 6794,\n\t\"./sr\": 5719,\n\t\"./sr-cyrl\": 3322,\n\t\"./sr-cyrl.js\": 3322,\n\t\"./sr.js\": 5719,\n\t\"./ss\": 6000,\n\t\"./ss.js\": 6000,\n\t\"./sv\": 1011,\n\t\"./sv.js\": 1011,\n\t\"./sw\": 748,\n\t\"./sw.js\": 748,\n\t\"./ta\": 1025,\n\t\"./ta.js\": 1025,\n\t\"./te\": 1885,\n\t\"./te.js\": 1885,\n\t\"./tet\": 8861,\n\t\"./tet.js\": 8861,\n\t\"./tg\": 6571,\n\t\"./tg.js\": 6571,\n\t\"./th\": 5802,\n\t\"./th.js\": 5802,\n\t\"./tk\": 9527,\n\t\"./tk.js\": 9527,\n\t\"./tl-ph\": 9231,\n\t\"./tl-ph.js\": 9231,\n\t\"./tlh\": 1052,\n\t\"./tlh.js\": 1052,\n\t\"./tr\": 5096,\n\t\"./tr.js\": 5096,\n\t\"./tzl\": 9846,\n\t\"./tzl.js\": 9846,\n\t\"./tzm\": 1765,\n\t\"./tzm-latn\": 7711,\n\t\"./tzm-latn.js\": 7711,\n\t\"./tzm.js\": 1765,\n\t\"./ug-cn\": 8414,\n\t\"./ug-cn.js\": 8414,\n\t\"./uk\": 6618,\n\t\"./uk.js\": 6618,\n\t\"./ur\": 158,\n\t\"./ur.js\": 158,\n\t\"./uz\": 7609,\n\t\"./uz-latn\": 2475,\n\t\"./uz-latn.js\": 2475,\n\t\"./uz.js\": 7609,\n\t\"./vi\": 1135,\n\t\"./vi.js\": 1135,\n\t\"./x-pseudo\": 4051,\n\t\"./x-pseudo.js\": 4051,\n\t\"./yo\": 2218,\n\t\"./yo.js\": 2218,\n\t\"./zh-cn\": 2648,\n\t\"./zh-cn.js\": 2648,\n\t\"./zh-hk\": 1632,\n\t\"./zh-hk.js\": 1632,\n\t\"./zh-mo\": 1541,\n\t\"./zh-mo.js\": 1541,\n\t\"./zh-tw\": 304,\n\t\"./zh-tw.js\": 304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmk_stream\"] = self[\"webpackChunkmk_stream\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [898], () => (__webpack_require__(4092)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","createBrowserHistory","forceRefresh","components","Card","baseStyle","props","p","display","flexDirection","width","position","borderRadius","minWidth","wordWrap","bg","mode","backgroundClip","buttonStyles","Button","boxShadow","transition","boxSizing","_focus","_active","variants","outline","brand","color","_hover","darkBrand","lightBrand","light","action","fontWeight","setup","border","borderColor","badgeStyles","Badge","lineHeight","padding","paddingLeft","paddingRight","inputStyles","Input","field","main","fontSize","_placeholder","auth","authSecondary","search","py","NumberInput","Select","icon","mini","subtle","box","transparent","transform","right","progressStyles","Progress","w","h","_checked","track","table","thumb","sliderStyles","RangeSlider","textareaStyles","Textarea","switchStyles","Switch","alignItems","ps","breakpoints","createBreakpoints","sm","md","lg","xl","globalStyles","colors","brandScheme","brandTabs","secondaryGray","red","blue","orange","green","navy","gray","fonts","heading","body","mono","styles","global","overflowX","letterSpacing","fontFamily","input","html","h1","h2","h3","extendTheme","Link","textDecoration","CardComponent","resources","en","translation","vi","i18n","Backend","use","initReactI18next","init","fallbackLng","process","debug","interpolation","escapeValue","createContext","variant","children","rest","useStyleConfig","React","Box","_extends","__css","MiniStatistics","startContent","endContent","name","value","bgColor","textColor","useColorModeValue","Flex","my","align","base","justify","Stat","ms","StatLabel","StatNumber","IconBox","justifyContent","MK_AGENCY_PROVIDER","BASE_URL","REACT_APP_API_URL","PACKAGE_ITEM_COLOR","packageColor","MESSSAGE_STATUS_CODE","listOptionFieldVideo","label","listOptionServerAgent","statusFieldVideo","VIDEO_RESOLUTION_DEFAULT","resolution","quantity","columnsInsertVideoStream","Header","accessor","maxWidth","MULTI_STEP_FORM_CREATE_STREAM","title","description","columnsPaymentHistory","listPricingMonthly","listStreamThread","ROLE_USER","USER_DEFAULT","ADMIN","SUPER_ADMIN","RESELLER","resumeData","menu","VIDEO_STREAMING_STATUS","id","message","MdPlayArrow","MdCloudDownload","MdPause","MdOutlineDone","MdOutlineClose","MdOutlineError","MdWatchLater","VIDEO_STREAMING_STATUS_STATISTIC","USER_PACKAGE_STATUS","USER_PACKAGE_USED","StaticStream","listStatistics","boxBg","SimpleGrid","columns","gap","mb","Object","entries","map","item","index","key","Icon","as","find","status","total","USER_STREAM_ENDPOINT","ADMIN_AGENT_SERVER__ENDPOINT","RESET_ADMIN_AGENT_SERVER_ENDPOINT","ASSIGN_AGENT_SERVER_FOR_ENDPOINT","UNASSIGN_AGENT_SERVER_FOR_ENDPOINT","ASSIGN_AGENT_SERVER_FOR_RESELLER","UNASSIGN_AGENT_SERVER_FOR_RESELLER","AGENT_SERVER_ENDPOINT","RESET_AGENT_SERVER_ENDPOINT","STREAMING_ENDPOINT","RESOLUTION_STREAMING_ENDPOINT","VIDEO_META_INFO_ENDPOINT","CANCEL_STREAMING_ENDPOINT","DELETE_STREAMING_ENDPOINT","PLAY_STREAMING_ENDPOINT","DASHBOARD_STATISTIC_ENDPOINT","DASHBOARD_ADMIN_STATISTIC_ENDPOINT","token","localStorage","getItem","axios","defaults","timeout","interceptors","response","error","removeItem","window","location","href","Promise","reject","constructor","_ref","url","this","endpoints","createEntity","entity","createBasicCRUDEndpoints","createEntities","arrayOfEntity","forEach","bind","_ref2","resourceURL","getWithNoToken","query","config","arguments","length","undefined","headers","get","params","authorization","getWithHeader","getOne","getByLink","_ref3","link","postWithNoToken","data","customHeaders","post","submitPost","toSubmit","replace","put","submitPut","submitDelete","delete","update","toUpdate","patch","_ref4","toPatch","_ref5","UserStreamApi","ApiFactory","fetchListUserStreamApi","listStreamingApi","createStreamingApi","fetchListAcceptedResolution","fetchVideoMETAInfoData","fetchListAdminAgentServerStream","fetchListAgentServerOfUser","validateYouTubeUrl","match","truncate","str","slice","formatDate","datePart","year","month","reverseTimeDate","timedate","moment","format","toHHMMSS","time","sec_num","parseInt","hours","Math","floor","minutes","seconds","paddingTime","n","getCurrRoleUser","profile","JSON","parse","keys","group","role","checkRoleUser","removeEmpty","obj","fromEntries","filter","_","v","k","_sleep","resolve","setTimeout","AuthContext","useAuth","useContext","setToken_","useState","setProfile_","setToken","newToken","setProfile","newProfile","useEffect","setItem","contextValue","useMemo","Provider","LeftMenu","handleChangeVerticalTabs","activeTabId","List","ListItem","onClick","px","borderBottom","backgroundColor","me","MdPersonOutline","MdLockOutline","MdPayment","TabProfile","textColorPrimary","brandStars","t","useTranslation","profileUser","pb","banner","bgSize","direction","Avatar","src","avatar","mt","Grid","templateRows","templateColumns","GridItem","colSpan","margin","Text","fullname","alignContent","pt","size","pr","IoNewspaper","style","FormControl","FormLabel","isRequired","isDisabled","type","placeholder","email","LOGIN_ENPOINT","REGISTER_ENDPOINT","PROFILE_DETAIL_ENDPOINT","ADMIN_LIST_USER_ENDPOINT","UPDATE_PASSWORD_ENPOINT","DELETE_USER_ENPOINT","AuthenticateApi","registerUserApi","fetchProfileDetail","fetchAdminListUser","updatePasswordUser","initialValues","old_password","new_password","confirm_password","TabPassword","formDataProfile","setFormDataProfile","show","setShow","loading","setLoading","textColorSecondary","handleClick","validateSchema","Yup","shape","required","min","matches","oneOf","formik","useFormik","validationSchema","onSubmit","async","newPassword","values","error_code","toast","success","resetForm","all","history","push","err","console","log","setInputValue","useCallback","setValues","handleSubmit","InputGroup","trim","onChange","e","target","InputRightElement","cursor","RiEyeCloseLine","MdOutlineRemoveRedEye","errors","touched","className","isLoading","loadingText","TablePayment","columnsData","tableData","tableInstance","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","initialState","pageSize","Table","Thead","headerGroup","Tr","getHeaderGroupProps","column","Th","getHeaderProps","getSortByToggleProps","pe","render","Tbody","row","getRowProps","cells","cell","badgeStyle","background","MdAccessTime","height","marginRight","MdCheckCircle","MdCancel","toLocaleString","Td","getCellProps","textAlign","Image","emptyBackgroundImage","alt","marginBottom","TabPayment","mx","colorScheme","IoAddCircleOutline","RightContent","currentProfile","planDetail","job","step","renderStepContent","USER_PACKAGE_ENDPOINT","INFORMATION_PACKAGE_ENDPOINT","PREORDER_PACKAGE_ENDPOINT","ADMIN_CONFIRM_ENDPOINT","ADMIN_LIST_ENDPOINT","UserPackageApi","fetchListUserPackageApi","fetchInfoUserPackageApi","VideoCardInfo","thumbnail","duration","SkeletonCircle","linkColor","handleRemoveURLVideo","handleOpenModal","isEdit","Heading","readOnly","IoRemoveCircleOutline","noVideoStreamImg","FormHelperText","listVideoResolution","allUserStream","displaySubRowState","listServerAgent","checkYoutubeLink","htmlFor","_dark","agent_id","autoComplete","_placeholderShown","focusBorderColor","shadow","rounded","stream_id","isReadOnly","spacing","started_at","pattern","started_time","disabled","minLength","maxLength","locale","ended_at","ended_time","isOpen","onClose","handleAddURLVideo","loadingAddVideo","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","mr","Spinner","DOTS","range","start","end","Array","from","idx","onPageChange","totalCount","siblingCount","currentPage","typeName","itemsPerPage","setItemsPerPage","paginationRange","totalPageCount","ceil","leftSiblingIndex","max","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","lastPageIndex","rightRange","middleRange","lastPage","marginTop","classnames","onPrevious","pageNumber","selected","onNext","event","Number","MenuVideo","playRightAwayVideo","editCurrVideoStream","detailCurrVideoStream","killCurrVideoStream","delCurrVideoStream","dataVideo","setMenuSelected","groupVideoMenu","icons","stateValidate","FaRegEdit","MdOutlinePerson","MdDeleteOutline","textHover","iconColor","bgList","bgShadow","bgHover","bgFocus","isopen","isOpenModal","onOpen","onOpenModal","onCloseModal","useDisclosure","Menu","placement","MenuButton","MdOutlineMoreHoriz","MenuList","minW","maxW","backdropFilter","MenuItem","includes","content","footer","handleConfirm","addButton","steps","DetailVideoLivestream","dataGeneral","setAllUserStream","timeStart","split","timeEnd","pop","activeStep","setActiveStep","setListVideoResolution","setLoadingAddVideo","tableVideoPlaylist","setTableVideoPlaylist","when","schema","handleFetchUserStream","responseUserStream","dataResponse","listItems","items","groupVideo","groupThumbnail","responseVideoStream","resArr","video_info","handleFetchVideoStreamingByStreamID","docs","limit","fetchAllUserStream","responseResolution","handleFetchVideoResolution","order","video","temp","test","onCloseVideoStreamModal","formUpdateStream","InputVideoStep","ConfigureStreamStep","FinalStep","Center","gutterBottom","ButtonGroup","modalContent","ModalAddUrl","responseVideoMETA","Stepper","Step","StepIndicator","StepStatus","complete","StepIcon","incomplete","StepNumber","active","flexShrink","StepTitle","StepDescription","StepSeparator","TableSubRow","renderRowSubComponent","paginationData","Cell","original","bottom","left","MdOutlineHub","stream_obj","FiServer","agent_obj","IoArrowForward","IoPauseOutline","_ref6","video_type","_ref7","ytb_live_link","_ref8","statusData","statusID","Tooltip","status_label","UseAnimations","animation","download","loop","autoplay","fillColor","strokeColor","activity","marginLeft","_ref9","getTrProps","state","rowInfo","instance","useExpanded","useRowSelect","useFlexLayout","setPageSize","isNumeric","isSorted","isSortedDesc","FaArrowDown","FaArrowUp","borderTop","isExpanded","displayTypeChildTable","FilterHeader","setDisplaySubRowState","handleOpenFilterModal","handleOpenModalCreateStream","activeFilter","ml","alertOctagon","MdFilterList","VideoStreamTable","filterGroup","handleFetchResource","setCurrentPage","Pagination","per_page","EditVideoLivestream","handleRefresh","validateSchemaStep","currentValidationSchema","isLastStep","reload","actions","setSubmitting","setTouched","handleGoBackStep","isSubmitting","SearchBar","onSearch","searchIconColor","inputText","InputLeftElement","IconButton","SearchIcon","FormFilterCustom","handleChangeStateFilter","listFieldVideo","setFilter","keyword","clampValueOnBlur","prevState","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","order_by","MdFeaturedVideo","MdOutlineComputer","interval","initFilterLocalStorage","sessionStorage","initFormFilter","TableListLiveStream","editCurrUserStream","isOpen1","onOpen1","onClose1","EditUserStream","onCloseUserStream","channel_id","d","day","Date","getUTCDate","getUTCMonth","getUTCFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","filterHeader","rows","rowIndex","cellIndex","paddingTop","MenuAgent","confirmActivePackage","originalData","onModalCreate","CreateNewPackage","listAdmin","infoPackage","setInfoPackage","user_id","package_name","package_days","stream_number","responseInfoPackage","mapPack","plan","handleFetchInfoUserPackageApi","InputLeftAddon","MdPerson","MdOutlineFolder","TableUserManager","inputSize","sizeStyles","fullName","word","toUpperCase","join","propTypes","PropTypes","defaultProps","deleteUserRequest","computePositionOnMount","CreateNewUser","password","getCurrUserID","MdVoicemail","PriceWrapper","borderTopColor","borderWidth","alignSelf","borderTopWidth","FixedPlugin","colorMode","toggleColorMode","useColorMode","zIndex","document","documentElement","dir","IoMdMoon","IoMdSunny","AuthIllustration","illustrationBackground","minH","bgPosition","borderBottomLeftRadius","image","ForgotPassword","textColorDetails","textColorBrand","user","stringify","formLogin","username","DefaultAuth","illustration","NavLink","to","TableManageServerLivestream","editAgentServer","detailAgentServer","assignAgentFor","assignAgentResellerFor","delAgentServer","resetAgent","MdOutlineAssignmentInd","MdOutlineAssignmentReturn","MdLockReset","user_obj","reseller_obj","EditAgentServer","max_stream","expired_at","MdComputer","isChecked","checked","isAdmin","CreateAgentServer","DetailAgentServer","AssignAgentFor","setListAdmin","responseEdit","users","fetchAdminListUserFunc","unassignAgentServerOut","assignAgentServerForNewUser","AssignResellerFor","BlankIllustration","borderBottomRightRadius","GOOGLE_KEY_MANAGEMENT_ENDPOINT","UPDATE_GOOGLE_KEY_MANAGEMENT_ENDPOINT","GoogleKeyAPI","CreateGoogleKey","responseNewKey","setFieldValue","isInvalid","pointerEvents","top","EmailIcon","LockIcon","detailGoogleKey","editGoogleKey","deleteGoogleKey","LuEye","AiOutlineDelete","DetailGoogleKey","EditGoogleKey","routesForAuthenticated","layout","path","MdHome","component","statisticsData","setStatisticsData","handleFetchDashboardStatisticsStreaming","setActiveTabId","setCurrentProfile","setPlanDetail","handleFetchProfile","responseProfile","Agency","responseListUserPackage","allUserPackage","currentUser","currUserPackage","pack","fetchUserPackage","gridTemplateColumns","MdVerifiedUser","setIsLoading","setPaginationData","selectedAgentServer","setSelectedAgentServer","menuSelected","listAdminUser","setListAdminUser","isOpenNewAgentServer","onOpenNewAgentServer","onCloseNewAgentServer","handleFetchListUserDetail","responseLisUser","meta","columnsListUser","sticky","AvatarText","HiOutlineMail","columnAction","userObj","ModalCustomGeneral","TableEmpty","handleOpenModalCreateAgent","tableUserStream","setTableUserStream","selectedUserStream","setSelectedUserStream","showArr","setShowArr","setActiveFilter","isOpenUserStream","onOpenUserStream","isOpenFilterModal","onOpenFilterModal","onCloseFilterModal","setSearch","filterParams","dataUserStream","stateTemp","handleFetchResourceOriginal","columnsDataComplex","fontStyle","objIndex","findIndex","handleClickArr","myArray","live_streaming","MenuUserStream","ModalCustom","rightIcon","RxReset","string","ref","useRef","setListServerAgent","listUserStream","setListUserStream","tableThreadStream","setTableThreadStream","tableVideosStream","setTableVideosStream","useOutsideClick","handler","handleClickOutside","dataEditVideoLivestream","setDataEditVideoLivestream","isOpenKillConfirm","onOpenKillConfirm","onCloseKillConfirm","isOpenDelConfirm","onOpenDelconfirm","onCloseDeleleConfirm","isOpenPlayRightAway","onOpenPlayRightAway","onClosePlayRightAway","isOpenCreateVideoStreamModal","onOpenCreateVideoStreamModal","onCloseCreateVideoStreamModal","isOpenDetailVideoStreamModal","onOpenDetailVideoStreamModal","onCloseDetailVideoStreamModal","isOpenEditVideoStreamModal","onOpenEditVideoStreamModal","onCloseEditVideoStreamModal","handleFetchListVideoStream","orderByArr","handleFetchListVideoStreamOriginal","metaVideo","useInterval","callback","delay","savedCallback","current","setInterval","clearInterval","current_page","responseServerLivestream","agent","handleFetchListAgentServerOfUser","formCreateStream","ModalStreamVideo","gridArea","startColor","endColor","SkeletonText","noOfLines","skeletonHeight","idUserStream","MdConnectedTv","tableServerLivestream","setTableServerLivestream","isOpenEditAgentServer","onOpenEditAgentServer","onCloseEditAgentServer","isOpenAssignAgentServer","onOpenAssignAgentServer","onCloseAssignAgentServer","isOpenAssignAgentResellerServer","onOpenAssignAgentResellerServer","onCloseAssignAgentResellerServer","isOpenDetailAgentServer","onOpenDetailAgentServer","onCloseDetailAgentServer","isOpenResetAgent","onOpenResetAgent","onCloseResetAgent","isOpenDelAgentServer","onOpenDelAgentServer","onCloseDelAgentServer","handleFetchAgentServerOfUserOriginal","serverInfo","columnsServerAgent","statuses","_ref10","_ref11","_ref12","columnsAdminServerAgent","_ref13","_ref14","responseConfirmReset","resetAgentServerStream","handleFetchAgentServerOfUser","MdAllInbox","tableList","setTableList","showPayment","other_info","show_payment","isOpenConfirmPayment","onOpenConfirmPayment","onCloseConfirmPayment","handleFetchListUserPack","responseListUserPack","fetchAdminListApi","adminList","col1","substring","textShadow","MdOutlineDateRange","colPayment","col3","confirmed","columnsServerAgentNoPayment","FcGoogle","selectedRow","setSelectedRow","isOpenNewGoogleKey","onOpenNewGoogleKey","onCloseNewGoogleKey","isOpenDetailGoogleKey","onOpenDetailGoogleKey","onCloseDetailGoogleKey","isOpenEditGoogleKey","onOpenEditGoogleKey","onCloseEditGoogleKey","isOpenDeleteGoogleKey","onOpenDeleteGoogleKey","onCloseDeleteGoogleKey","limitPage","setLimitPage","respListGoogleKey","google_keys","truncateName","colorPalette","thumbLabel","on","HiCheck","off","HiX","routeBlank","pl","IoArrowBack","colStart","colEnd","logo","UnorderedList","routePayments","isOpenBuyPackage","onOpenBuyPackage","onCloseBuyPackage","currentUserPackage","setCurrentUserPackage","infoPackageResp","arrInfoPackage","packageCode","discount","price_per_month","pricePerMonth","packageDetail","Stack","VStack","borderBottomRadius","desc","ListIcon","FaCheckCircle","planType","packageName","useLocation","pathname","selectMonth","setSelectMonth","selectThread","setSelectThread","fetchCurrentUser","arrColor","currUser","checkCurrPackage","ModalPackageConfirm","Tabs","TabList","Tab","_selected","_disabled","TabPanels","TabPanel","textTransform","hasArrow","IoInformationCircleSharp","PaymentQRCode","responseOrder","preOrderUserPackageApi","routesForNotAuthenticated","MdLock","SignIn","handleLoginNotification","Checkbox","Register","newUser","Auth","toggleSidebar","setToggleSidebar","getRoutes","routes","prop","Route","collapse","category","authBg","SidebarContext","float","minHeight","transitionDuration","transitionProperty","transitionTimingFunction","Redirect","Blank","mappingRouteByRole","object","routesFinal","child","key_child","exact","m","concat","AdminNavbarLinks","secondary","profile_","setIsOpen","flexWrap","toggleMenu","prev","ChevronUpIcon","ChevronDownIcon","handleRedirectPersonalProfile","handleLogoutEvent","AdminNavbar","scrolled","setScrolled","isSmallThan1200","useMediaQuery","changeNavbar","scrollY","addEventListener","removeEventListener","brandText","btnRef","onOpenLeftMenu","mainText","navbarBg","menuColor","backgroundPosition","backgroundSize","borderStyle","transitionDelay","IoMenuOutline","logoText","fixed","HSeparator","activeColor","inactiveColor","activeIcon","brandColor","activeRoute","routeName","createLinks","route","HStack","toLowerCase","SidebarDocs","Brand","Links","SidebarCard","renderTrack","opacity","renderThumb","renderView","Sidebar","sidebarBg","Scrollbars","autoHide","renderTrackVertical","renderThumbVertical","Content","Drawer","finalFocusRef","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","Dashboard","isOpenLeftMenu","onCloseLeftMenu","routeForRender","getActiveRoute","i","collapseActiveRoute","categoryActiveRoute","indexOf","getActiveNavbar","activeNavbar","collapseActiveNavbar","categoryActiveNavbar","getActiveNavbarText","messageNavbar","overflow","maxHeight","Portal","Navbar","NotFound","clear","decodedToken","jwtDecode","currentDate","getTime","App","ChakraProvider","theme","I18nextProvider","ToastContainer","autoClose","hideProgressBar","i18nIsDynamicList","AuthProvider","Router","HashRouter","PrivateRoute","AdminLayout","BlankLayout","AuthLayout","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","container","getElementById","createRoot","___CSS_LOADER_EXPORT___","module","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","amdO","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","getter","__esModule","a","getPrototypeOf","then","ns","create","def","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","tagName","scripts","getElementsByTagName","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","nc","__webpack_exports__"],"sourceRoot":""}